

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Nov 25 23:10:51 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47  0000                     
    48                           ; Version 2.10
    49                           ; Generated 31/07/2019 GMT
    50                           ; 
    51                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4550 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     _PORTBbits	set	3969
    83  0000                     _INTCON2bits	set	4081
    84  0000                     _INTCON3bits	set	4080
    85  0000                     _RCONbits	set	4048
    86  0000                     _TRISD	set	3989
    87  0000                     _PIR2bits	set	4001
    88  0000                     _EECON2	set	4007
    89  0000                     _INTCONbits	set	4082
    90  0000                     _EEDATA	set	4008
    91  0000                     _EEADR	set	4009
    92  0000                     _EECON1bits	set	4006
    93  0000                     _LATCbits	set	3979
    94  0000                     _LATDbits	set	3980
    95  0000                     _ADCON0bits	set	4034
    96  0000                     _ADCON2bits	set	4032
    97  0000                     _ADCON0	set	4034
    98  0000                     _ADCON1bits	set	4033
    99  0000                     _TRISAbits	set	3986
   100  0000                     _TRISDbits	set	3989
   101  0000                     _LATD	set	3980
   102  0000                     _PORTD	set	3971
   103  0000                     _LATC	set	3979
   104  0000                     _PORTC	set	3970
   105  0000                     _TRISBbits	set	3987
   106  0000                     _ADCON1	set	4033
   107  0000                     _LATB	set	3978
   108  0000                     _PORTB	set	3969
   109  0000                     _RCREG	set	4014
   110  0000                     _TXREG	set	4013
   111  0000                     _PIR1bits	set	3998
   112  0000                     _RCSTAbits	set	4011
   113  0000                     _TXSTAbits	set	4012
   114  0000                     _SPBRG	set	4015
   115  0000                     _OSCCON	set	4051
   116  0000                     _CCP2CON	set	4026
   117  0000                     _CCP1CON	set	4029
   118  0000                     _T2CON	set	4042
   119  0000                     _TRISCbits	set	3988
   120  0000                     _CCPR2L	set	4027
   121  0000                     _CCPR1L	set	4030
   122  0000                     _PR2	set	4043
   123  0000                     _PORTCbits	set	3970
   124  0000                     _T2CONbits	set	4042
   125  0000                     _PORTDbits	set	3971
   126  0000                     _RCIF	set	31989
   127                           
   128                           ; #config settings
   129  0000                     
   130                           	psect	cinit
   131  0013CC                     __pcinit:
   132                           	opt callstack 0
   133  0013CC                     start_initialization:
   134                           	opt callstack 0
   135  0013CC                     __initialization:
   136                           	opt callstack 0
   137                           
   138                           ; Clear objects allocated to BANK0 (18 bytes)
   139  0013CC  EE00  F060         	lfsr	0,__pbssBANK0
   140  0013D0  0E12               	movlw	18
   141  0013D2                     clear_0:
   142  0013D2  6AEE               	clrf	postinc0,c
   143  0013D4  06E8               	decf	wreg,f,c
   144  0013D6  E1FD               	bnz	clear_0
   145                           
   146                           ; Clear objects allocated to COMRAM (31 bytes)
   147  0013D8  EE00  F040         	lfsr	0,__pbssCOMRAM
   148  0013DC  0E1F               	movlw	31
   149  0013DE                     clear_1:
   150  0013DE  6AEE               	clrf	postinc0,c
   151  0013E0  06E8               	decf	wreg,f,c
   152  0013E2  E1FD               	bnz	clear_1
   153  0013E4                     end_of_initialization:
   154                           	opt callstack 0
   155  0013E4                     __end_of__initialization:
   156                           	opt callstack 0
   157  0013E4  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   158  0013E6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   159  0013E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   160  0013EA  6EF8               	movwf	tblptru,c
   161  0013EC  0100               	movlb	0
   162  0013EE  EFD6  F001         	goto	_main	;jump to C main() function
   163                           
   164                           	psect	bssCOMRAM
   165  000040                     __pbssCOMRAM:
   166                           	opt callstack 0
   167  000040                     _cont:
   168                           	opt callstack 0
   169  000040                     	ds	2
   170  000042                     _CoordenadaYY:
   171                           	opt callstack 0
   172  000042                     	ds	2
   173  000044                     _CoordenadaXX:
   174                           	opt callstack 0
   175  000044                     	ds	2
   176  000046                     _coordenaY:
   177                           	opt callstack 0
   178  000046                     	ds	2
   179  000048                     _coordenaX:
   180                           	opt callstack 0
   181  000048                     	ds	2
   182  00004A                     _pasosY:
   183                           	opt callstack 0
   184  00004A                     	ds	2
   185  00004C                     _pasosX:
   186                           	opt callstack 0
   187  00004C                     	ds	2
   188  00004E                     _pasos_convertidos:
   189                           	opt callstack 0
   190  00004E                     	ds	2
   191  000050                     _coordenada_anteriorY:
   192                           	opt callstack 0
   193  000050                     	ds	2
   194  000052                     _coordenada_anteriorX:
   195                           	opt callstack 0
   196  000052                     	ds	2
   197  000054                     _oneshot:
   198                           	opt callstack 0
   199  000054                     	ds	1
   200  000055                     _data:
   201                           	opt callstack 0
   202  000055                     	ds	1
   203  000056                     _Direccion_Memoria:
   204                           	opt callstack 0
   205  000056                     	ds	1
   206  000057                     _oneshotY:
   207                           	opt callstack 0
   208  000057                     	ds	1
   209  000058                     _oneshotX:
   210                           	opt callstack 0
   211  000058                     	ds	1
   212  000059                     _CZ:
   213                           	opt callstack 0
   214  000059                     	ds	2
   215  00005B                     _CY:
   216                           	opt callstack 0
   217  00005B                     	ds	2
   218  00005D                     _CX:
   219                           	opt callstack 0
   220  00005D                     	ds	2
   221                           
   222                           	psect	bssBANK0
   223  000060                     __pbssBANK0:
   224                           	opt callstack 0
   225  000060                     _coordenada_setpoint:
   226                           	opt callstack 0
   227  000060                     	ds	11
   228  00006B                     _coordenada_array:
   229                           	opt callstack 0
   230  00006B                     	ds	7
   231                           
   232                           	psect	cstackCOMRAM
   233  000001                     __pcstackCOMRAM:
   234                           	opt callstack 0
   235  000001                     ??_Actuator_Touch:
   236  000001                     ??_Seria_Decodificacion_Memoria:
   237  000001                     ?_PWM_OneshotX:
   238                           	opt callstack 0
   239  000001                     ?_PWM_OneshotY:
   240                           	opt callstack 0
   241  000001                     ?_isspace:
   242                           	opt callstack 0
   243  000001                     ?_isdigit:
   244                           	opt callstack 0
   245  000001                     ?___wmul:
   246                           	opt callstack 0
   247  000001                     ?___aldiv:
   248                           	opt callstack 0
   249  000001                     ?___xxtofl:
   250                           	opt callstack 0
   251  000001                     USART_Tx@data:
   252                           	opt callstack 0
   253  000001                     EEPROM_Rx@direccion:
   254                           	opt callstack 0
   255  000001                     EEPROM_Tx@dato:
   256                           	opt callstack 0
   257  000001                     PWM_OneshotX@countX:
   258                           	opt callstack 0
   259  000001                     PWM_OneshotY@countY:
   260                           	opt callstack 0
   261  000001                     USART_RxS@pointer:
   262                           	opt callstack 0
   263  000001                     ___wmul@multiplier:
   264                           	opt callstack 0
   265  000001                     isdigit@c:
   266                           	opt callstack 0
   267  000001                     isspace@c:
   268                           	opt callstack 0
   269  000001                     ___aldiv@dividend:
   270                           	opt callstack 0
   271  000001                     ___xxtofl@val:
   272                           	opt callstack 0
   273                           
   274                           ; 4 bytes @ 0x0
   275  000001                     	ds	1
   276  000002                     ?_Motor_Calcular_PasosX:
   277                           	opt callstack 0
   278  000002                     ?_Motor_Calcular_PasosY:
   279                           	opt callstack 0
   280  000002                     EEPROM_Tx@direccion:
   281                           	opt callstack 0
   282  000002                     Motor_Calcular_PasosX@coordenada_converX:
   283                           	opt callstack 0
   284  000002                     Motor_Calcular_PasosY@coordenada_converY:
   285                           	opt callstack 0
   286                           
   287                           ; 2 bytes @ 0x1
   288  000002                     	ds	1
   289  000003                     ??_isspace:
   290  000003                     ??_isdigit:
   291  000003                     ??_USART_RxS:
   292  000003                     Seria_Decodificacion_Memoria@direccion:
   293                           	opt callstack 0
   294  000003                     PWM_GeneratePulsos@pulsosX:
   295                           	opt callstack 0
   296  000003                     Serial_Escritura_Memoria@string_setpoint:
   297                           	opt callstack 0
   298  000003                     ___wmul@multiplicand:
   299                           	opt callstack 0
   300                           
   301                           ; 2 bytes @ 0x2
   302  000003                     	ds	1
   303  000004                     ??_Motor_Calcular_PasosX:
   304  000004                     ??_Motor_Calcular_PasosY:
   305                           
   306                           ; 1 bytes @ 0x3
   307  000004                     	ds	1
   308  000005                     ??_Serial_Escritura_Memoria:
   309  000005                     ??___xxtofl:
   310  000005                     PWM_GeneratePulsos@pulsosY:
   311                           	opt callstack 0
   312  000005                     ___wmul@product:
   313                           	opt callstack 0
   314  000005                     ___aldiv@divisor:
   315                           	opt callstack 0
   316                           
   317                           ; 4 bytes @ 0x4
   318  000005                     	ds	1
   319  000006                     USART_RxS@lenght:
   320                           	opt callstack 0
   321                           
   322                           ; 1 bytes @ 0x5
   323  000006                     	ds	1
   324  000007                     ??_PWM_GeneratePulsos:
   325  000007                     Serial_Escritura_Memoria@direccion:
   326                           	opt callstack 0
   327  000007                     _isspace$2192:
   328                           	opt callstack 0
   329  000007                     USART_RxS@i:
   330                           	opt callstack 0
   331                           
   332                           ; 2 bytes @ 0x6
   333  000007                     	ds	1
   334  000008                     ?_atoi:
   335                           	opt callstack 0
   336  000008                     PWM_GeneratePulsos@Oupcode:
   337                           	opt callstack 0
   338  000008                     Serial_Escritura_Memoria@direccionFinal:
   339                           	opt callstack 0
   340  000008                     atoi@s:
   341                           	opt callstack 0
   342                           
   343                           ; 2 bytes @ 0x7
   344  000008                     	ds	1
   345  000009                     ___aldiv@counter:
   346                           	opt callstack 0
   347  000009                     ___xxtofl@sign:
   348                           	opt callstack 0
   349  000009                     PWM_GeneratePulsos@countX:
   350                           	opt callstack 0
   351  000009                     Serial_Escritura_Memoria@i:
   352                           	opt callstack 0
   353                           
   354                           ; 2 bytes @ 0x8
   355  000009                     	ds	1
   356  00000A                     ??_atoi:
   357  00000A                     ___aldiv@sign:
   358                           	opt callstack 0
   359  00000A                     ___xxtofl@exp:
   360                           	opt callstack 0
   361                           
   362                           ; 1 bytes @ 0x9
   363  00000A                     	ds	1
   364  00000B                     PWM_GeneratePulsos@countY:
   365                           	opt callstack 0
   366  00000B                     Serial_Escritura_Memoria@i_1034:
   367                           	opt callstack 0
   368  00000B                     ___aldiv@quotient:
   369                           	opt callstack 0
   370  00000B                     ___xxtofl@arg:
   371                           	opt callstack 0
   372                           
   373                           ; 4 bytes @ 0xA
   374  00000B                     	ds	2
   375  00000D                     Serial_Escritura_Memoria@i_1035:
   376                           	opt callstack 0
   377                           
   378                           ; 2 bytes @ 0xC
   379  00000D                     	ds	1
   380  00000E                     atoi@neg:
   381                           	opt callstack 0
   382                           
   383                           ; 2 bytes @ 0xD
   384  00000E                     	ds	1
   385  00000F                     ?___fldiv:
   386                           	opt callstack 0
   387  00000F                     USART_Init@BAUD:
   388                           	opt callstack 0
   389  00000F                     ___fldiv@b:
   390                           	opt callstack 0
   391                           
   392                           ; 4 bytes @ 0xE
   393  00000F                     	ds	1
   394  000010                     _atoi$2174:
   395                           	opt callstack 0
   396                           
   397                           ; 2 bytes @ 0xF
   398  000010                     	ds	2
   399  000012                     _atoi$2176:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x11
   403  000012                     	ds	1
   404  000013                     ___fldiv@a:
   405                           	opt callstack 0
   406  000013                     _USART_Init$2428:
   407                           	opt callstack 0
   408                           
   409                           ; 4 bytes @ 0x12
   410  000013                     	ds	1
   411  000014                     _atoi$2175:
   412                           	opt callstack 0
   413                           
   414                           ; 1 bytes @ 0x13
   415  000014                     	ds	1
   416  000015                     atoi@n:
   417                           	opt callstack 0
   418                           
   419                           ; 2 bytes @ 0x14
   420  000015                     	ds	2
   421  000017                     ??___fldiv:
   422  000017                     Serial_DecodificacionX@string_coordenada:
   423                           	opt callstack 0
   424  000017                     Serial_DecodificacionY@string_coordenada:
   425                           	opt callstack 0
   426  000017                     Serial_Lectura_Memoria@pointerCX:
   427                           	opt callstack 0
   428                           
   429                           ; 2 bytes @ 0x16
   430  000017                     	ds	2
   431  000019                     Serial_DecodificacionX@pointerCX:
   432                           	opt callstack 0
   433  000019                     Serial_DecodificacionY@pointerCY:
   434                           	opt callstack 0
   435  000019                     Serial_Lectura_Memoria@pointerCY:
   436                           	opt callstack 0
   437                           
   438                           ; 2 bytes @ 0x18
   439  000019                     	ds	2
   440  00001B                     ??_Serial_DecodificacionY:
   441  00001B                     Serial_Lectura_Memoria@pointerCZ:
   442                           	opt callstack 0
   443  00001B                     Serial_DecodificacionX@coordenadaX:
   444                           	opt callstack 0
   445  00001B                     ___fldiv@rem:
   446                           	opt callstack 0
   447                           
   448                           ; 4 bytes @ 0x1A
   449  00001B                     	ds	2
   450  00001D                     Serial_DecodificacionY@coordenadaY:
   451                           	opt callstack 0
   452  00001D                     Serial_Lectura_Memoria@coordenadaX:
   453                           	opt callstack 0
   454                           
   455                           ; 3 bytes @ 0x1C
   456  00001D                     	ds	1
   457  00001E                     Serial_DecodificacionX@i:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0x1D
   461  00001E                     	ds	1
   462  00001F                     ___fldiv@sign:
   463                           	opt callstack 0
   464                           
   465                           ; 1 bytes @ 0x1E
   466  00001F                     	ds	1
   467  000020                     Serial_DecodificacionY@i:
   468                           	opt callstack 0
   469  000020                     ___fldiv@new_exp:
   470                           	opt callstack 0
   471  000020                     Serial_Lectura_Memoria@coordenadaY:
   472                           	opt callstack 0
   473                           
   474                           ; 3 bytes @ 0x1F
   475  000020                     	ds	2
   476  000022                     ___fldiv@grs:
   477                           	opt callstack 0
   478                           
   479                           ; 4 bytes @ 0x21
   480  000022                     	ds	1
   481  000023                     Serial_Lectura_Memoria@coordenadaZ:
   482                           	opt callstack 0
   483                           
   484                           ; 3 bytes @ 0x22
   485  000023                     	ds	3
   486  000026                     Serial_Lectura_Memoria@direccionX:
   487                           	opt callstack 0
   488  000026                     ___fldiv@bexp:
   489                           	opt callstack 0
   490                           
   491                           ; 1 bytes @ 0x25
   492  000026                     	ds	1
   493  000027                     Serial_Lectura_Memoria@direccionY:
   494                           	opt callstack 0
   495  000027                     ___fldiv@aexp:
   496                           	opt callstack 0
   497                           
   498                           ; 1 bytes @ 0x26
   499  000027                     	ds	1
   500  000028                     ?___fltol:
   501                           	opt callstack 0
   502  000028                     Serial_Lectura_Memoria@direccionZ:
   503                           	opt callstack 0
   504  000028                     ___fltol@f1:
   505                           	opt callstack 0
   506                           
   507                           ; 4 bytes @ 0x27
   508  000028                     	ds	1
   509  000029                     Serial_Lectura_Memoria@direccion:
   510                           	opt callstack 0
   511                           
   512                           ; 1 bytes @ 0x28
   513  000029                     	ds	1
   514  00002A                     Serial_Lectura_Memoria@i:
   515                           	opt callstack 0
   516                           
   517                           ; 1 bytes @ 0x29
   518  00002A                     	ds	1
   519  00002B                     Serial_Lectura_Memoria@i_1027:
   520                           	opt callstack 0
   521                           
   522                           ; 1 bytes @ 0x2A
   523  00002B                     	ds	1
   524  00002C                     ??___fltol:
   525  00002C                     Serial_Lectura_Memoria@i_1028:
   526                           	opt callstack 0
   527                           
   528                           ; 1 bytes @ 0x2B
   529  00002C                     	ds	4
   530  000030                     ___fltol@sign1:
   531                           	opt callstack 0
   532                           
   533                           ; 1 bytes @ 0x2F
   534  000030                     	ds	1
   535  000031                     ___fltol@exp1:
   536                           	opt callstack 0
   537                           
   538                           ; 1 bytes @ 0x30
   539  000031                     	ds	1
   540  000032                     ?_Motor_Conversion:
   541                           	opt callstack 0
   542  000032                     Motor_Conversion@Coordenada:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x31
   546  000032                     	ds	2
   547  000034                     Motor_Conversion@conversion:
   548                           	opt callstack 0
   549                           
   550                           ; 4 bytes @ 0x33
   551  000034                     	ds	4
   552  000038                     Motor_Movimiento@CoordenadaX:
   553                           	opt callstack 0
   554                           
   555                           ; 2 bytes @ 0x37
   556  000038                     	ds	2
   557  00003A                     Motor_Movimiento@CoordenadaY:
   558                           	opt callstack 0
   559                           
   560                           ; 2 bytes @ 0x39
   561  00003A                     	ds	2
   562  00003C                     Motor_Movimiento@Oupcode:
   563                           	opt callstack 0
   564                           
   565                           ; 1 bytes @ 0x3B
   566  00003C                     	ds	1
   567  00003D                     ??_main:
   568                           
   569                           ; 1 bytes @ 0x3C
   570  00003D                     	ds	2
   571  00003F                     main@Oupcode:
   572                           	opt callstack 0
   573                           
   574                           ; 1 bytes @ 0x3E
   575  00003F                     	ds	1
   576                           
   577 ;;
   578 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   579 ;;
   580 ;; *************** function _main *****************
   581 ;; Defined at:
   582 ;;		line 21 in file "serial.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;  Oupcode         1   62[COMRAM] unsigned char 
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   596 ;;      Params:         0       0       0       0       0       0       0       0       0
   597 ;;      Locals:         1       0       0       0       0       0       0       0       0
   598 ;;      Temps:          2       0       0       0       0       0       0       0       0
   599 ;;      Totals:         3       0       0       0       0       0       0       0       0
   600 ;;Total ram usage:        3 bytes
   601 ;; Hardware stack levels required when called:    5
   602 ;; This function calls:
   603 ;;		_Actuator_Hold
   604 ;;		_Actuator_Retrain
   605 ;;		_Actuator_Touch
   606 ;;		_Motor_Movimiento
   607 ;;		_Seria_Decodificacion_Memoria
   608 ;;		_Serial_DecodificacionX
   609 ;;		_Serial_DecodificacionY
   610 ;;		_Serial_Escritura_Memoria
   611 ;;		_Serial_Lectura_Memoria
   612 ;;		_USART_Init
   613 ;;		_USART_Rx
   614 ;;		_USART_RxS
   615 ;;		_USART_Tx
   616 ;; This function is called by:
   617 ;;		Startup code after reset
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           	psect	text0
   622  0003AC                     __ptext0:
   623                           	opt callstack 0
   624  0003AC                     _main:
   625                           	opt callstack 26
   626  0003AC                     
   627                           ;serial.c: 22:     USART_Init(9600);
   628  0003AC  0E80               	movlw	128
   629  0003AE  6E0F               	movwf	USART_Init@BAUD^0,c
   630  0003B0  0E25               	movlw	37
   631  0003B2  6E10               	movwf	(USART_Init@BAUD+1)^0,c
   632  0003B4  0E00               	movlw	0
   633  0003B6  6E11               	movwf	(USART_Init@BAUD+2)^0,c
   634  0003B8  0E00               	movlw	0
   635  0003BA  6E12               	movwf	(USART_Init@BAUD+3)^0,c
   636  0003BC  EC3E  F008         	call	_USART_Init	;wreg free
   637  0003C0                     
   638                           ;serial.c: 23:     TRISDbits.TRISD0=0;
   639  0003C0  9095               	bcf	149,0,c	;volatile
   640  0003C2                     
   641                           ;serial.c: 24:     TRISDbits.TRISD2=0;
   642  0003C2  9495               	bcf	149,2,c	;volatile
   643  0003C4                     
   644                           ;serial.c: 25:     TRISDbits.TRISD1=0;
   645  0003C4  9295               	bcf	149,1,c	;volatile
   646  0003C6                     
   647                           ;serial.c: 26:     TRISDbits.TRISD3=0;
   648  0003C6  9695               	bcf	149,3,c	;volatile
   649  0003C8                     
   650                           ;serial.c: 27:     PORTDbits.RD0=1;
   651  0003C8  8083               	bsf	131,0,c	;volatile
   652  0003CA                     
   653                           ;serial.c: 28:     PORTDbits.RD0=1;
   654  0003CA  8083               	bsf	131,0,c	;volatile
   655  0003CC                     
   656                           ;serial.c: 29:      TRISCbits.RC1 = 0;
   657  0003CC  9294               	bcf	148,1,c	;volatile
   658  0003CE                     
   659                           ;serial.c: 30:     TRISCbits.RC2 = 0;
   660  0003CE  9494               	bcf	148,2,c	;volatile
   661  0003D0                     
   662                           ;serial.c: 31:     PORTCbits.RC1=0;
   663  0003D0  9282               	bcf	130,1,c	;volatile
   664  0003D2                     l2980:
   665                           
   666                           ;serial.c: 33:         char Oupcode = USART_Rx();
   667  0003D2  EC61  F00A         	call	_USART_Rx	;wreg free
   668  0003D6  6E3F               	movwf	main@Oupcode^0,c
   669                           
   670                           ;serial.c: 34:         switch (Oupcode) {
   671  0003D8  EF87  F002         	goto	l3024
   672  0003DC                     l2982:
   673                           
   674                           ;serial.c: 36:                 USART_RxS(7, coordenada_array);
   675  0003DC  0E6B               	movlw	low _coordenada_array
   676  0003DE  6E01               	movwf	USART_RxS@pointer^0,c
   677  0003E0  0E00               	movlw	high _coordenada_array
   678  0003E2  6E02               	movwf	(USART_RxS@pointer+1)^0,c
   679  0003E4  0E07               	movlw	7
   680  0003E6  EC19  F009         	call	_USART_RxS
   681  0003EA                     
   682                           ;serial.c: 37:                 Serial_DecodificacionX(coordenada_array, &CX);
   683  0003EA  0E6B               	movlw	low _coordenada_array
   684  0003EC  6E17               	movwf	Serial_DecodificacionX@string_coordenada^0,c
   685  0003EE  0E00               	movlw	high _coordenada_array
   686  0003F0  6E18               	movwf	(Serial_DecodificacionX@string_coordenada+1)^0,c
   687  0003F2  0E5D               	movlw	low _CX
   688  0003F4  6E19               	movwf	Serial_DecodificacionX@pointerCX^0,c
   689  0003F6  0E00               	movlw	high _CX
   690  0003F8  6E1A               	movwf	(Serial_DecodificacionX@pointerCX+1)^0,c
   691  0003FA  ECE8  F008         	call	_Serial_DecodificacionX	;wreg free
   692  0003FE                     
   693                           ;serial.c: 38:                 Serial_DecodificacionY(coordenada_array, &CY);
   694  0003FE  0E6B               	movlw	low _coordenada_array
   695  000400  6E17               	movwf	Serial_DecodificacionY@string_coordenada^0,c
   696  000402  0E00               	movlw	high _coordenada_array
   697  000404  6E18               	movwf	(Serial_DecodificacionY@string_coordenada+1)^0,c
   698  000406  0E5B               	movlw	low _CY
   699  000408  6E19               	movwf	Serial_DecodificacionY@pointerCY^0,c
   700  00040A  0E00               	movlw	high _CY
   701  00040C  6E1A               	movwf	(Serial_DecodificacionY@pointerCY+1)^0,c
   702  00040E  ECB1  F008         	call	_Serial_DecodificacionY	;wreg free
   703  000412                     
   704                           ;serial.c: 39:                 Motor_Movimiento(Oupcode, CX, CY);
   705  000412  C05D  F038         	movff	_CX,Motor_Movimiento@CoordenadaX
   706  000416  C05E  F039         	movff	_CX+1,Motor_Movimiento@CoordenadaX+1
   707  00041A  C05B  F03A         	movff	_CY,Motor_Movimiento@CoordenadaY
   708  00041E  C05C  F03B         	movff	_CY+1,Motor_Movimiento@CoordenadaY+1
   709  000422  503F               	movf	main@Oupcode^0,w,c
   710  000424  EC01  F008         	call	_Motor_Movimiento
   711                           
   712                           ;serial.c: 40:                 break;
   713  000428  EFE9  F001         	goto	l2980
   714  00042C                     l2990:
   715                           
   716                           ;serial.c: 42:                 USART_RxS(7, coordenada_array);
   717  00042C  0E6B               	movlw	low _coordenada_array
   718  00042E  6E01               	movwf	USART_RxS@pointer^0,c
   719  000430  0E00               	movlw	high _coordenada_array
   720  000432  6E02               	movwf	(USART_RxS@pointer+1)^0,c
   721  000434  0E07               	movlw	7
   722  000436  EC19  F009         	call	_USART_RxS
   723  00043A                     
   724                           ;serial.c: 43:                 Serial_DecodificacionX(coordenada_array, &CX);
   725  00043A  0E6B               	movlw	low _coordenada_array
   726  00043C  6E17               	movwf	Serial_DecodificacionX@string_coordenada^0,c
   727  00043E  0E00               	movlw	high _coordenada_array
   728  000440  6E18               	movwf	(Serial_DecodificacionX@string_coordenada+1)^0,c
   729  000442  0E5D               	movlw	low _CX
   730  000444  6E19               	movwf	Serial_DecodificacionX@pointerCX^0,c
   731  000446  0E00               	movlw	high _CX
   732  000448  6E1A               	movwf	(Serial_DecodificacionX@pointerCX+1)^0,c
   733  00044A  ECE8  F008         	call	_Serial_DecodificacionX	;wreg free
   734  00044E                     
   735                           ;serial.c: 44:                 Serial_DecodificacionY(coordenada_array, &CY);
   736  00044E  0E6B               	movlw	low _coordenada_array
   737  000450  6E17               	movwf	Serial_DecodificacionY@string_coordenada^0,c
   738  000452  0E00               	movlw	high _coordenada_array
   739  000454  6E18               	movwf	(Serial_DecodificacionY@string_coordenada+1)^0,c
   740  000456  0E5B               	movlw	low _CY
   741  000458  6E19               	movwf	Serial_DecodificacionY@pointerCY^0,c
   742  00045A  0E00               	movlw	high _CY
   743  00045C  6E1A               	movwf	(Serial_DecodificacionY@pointerCY+1)^0,c
   744  00045E  ECB1  F008         	call	_Serial_DecodificacionY	;wreg free
   745  000462                     
   746                           ;serial.c: 45:                 Motor_Movimiento(Oupcode, CX, CY);
   747  000462  C05D  F038         	movff	_CX,Motor_Movimiento@CoordenadaX
   748  000466  C05E  F039         	movff	_CX+1,Motor_Movimiento@CoordenadaX+1
   749  00046A  C05B  F03A         	movff	_CY,Motor_Movimiento@CoordenadaY
   750  00046E  C05C  F03B         	movff	_CY+1,Motor_Movimiento@CoordenadaY+1
   751  000472  503F               	movf	main@Oupcode^0,w,c
   752  000474  EC01  F008         	call	_Motor_Movimiento
   753                           
   754                           ;serial.c: 46:                 break;
   755  000478  EFE9  F001         	goto	l2980
   756  00047C                     l2998:
   757                           
   758                           ;serial.c: 48:                 Actuator_Touch();
   759  00047C  EC3D  F00A         	call	_Actuator_Touch	;wreg free
   760                           
   761                           ;serial.c: 49:                 break;
   762  000480  EFE9  F001         	goto	l2980
   763  000484                     l3000:
   764                           
   765                           ;serial.c: 51:                 Actuator_Hold();
   766  000484  EC6C  F00A         	call	_Actuator_Hold	;wreg free
   767                           
   768                           ;serial.c: 52:                 break;
   769  000488  EFE9  F001         	goto	l2980
   770  00048C                     l3002:
   771                           
   772                           ;serial.c: 54:                 Actuator_Retrain();
   773  00048C  EC6A  F00A         	call	_Actuator_Retrain	;wreg free
   774                           
   775                           ;serial.c: 55:                 break;
   776  000490  EFE9  F001         	goto	l2980
   777  000494                     l3004:
   778                           
   779                           ;serial.c: 57:                 Direccion_Memoria = USART_Rx();
   780  000494  EC61  F00A         	call	_USART_Rx	;wreg free
   781  000498  6E56               	movwf	_Direccion_Memoria^0,c
   782  00049A                     
   783                           ;serial.c: 58:                 Direccion_Memoria = Seria_Decodificacion_Memoria(Direccio
      +                          n_Memoria);
   784  00049A  5056               	movf	_Direccion_Memoria^0,w,c
   785  00049C  ECE4  F004         	call	_Seria_Decodificacion_Memoria
   786  0004A0  6E56               	movwf	_Direccion_Memoria^0,c
   787  0004A2                     
   788                           ;serial.c: 59:                 Serial_Lectura_Memoria(Direccion_Memoria, &CX, &CY, &CZ);
   789  0004A2  0E5D               	movlw	low _CX
   790  0004A4  6E17               	movwf	Serial_Lectura_Memoria@pointerCX^0,c
   791  0004A6  0E00               	movlw	high _CX
   792  0004A8  6E18               	movwf	(Serial_Lectura_Memoria@pointerCX+1)^0,c
   793  0004AA  0E5B               	movlw	low _CY
   794  0004AC  6E19               	movwf	Serial_Lectura_Memoria@pointerCY^0,c
   795  0004AE  0E00               	movlw	high _CY
   796  0004B0  6E1A               	movwf	(Serial_Lectura_Memoria@pointerCY+1)^0,c
   797  0004B2  0E59               	movlw	low _CZ
   798  0004B4  6E1B               	movwf	Serial_Lectura_Memoria@pointerCZ^0,c
   799  0004B6  0E00               	movlw	high _CZ
   800  0004B8  6E1C               	movwf	(Serial_Lectura_Memoria@pointerCZ+1)^0,c
   801  0004BA  5056               	movf	_Direccion_Memoria^0,w,c
   802  0004BC  EC7F  F006         	call	_Serial_Lectura_Memoria
   803  0004C0                     
   804                           ;serial.c: 61:                 Motor_Movimiento(Oupcode, CX, CY);
   805  0004C0  C05D  F038         	movff	_CX,Motor_Movimiento@CoordenadaX
   806  0004C4  C05E  F039         	movff	_CX+1,Motor_Movimiento@CoordenadaX+1
   807  0004C8  C05B  F03A         	movff	_CY,Motor_Movimiento@CoordenadaY
   808  0004CC  C05C  F03B         	movff	_CY+1,Motor_Movimiento@CoordenadaY+1
   809  0004D0  503F               	movf	main@Oupcode^0,w,c
   810  0004D2  EC01  F008         	call	_Motor_Movimiento
   811                           
   812                           ;serial.c: 62:                 break;
   813  0004D6  EFE9  F001         	goto	l2980
   814  0004DA                     l3012:
   815                           
   816                           ;serial.c: 64:                 Direccion_Memoria = USART_Rx();
   817  0004DA  EC61  F00A         	call	_USART_Rx	;wreg free
   818  0004DE  6E56               	movwf	_Direccion_Memoria^0,c
   819  0004E0                     
   820                           ;serial.c: 65:                 USART_RxS(11, coordenada_setpoint);
   821  0004E0  0E60               	movlw	low _coordenada_setpoint
   822  0004E2  6E01               	movwf	USART_RxS@pointer^0,c
   823  0004E4  0E00               	movlw	high _coordenada_setpoint
   824  0004E6  6E02               	movwf	(USART_RxS@pointer+1)^0,c
   825  0004E8  0E0B               	movlw	11
   826  0004EA  EC19  F009         	call	_USART_RxS
   827  0004EE                     
   828                           ;serial.c: 66:                 USART_Tx('M');
   829  0004EE  0E4D               	movlw	77
   830  0004F0  EC4C  F00A         	call	_USART_Tx
   831  0004F4                     
   832                           ;serial.c: 67:                 Direccion_Memoria = Seria_Decodificacion_Memoria(Direccio
      +                          n_Memoria);
   833  0004F4  5056               	movf	_Direccion_Memoria^0,w,c
   834  0004F6  ECE4  F004         	call	_Seria_Decodificacion_Memoria
   835  0004FA  6E56               	movwf	_Direccion_Memoria^0,c
   836  0004FC                     
   837                           ;serial.c: 68:                 Serial_Escritura_Memoria(Direccion_Memoria,coordenada_set
      +                          point);
   838  0004FC  0E60               	movlw	low _coordenada_setpoint
   839  0004FE  6E03               	movwf	Serial_Escritura_Memoria@string_setpoint^0,c
   840  000500  0E00               	movlw	high _coordenada_setpoint
   841  000502  6E04               	movwf	(Serial_Escritura_Memoria@string_setpoint+1)^0,c
   842  000504  5056               	movf	_Direccion_Memoria^0,w,c
   843  000506  ECF5  F006         	call	_Serial_Escritura_Memoria
   844                           
   845                           ;serial.c: 69:                 break;
   846  00050A  EFE9  F001         	goto	l2980
   847  00050E                     l3024:
   848  00050E  503F               	movf	main@Oupcode^0,w,c
   849  000510  6E3D               	movwf	??_main^0,c
   850  000512  6A3E               	clrf	(??_main+1)^0,c
   851                           
   852                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   853                           ; Switch size 1, requested type "simple"
   854                           ; Number of cases is 1, Range of values is 0 to 0
   855                           ; switch strategies available:
   856                           ; Name         Instructions Cycles
   857                           ; simple_byte            4     3 (average)
   858                           ;	Chosen strategy is simple_byte
   859  000514  503E               	movf	(??_main+1)^0,w,c
   860  000516  0A00               	xorlw	0	; case 0
   861  000518  B4D8               	btfsc	status,2,c
   862  00051A  EF91  F002         	goto	l3058
   863  00051E  EFE9  F001         	goto	l2980
   864  000522                     l3058:
   865                           
   866                           ; Switch size 1, requested type "simple"
   867                           ; Number of cases is 7, Range of values is 70 to 84
   868                           ; switch strategies available:
   869                           ; Name         Instructions Cycles
   870                           ; simple_byte           22    12 (average)
   871                           ;	Chosen strategy is simple_byte
   872  000522  503D               	movf	??_main^0,w,c
   873  000524  0A46               	xorlw	70	; case 70
   874  000526  B4D8               	btfsc	status,2,c
   875  000528  EFEE  F001         	goto	l2982
   876  00052C  0A0E               	xorlw	14	; case 72
   877  00052E  B4D8               	btfsc	status,2,c
   878  000530  EF42  F002         	goto	l3000
   879  000534  0A05               	xorlw	5	; case 77
   880  000536  B4D8               	btfsc	status,2,c
   881  000538  EF6D  F002         	goto	l3012
   882  00053C  0A02               	xorlw	2	; case 79
   883  00053E  B4D8               	btfsc	status,2,c
   884  000540  EF4A  F002         	goto	l3004
   885  000544  0A1D               	xorlw	29	; case 82
   886  000546  B4D8               	btfsc	status,2,c
   887  000548  EF46  F002         	goto	l3002
   888  00054C  0A01               	xorlw	1	; case 83
   889  00054E  B4D8               	btfsc	status,2,c
   890  000550  EF16  F002         	goto	l2990
   891  000554  0A07               	xorlw	7	; case 84
   892  000556  B4D8               	btfsc	status,2,c
   893  000558  EF3E  F002         	goto	l2998
   894  00055C  EFE9  F001         	goto	l2980
   895  000560  EF07  F000         	goto	start
   896  000564                     __end_of_main:
   897                           	opt callstack 0
   898                           
   899 ;; *************** function _USART_RxS *****************
   900 ;; Defined at:
   901 ;;		line 48 in file "UART.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;  lenght          1    wreg     unsigned char 
   904 ;;  pointer         2    0[COMRAM] PTR unsigned char 
   905 ;;		 -> coordenada_setpoint(11), coordenada_array(7), 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  lenght          1    5[COMRAM] unsigned char 
   908 ;;  i               2    6[COMRAM] int 
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      void 
   911 ;; Registers used:
   912 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   918 ;;      Params:         2       0       0       0       0       0       0       0       0
   919 ;;      Locals:         3       0       0       0       0       0       0       0       0
   920 ;;      Temps:          3       0       0       0       0       0       0       0       0
   921 ;;      Totals:         8       0       0       0       0       0       0       0       0
   922 ;;Total ram usage:        8 bytes
   923 ;; Hardware stack levels used:    1
   924 ;; Hardware stack levels required when called:    2
   925 ;; This function calls:
   926 ;;		Nothing
   927 ;; This function is called by:
   928 ;;		_main
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text1
   933  001232                     __ptext1:
   934                           	opt callstack 0
   935  001232                     _USART_RxS:
   936                           	opt callstack 28
   937                           
   938                           ;incstack = 0
   939                           ;USART_RxS@lenght stored from wreg
   940  001232  6E06               	movwf	USART_RxS@lenght^0,c
   941  001234                     
   942                           ;UART.c: 49:     for (int i = 0; i < lenght; i++)
   943  001234  0E00               	movlw	0
   944  001236  6E08               	movwf	(USART_RxS@i+1)^0,c
   945  001238  0E00               	movlw	0
   946  00123A  6E07               	movwf	USART_RxS@i^0,c
   947  00123C  EF31  F009         	goto	l2772
   948  001240                     l118:
   949  001240  AA9E               	btfss	3998,5,c	;volatile
   950  001242  EF25  F009         	goto	u1761
   951  001246  EF27  F009         	goto	u1760
   952  00124A                     u1761:
   953  00124A  EF20  F009         	goto	l118
   954  00124E                     u1760:
   955  00124E                     
   956                           ;UART.c: 52:             pointer[i] = RCREG;
   957  00124E  5007               	movf	USART_RxS@i^0,w,c
   958  001250  2401               	addwf	USART_RxS@pointer^0,w,c
   959  001252  6ED9               	movwf	fsr2l,c
   960  001254  5008               	movf	(USART_RxS@i+1)^0,w,c
   961  001256  2002               	addwfc	(USART_RxS@pointer+1)^0,w,c
   962  001258  6EDA               	movwf	fsr2h,c
   963  00125A  CFAE FFDF          	movff	4014,indf2	;volatile
   964  00125E                     
   965                           ;UART.c: 53:         }
   966  00125E  4A07               	infsnz	USART_RxS@i^0,f,c
   967  001260  2A08               	incf	(USART_RxS@i+1)^0,f,c
   968  001262                     l2772:
   969  001262  5006               	movf	USART_RxS@lenght^0,w,c
   970  001264  6E03               	movwf	??_USART_RxS^0,c
   971  001266  6A04               	clrf	(??_USART_RxS+1)^0,c
   972  001268  5003               	movf	??_USART_RxS^0,w,c
   973  00126A  5C07               	subwf	USART_RxS@i^0,w,c
   974  00126C  5008               	movf	(USART_RxS@i+1)^0,w,c
   975  00126E  0A80               	xorlw	128
   976  001270  6E05               	movwf	(??_USART_RxS+2)^0,c
   977  001272  5004               	movf	(??_USART_RxS+1)^0,w,c
   978  001274  0A80               	xorlw	128
   979  001276  5805               	subwfb	(??_USART_RxS+2)^0,w,c
   980  001278  A0D8               	btfss	status,0,c
   981  00127A  EF41  F009         	goto	u1771
   982  00127E  EF43  F009         	goto	u1770
   983  001282                     u1771:
   984  001282  EF20  F009         	goto	l118
   985  001286                     u1770:
   986  001286  0012               	return		;funcret
   987  001288                     __end_of_USART_RxS:
   988                           	opt callstack 0
   989                           
   990 ;; *************** function _USART_Rx *****************
   991 ;; Defined at:
   992 ;;		line 30 in file "UART.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      unsigned char 
   999 ;; Registers used:
  1000 ;;		wreg, status,2
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1006 ;;      Params:         0       0       0       0       0       0       0       0       0
  1007 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1009 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1010 ;;Total ram usage:        0 bytes
  1011 ;; Hardware stack levels used:    1
  1012 ;; Hardware stack levels required when called:    2
  1013 ;; This function calls:
  1014 ;;		Nothing
  1015 ;; This function is called by:
  1016 ;;		_main
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text2
  1021  0014C2                     __ptext2:
  1022                           	opt callstack 0
  1023  0014C2                     _USART_Rx:
  1024                           	opt callstack 28
  1025  0014C2                     l96:
  1026  0014C2  AA9E               	btfss	158,5,c	;volatile
  1027  0014C4  EF66  F00A         	goto	u1751
  1028  0014C8  EF68  F00A         	goto	u1750
  1029  0014CC                     u1751:
  1030  0014CC  EF61  F00A         	goto	l96
  1031  0014D0                     u1750:
  1032  0014D0                     
  1033                           ;UART.c: 32:     return RCREG;
  1034  0014D0  50AE               	movf	174,w,c	;volatile
  1035  0014D2  0012               	return		;funcret
  1036  0014D4                     __end_of_USART_Rx:
  1037                           	opt callstack 0
  1038                           
  1039 ;; *************** function _USART_Init *****************
  1040 ;; Defined at:
  1041 ;;		line 6 in file "UART.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  BAUD            4   14[COMRAM] long 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg, status,2, status,0, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1055 ;;      Params:         4       0       0       0       0       0       0       0       0
  1056 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1058 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1059 ;;Total ram usage:        8 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    3
  1062 ;; This function calls:
  1063 ;;		___aldiv
  1064 ;; This function is called by:
  1065 ;;		_main
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text3
  1070  00107C                     __ptext3:
  1071                           	opt callstack 0
  1072  00107C                     _USART_Init:
  1073                           	opt callstack 27
  1074  00107C                     
  1075                           ;UART.c: 7:     OSCCON= 0x72;
  1076  00107C  0E72               	movlw	114
  1077  00107E  6ED3               	movwf	211,c	;volatile
  1078  001080                     
  1079                           ;UART.c: 8:     TRISCbits.RC6 = 0;
  1080  001080  9C94               	bcf	148,6,c	;volatile
  1081  001082                     
  1082                           ;UART.c: 9:     TRISCbits.RC7 = 1;
  1083  001082  8E94               	bsf	148,7,c	;volatile
  1084  001084                     
  1085                           ;UART.c: 12:     SPBRG = (unsigned char)(((8000000/BAUD)/64)-1);
  1086  001084  C00F  F005         	movff	USART_Init@BAUD,___aldiv@divisor
  1087  001088  C010  F006         	movff	USART_Init@BAUD+1,___aldiv@divisor+1
  1088  00108C  C011  F007         	movff	USART_Init@BAUD+2,___aldiv@divisor+2
  1089  001090  C012  F008         	movff	USART_Init@BAUD+3,___aldiv@divisor+3
  1090  001094  0E00               	movlw	0
  1091  001096  6E01               	movwf	___aldiv@dividend^0,c
  1092  001098  0E12               	movlw	18
  1093  00109A  6E02               	movwf	(___aldiv@dividend+1)^0,c
  1094  00109C  0E7A               	movlw	122
  1095  00109E  6E03               	movwf	(___aldiv@dividend+2)^0,c
  1096  0010A0  0E00               	movlw	0
  1097  0010A2  6E04               	movwf	(___aldiv@dividend+3)^0,c
  1098  0010A4  EC76  F005         	call	___aldiv	;wreg free
  1099  0010A8  C001  F013         	movff	?___aldiv,_USART_Init$2428
  1100  0010AC  C002  F014         	movff	?___aldiv+1,_USART_Init$2428+1
  1101  0010B0  C003  F015         	movff	?___aldiv+2,_USART_Init$2428+2
  1102  0010B4  C004  F016         	movff	?___aldiv+3,_USART_Init$2428+3
  1103  0010B8                     
  1104                           ;UART.c: 12:     SPBRG = (unsigned char)(((8000000/BAUD)/64)-1);
  1105  0010B8  C013  F001         	movff	_USART_Init$2428,___aldiv@dividend
  1106  0010BC  C014  F002         	movff	_USART_Init$2428+1,___aldiv@dividend+1
  1107  0010C0  C015  F003         	movff	_USART_Init$2428+2,___aldiv@dividend+2
  1108  0010C4  C016  F004         	movff	_USART_Init$2428+3,___aldiv@dividend+3
  1109  0010C8  0E40               	movlw	64
  1110  0010CA  6E05               	movwf	___aldiv@divisor^0,c
  1111  0010CC  0E00               	movlw	0
  1112  0010CE  6E06               	movwf	(___aldiv@divisor+1)^0,c
  1113  0010D0  0E00               	movlw	0
  1114  0010D2  6E07               	movwf	(___aldiv@divisor+2)^0,c
  1115  0010D4  0E00               	movlw	0
  1116  0010D6  6E08               	movwf	(___aldiv@divisor+3)^0,c
  1117  0010D8  EC76  F005         	call	___aldiv	;wreg free
  1118  0010DC  0401               	decf	?___aldiv^0,w,c
  1119  0010DE  6EAF               	movwf	175,c	;volatile
  1120  0010E0                     
  1121                           ;UART.c: 14:     TXSTAbits.BRGH = 0;
  1122  0010E0  94AC               	bcf	172,2,c	;volatile
  1123  0010E2                     
  1124                           ;UART.c: 15:     TXSTAbits.SYNC = 0;
  1125  0010E2  98AC               	bcf	172,4,c	;volatile
  1126  0010E4                     
  1127                           ;UART.c: 16:     RCSTAbits.SPEN = 1;
  1128  0010E4  8EAB               	bsf	171,7,c	;volatile
  1129  0010E6                     
  1130                           ;UART.c: 18:     TXSTAbits.TX9 = 0;
  1131  0010E6  9CAC               	bcf	172,6,c	;volatile
  1132  0010E8                     
  1133                           ;UART.c: 19:     TXSTAbits.TXEN = 1;
  1134  0010E8  8AAC               	bsf	172,5,c	;volatile
  1135  0010EA                     
  1136                           ;UART.c: 21:     RCSTAbits.RC9 = 0;
  1137  0010EA  9CAB               	bcf	171,6,c	;volatile
  1138  0010EC                     
  1139                           ;UART.c: 22:     RCSTAbits.CREN = 1;
  1140  0010EC  88AB               	bsf	171,4,c	;volatile
  1141  0010EE  0012               	return		;funcret
  1142  0010F0                     __end_of_USART_Init:
  1143                           	opt callstack 0
  1144                           
  1145 ;; *************** function ___aldiv *****************
  1146 ;; Defined at:
  1147 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  dividend        4    0[COMRAM] long 
  1150 ;;  divisor         4    4[COMRAM] long 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  quotient        4   10[COMRAM] long 
  1153 ;;  sign            1    9[COMRAM] unsigned char 
  1154 ;;  counter         1    8[COMRAM] unsigned char 
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  4    0[COMRAM] long 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2, status,0
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1164 ;;      Params:         8       0       0       0       0       0       0       0       0
  1165 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1167 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1168 ;;Total ram usage:       14 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    2
  1171 ;; This function calls:
  1172 ;;		Nothing
  1173 ;; This function is called by:
  1174 ;;		_USART_Init
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           	psect	text4
  1179  000AEC                     __ptext4:
  1180                           	opt callstack 0
  1181  000AEC                     ___aldiv:
  1182                           	opt callstack 27
  1183  000AEC  0E00               	movlw	0
  1184  000AEE  6E0A               	movwf	___aldiv@sign^0,c
  1185  000AF0  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  1186  000AF2  EF7F  F005         	goto	u1690
  1187  000AF6  EF7D  F005         	goto	u1691
  1188  000AFA                     u1691:
  1189  000AFA  EF89  F005         	goto	l2700
  1190  000AFE                     u1690:
  1191  000AFE  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  1192  000B00  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  1193  000B02  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  1194  000B04  6C05               	negf	___aldiv@divisor^0,c
  1195  000B06  0E00               	movlw	0
  1196  000B08  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  1197  000B0A  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  1198  000B0C  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  1199  000B0E  0E01               	movlw	1
  1200  000B10  6E0A               	movwf	___aldiv@sign^0,c
  1201  000B12                     l2700:
  1202  000B12  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  1203  000B14  EF90  F005         	goto	u1700
  1204  000B18  EF8E  F005         	goto	u1701
  1205  000B1C                     u1701:
  1206  000B1C  EF9A  F005         	goto	l2706
  1207  000B20                     u1700:
  1208  000B20  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  1209  000B22  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  1210  000B24  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  1211  000B26  6C01               	negf	___aldiv@dividend^0,c
  1212  000B28  0E00               	movlw	0
  1213  000B2A  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  1214  000B2C  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  1215  000B2E  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  1216  000B30  0E01               	movlw	1
  1217  000B32  1A0A               	xorwf	___aldiv@sign^0,f,c
  1218  000B34                     l2706:
  1219  000B34  0E00               	movlw	0
  1220  000B36  6E0B               	movwf	___aldiv@quotient^0,c
  1221  000B38  0E00               	movlw	0
  1222  000B3A  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  1223  000B3C  0E00               	movlw	0
  1224  000B3E  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  1225  000B40  0E00               	movlw	0
  1226  000B42  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  1227  000B44  5005               	movf	___aldiv@divisor^0,w,c
  1228  000B46  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  1229  000B48  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  1230  000B4A  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  1231  000B4C  B4D8               	btfsc	status,2,c
  1232  000B4E  EFAB  F005         	goto	u1711
  1233  000B52  EFAD  F005         	goto	u1710
  1234  000B56                     u1711:
  1235  000B56  EFE3  F005         	goto	l2728
  1236  000B5A                     u1710:
  1237  000B5A  0E01               	movlw	1
  1238  000B5C  6E09               	movwf	___aldiv@counter^0,c
  1239  000B5E  EFB7  F005         	goto	l2714
  1240  000B62                     l2712:
  1241  000B62  90D8               	bcf	status,0,c
  1242  000B64  3605               	rlcf	___aldiv@divisor^0,f,c
  1243  000B66  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  1244  000B68  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  1245  000B6A  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  1246  000B6C  2A09               	incf	___aldiv@counter^0,f,c
  1247  000B6E                     l2714:
  1248  000B6E  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  1249  000B70  EFBC  F005         	goto	u1721
  1250  000B74  EFBE  F005         	goto	u1720
  1251  000B78                     u1721:
  1252  000B78  EFB1  F005         	goto	l2712
  1253  000B7C                     u1720:
  1254  000B7C                     l2716:
  1255  000B7C  90D8               	bcf	status,0,c
  1256  000B7E  360B               	rlcf	___aldiv@quotient^0,f,c
  1257  000B80  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  1258  000B82  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  1259  000B84  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  1260  000B86  5005               	movf	___aldiv@divisor^0,w,c
  1261  000B88  5C01               	subwf	___aldiv@dividend^0,w,c
  1262  000B8A  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1263  000B8C  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  1264  000B8E  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1265  000B90  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  1266  000B92  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1267  000B94  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  1268  000B96  A0D8               	btfss	status,0,c
  1269  000B98  EFD0  F005         	goto	u1731
  1270  000B9C  EFD2  F005         	goto	u1730
  1271  000BA0                     u1731:
  1272  000BA0  EFDB  F005         	goto	l2724
  1273  000BA4                     u1730:
  1274  000BA4  5005               	movf	___aldiv@divisor^0,w,c
  1275  000BA6  5E01               	subwf	___aldiv@dividend^0,f,c
  1276  000BA8  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1277  000BAA  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  1278  000BAC  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1279  000BAE  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  1280  000BB0  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1281  000BB2  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  1282  000BB4  800B               	bsf	___aldiv@quotient^0,0,c
  1283  000BB6                     l2724:
  1284  000BB6  90D8               	bcf	status,0,c
  1285  000BB8  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  1286  000BBA  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  1287  000BBC  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  1288  000BBE  3205               	rrcf	___aldiv@divisor^0,f,c
  1289  000BC0  2E09               	decfsz	___aldiv@counter^0,f,c
  1290  000BC2  EFBE  F005         	goto	l2716
  1291  000BC6                     l2728:
  1292  000BC6  500A               	movf	___aldiv@sign^0,w,c
  1293  000BC8  B4D8               	btfsc	status,2,c
  1294  000BCA  EFE9  F005         	goto	u1741
  1295  000BCE  EFEB  F005         	goto	u1740
  1296  000BD2                     u1741:
  1297  000BD2  EFF3  F005         	goto	l2732
  1298  000BD6                     u1740:
  1299  000BD6  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  1300  000BD8  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  1301  000BDA  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  1302  000BDC  6C0B               	negf	___aldiv@quotient^0,c
  1303  000BDE  0E00               	movlw	0
  1304  000BE0  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  1305  000BE2  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  1306  000BE4  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  1307  000BE6                     l2732:
  1308  000BE6  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1309  000BEA  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1310  000BEE  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1311  000BF2  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1312  000BF6  0012               	return		;funcret
  1313  000BF8                     __end_of___aldiv:
  1314                           	opt callstack 0
  1315                           
  1316 ;; *************** function _Serial_Lectura_Memoria *****************
  1317 ;; Defined at:
  1318 ;;		line 155 in file "serial.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  direccion       1    wreg     unsigned char 
  1321 ;;  pointerCX       2   22[COMRAM] PTR int 
  1322 ;;		 -> CX(2), 
  1323 ;;  pointerCY       2   24[COMRAM] PTR int 
  1324 ;;		 -> CY(2), 
  1325 ;;  pointerCZ       2   26[COMRAM] PTR int 
  1326 ;;		 -> CZ(2), 
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  direccion       1   40[COMRAM] unsigned char 
  1329 ;;  i               1   43[COMRAM] unsigned char 
  1330 ;;  i               1   42[COMRAM] unsigned char 
  1331 ;;  i               1   41[COMRAM] unsigned char 
  1332 ;;  coordenadaZ     3   34[COMRAM] unsigned char [3]
  1333 ;;  coordenadaY     3   31[COMRAM] unsigned char [3]
  1334 ;;  coordenadaX     3   28[COMRAM] unsigned char [3]
  1335 ;;  direccionZ      1   39[COMRAM] unsigned char 
  1336 ;;  direccionY      1   38[COMRAM] unsigned char 
  1337 ;;  direccionX      1   37[COMRAM] unsigned char 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      void 
  1340 ;; Registers used:
  1341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1347 ;;      Params:         6       0       0       0       0       0       0       0       0
  1348 ;;      Locals:        16       0       0       0       0       0       0       0       0
  1349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1350 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1351 ;;Total ram usage:       22 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; Hardware stack levels required when called:    4
  1354 ;; This function calls:
  1355 ;;		_EEPROM_Rx
  1356 ;;		_atoi
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text5
  1363  000CFE                     __ptext5:
  1364                           	opt callstack 0
  1365  000CFE                     _Serial_Lectura_Memoria:
  1366                           	opt callstack 26
  1367                           
  1368                           ;incstack = 0
  1369                           ;Serial_Lectura_Memoria@direccion stored from wreg
  1370  000CFE  6E29               	movwf	Serial_Lectura_Memoria@direccion^0,c
  1371  000D00                     
  1372                           ;serial.c: 156:     char coordenadaX[3];;serial.c: 157:     char coordenadaY[3];;serial.
      +                          c: 158:     char coordenadaZ[3];;serial.c: 159:     char direccionX;;serial.c: 160:     
      +                          char direccionY;;serial.c: 161:     char direccionZ;;serial.c: 162:     for (char i = 0;
      +                           i < 3; i++) {
  1373  000D00  0E00               	movlw	0
  1374  000D02  6E2A               	movwf	Serial_Lectura_Memoria@i^0,c
  1375  000D04                     l2870:
  1376                           
  1377                           ;serial.c: 163:         direccionX = direccion + i;
  1378  000D04  5029               	movf	Serial_Lectura_Memoria@direccion^0,w,c
  1379  000D06  242A               	addwf	Serial_Lectura_Memoria@i^0,w,c
  1380  000D08  6E26               	movwf	Serial_Lectura_Memoria@direccionX^0,c
  1381  000D0A                     
  1382                           ;serial.c: 164:         coordenadaX[i] = EEPROM_Rx(direccionX);
  1383  000D0A  0E1D               	movlw	low Serial_Lectura_Memoria@coordenadaX
  1384  000D0C  242A               	addwf	Serial_Lectura_Memoria@i^0,w,c
  1385  000D0E  6ED9               	movwf	fsr2l,c
  1386  000D10  6ADA               	clrf	fsr2h,c
  1387  000D12  0E00               	movlw	high Serial_Lectura_Memoria@coordenadaX
  1388  000D14  22DA               	addwfc	fsr2h,f,c
  1389  000D16  5026               	movf	Serial_Lectura_Memoria@direccionX^0,w,c
  1390  000D18  EC57  F00A         	call	_EEPROM_Rx
  1391  000D1C  6EDF               	movwf	indf2,c
  1392  000D1E                     
  1393                           ;serial.c: 165:     }
  1394  000D1E  2A2A               	incf	Serial_Lectura_Memoria@i^0,f,c
  1395  000D20  0E02               	movlw	2
  1396  000D22  642A               	cpfsgt	Serial_Lectura_Memoria@i^0,c
  1397  000D24  EF96  F006         	goto	u1801
  1398  000D28  EF98  F006         	goto	u1800
  1399  000D2C                     u1801:
  1400  000D2C  EF82  F006         	goto	l2870
  1401  000D30                     u1800:
  1402  000D30                     
  1403                           ;serial.c: 166:     for (char i = 0; i < 3; i++) {
  1404  000D30  0E00               	movlw	0
  1405  000D32  6E2B               	movwf	Serial_Lectura_Memoria@i_1027^0,c
  1406  000D34                     l2884:
  1407                           
  1408                           ;serial.c: 167:         direccionY = direccion + i + 3;
  1409  000D34  5029               	movf	Serial_Lectura_Memoria@direccion^0,w,c
  1410  000D36  242B               	addwf	Serial_Lectura_Memoria@i_1027^0,w,c
  1411  000D38  0F03               	addlw	3
  1412  000D3A  6E27               	movwf	Serial_Lectura_Memoria@direccionY^0,c
  1413  000D3C                     
  1414                           ;serial.c: 168:         coordenadaY[i] = EEPROM_Rx(direccionY);
  1415  000D3C  0E20               	movlw	low Serial_Lectura_Memoria@coordenadaY
  1416  000D3E  242B               	addwf	Serial_Lectura_Memoria@i_1027^0,w,c
  1417  000D40  6ED9               	movwf	fsr2l,c
  1418  000D42  6ADA               	clrf	fsr2h,c
  1419  000D44  0E00               	movlw	high Serial_Lectura_Memoria@coordenadaY
  1420  000D46  22DA               	addwfc	fsr2h,f,c
  1421  000D48  5027               	movf	Serial_Lectura_Memoria@direccionY^0,w,c
  1422  000D4A  EC57  F00A         	call	_EEPROM_Rx
  1423  000D4E  6EDF               	movwf	indf2,c
  1424  000D50                     
  1425                           ;serial.c: 169:     }
  1426  000D50  2A2B               	incf	Serial_Lectura_Memoria@i_1027^0,f,c
  1427  000D52  0E02               	movlw	2
  1428  000D54  642B               	cpfsgt	Serial_Lectura_Memoria@i_1027^0,c
  1429  000D56  EFAF  F006         	goto	u1811
  1430  000D5A  EFB1  F006         	goto	u1810
  1431  000D5E                     u1811:
  1432  000D5E  EF9A  F006         	goto	l2884
  1433  000D62                     u1810:
  1434  000D62                     
  1435                           ;serial.c: 170:     for (char i = 0; i < 3; i++) {
  1436  000D62  0E00               	movlw	0
  1437  000D64  6E2C               	movwf	Serial_Lectura_Memoria@i_1028^0,c
  1438  000D66                     l2898:
  1439                           
  1440                           ;serial.c: 171:         direccionZ = direccion + i + 6;
  1441  000D66  5029               	movf	Serial_Lectura_Memoria@direccion^0,w,c
  1442  000D68  242C               	addwf	Serial_Lectura_Memoria@i_1028^0,w,c
  1443  000D6A  0F06               	addlw	6
  1444  000D6C  6E28               	movwf	Serial_Lectura_Memoria@direccionZ^0,c
  1445  000D6E                     
  1446                           ;serial.c: 172:         coordenadaZ[i] = EEPROM_Rx(direccionZ);
  1447  000D6E  0E23               	movlw	low Serial_Lectura_Memoria@coordenadaZ
  1448  000D70  242C               	addwf	Serial_Lectura_Memoria@i_1028^0,w,c
  1449  000D72  6ED9               	movwf	fsr2l,c
  1450  000D74  6ADA               	clrf	fsr2h,c
  1451  000D76  0E00               	movlw	high Serial_Lectura_Memoria@coordenadaZ
  1452  000D78  22DA               	addwfc	fsr2h,f,c
  1453  000D7A  5028               	movf	Serial_Lectura_Memoria@direccionZ^0,w,c
  1454  000D7C  EC57  F00A         	call	_EEPROM_Rx
  1455  000D80  6EDF               	movwf	indf2,c
  1456  000D82                     
  1457                           ;serial.c: 173:     }
  1458  000D82  2A2C               	incf	Serial_Lectura_Memoria@i_1028^0,f,c
  1459  000D84  0E02               	movlw	2
  1460  000D86  642C               	cpfsgt	Serial_Lectura_Memoria@i_1028^0,c
  1461  000D88  EFC8  F006         	goto	u1821
  1462  000D8C  EFCA  F006         	goto	u1820
  1463  000D90                     u1821:
  1464  000D90  EFB3  F006         	goto	l2898
  1465  000D94                     u1820:
  1466  000D94                     
  1467                           ;serial.c: 175:     *pointerCX = atoi(coordenadaX);
  1468  000D94  0E1D               	movlw	low Serial_Lectura_Memoria@coordenadaX
  1469  000D96  6E08               	movwf	atoi@s^0,c
  1470  000D98  0E00               	movlw	high Serial_Lectura_Memoria@coordenadaX
  1471  000D9A  6E09               	movwf	(atoi@s+1)^0,c
  1472  000D9C  EC8C  F003         	call	_atoi	;wreg free
  1473  000DA0  C017  FFD9         	movff	Serial_Lectura_Memoria@pointerCX,fsr2l
  1474  000DA4  C018  FFDA         	movff	Serial_Lectura_Memoria@pointerCX+1,fsr2h
  1475  000DA8  C008  FFDE         	movff	?_atoi,postinc2
  1476  000DAC  C009  FFDD         	movff	?_atoi+1,postdec2
  1477                           
  1478                           ;serial.c: 176:     *pointerCY = atoi(coordenadaY);
  1479  000DB0  0E20               	movlw	low Serial_Lectura_Memoria@coordenadaY
  1480  000DB2  6E08               	movwf	atoi@s^0,c
  1481  000DB4  0E00               	movlw	high Serial_Lectura_Memoria@coordenadaY
  1482  000DB6  6E09               	movwf	(atoi@s+1)^0,c
  1483  000DB8  EC8C  F003         	call	_atoi	;wreg free
  1484  000DBC  C019  FFD9         	movff	Serial_Lectura_Memoria@pointerCY,fsr2l
  1485  000DC0  C01A  FFDA         	movff	Serial_Lectura_Memoria@pointerCY+1,fsr2h
  1486  000DC4  C008  FFDE         	movff	?_atoi,postinc2
  1487  000DC8  C009  FFDD         	movff	?_atoi+1,postdec2
  1488                           
  1489                           ;serial.c: 177:     *pointerCZ = atoi(coordenadaZ);
  1490  000DCC  0E23               	movlw	low Serial_Lectura_Memoria@coordenadaZ
  1491  000DCE  6E08               	movwf	atoi@s^0,c
  1492  000DD0  0E00               	movlw	high Serial_Lectura_Memoria@coordenadaZ
  1493  000DD2  6E09               	movwf	(atoi@s+1)^0,c
  1494  000DD4  EC8C  F003         	call	_atoi	;wreg free
  1495  000DD8  C01B  FFD9         	movff	Serial_Lectura_Memoria@pointerCZ,fsr2l
  1496  000DDC  C01C  FFDA         	movff	Serial_Lectura_Memoria@pointerCZ+1,fsr2h
  1497  000DE0  C008  FFDE         	movff	?_atoi,postinc2
  1498  000DE4  C009  FFDD         	movff	?_atoi+1,postdec2
  1499  000DE8  0012               	return		;funcret
  1500  000DEA                     __end_of_Serial_Lectura_Memoria:
  1501                           	opt callstack 0
  1502                           
  1503 ;; *************** function _EEPROM_Rx *****************
  1504 ;; Defined at:
  1505 ;;		line 16 in file "EEPROM.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  direccion       1    wreg     unsigned char 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  direccion       1    0[COMRAM] unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      unsigned char 
  1512 ;; Registers used:
  1513 ;;		wreg, status,2
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1519 ;;      Params:         0       0       0       0       0       0       0       0       0
  1520 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1522 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1523 ;;Total ram usage:        1 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    2
  1526 ;; This function calls:
  1527 ;;		Nothing
  1528 ;; This function is called by:
  1529 ;;		_Serial_Lectura_Memoria
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           	psect	text6
  1534  0014AE                     __ptext6:
  1535                           	opt callstack 0
  1536  0014AE                     _EEPROM_Rx:
  1537                           	opt callstack 27
  1538                           
  1539                           ;incstack = 0
  1540                           ;EEPROM_Rx@direccion stored from wreg
  1541  0014AE  6E01               	movwf	EEPROM_Rx@direccion^0,c
  1542  0014B0                     
  1543                           ;EEPROM.c: 17:     EEADR=direccion;
  1544  0014B0  C001  FFA9         	movff	EEPROM_Rx@direccion,4009	;volatile
  1545  0014B4                     
  1546                           ;EEPROM.c: 18:     EECON1bits.EEPGD=0;
  1547  0014B4  9EA6               	bcf	166,7,c	;volsfr
  1548  0014B6                     
  1549                           ;EEPROM.c: 19:       EECON1bits.CFGS=0;
  1550  0014B6  9CA6               	bcf	166,6,c	;volsfr
  1551  0014B8                     
  1552                           ;EEPROM.c: 20:       EECON1bits.RD=1;
  1553  0014B8  80A6               	bsf	166,0,c	;volsfr
  1554  0014BA                     
  1555                           ;EEPROM.c: 21:       data=EEDATA;
  1556  0014BA  CFA8 F055          	movff	4008,_data	;volatile
  1557  0014BE                     
  1558                           ;EEPROM.c: 22:       return data;
  1559  0014BE  5055               	movf	_data^0,w,c
  1560  0014C0  0012               	return		;funcret
  1561  0014C2                     __end_of_EEPROM_Rx:
  1562                           	opt callstack 0
  1563                           
  1564 ;; *************** function _Serial_Escritura_Memoria *****************
  1565 ;; Defined at:
  1566 ;;		line 180 in file "serial.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;  direccion       1    wreg     unsigned char 
  1569 ;;  string_setpo    2    2[COMRAM] PTR unsigned char 
  1570 ;;		 -> coordenada_setpoint(11), 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  direccion       1    6[COMRAM] unsigned char 
  1573 ;;  i               2   12[COMRAM] int 
  1574 ;;  i               2   10[COMRAM] int 
  1575 ;;  i               2    8[COMRAM] int 
  1576 ;;  direccionFin    1    7[COMRAM] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1586 ;;      Params:         2       0       0       0       0       0       0       0       0
  1587 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1588 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1589 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1590 ;;Total ram usage:       12 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    3
  1593 ;; This function calls:
  1594 ;;		_EEPROM_Tx
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text7
  1601  000DEA                     __ptext7:
  1602                           	opt callstack 0
  1603  000DEA                     _Serial_Escritura_Memoria:
  1604                           	opt callstack 27
  1605                           
  1606                           ;incstack = 0
  1607                           ;Serial_Escritura_Memoria@direccion stored from wreg
  1608  000DEA  6E07               	movwf	Serial_Escritura_Memoria@direccion^0,c
  1609  000DEC                     
  1610                           ;serial.c: 181:     char direccionFinal;;serial.c: 182:     for (int i=0;i<3;i++){
  1611  000DEC  0E00               	movlw	0
  1612  000DEE  6E0A               	movwf	(Serial_Escritura_Memoria@i+1)^0,c
  1613  000DF0  0E00               	movlw	0
  1614  000DF2  6E09               	movwf	Serial_Escritura_Memoria@i^0,c
  1615  000DF4                     l2916:
  1616                           
  1617                           ;serial.c: 183:         direccionFinal=direccion+i;
  1618  000DF4  5007               	movf	Serial_Escritura_Memoria@direccion^0,w,c
  1619  000DF6  2409               	addwf	Serial_Escritura_Memoria@i^0,w,c
  1620  000DF8  6E08               	movwf	Serial_Escritura_Memoria@direccionFinal^0,c
  1621  000DFA                     
  1622                           ;serial.c: 184:         EEPROM_Tx(direccionFinal,string_setpoint[i]);
  1623  000DFA  5009               	movf	Serial_Escritura_Memoria@i^0,w,c
  1624  000DFC  2403               	addwf	Serial_Escritura_Memoria@string_setpoint^0,w,c
  1625  000DFE  6ED9               	movwf	fsr2l,c
  1626  000E00  500A               	movf	(Serial_Escritura_Memoria@i+1)^0,w,c
  1627  000E02  2004               	addwfc	(Serial_Escritura_Memoria@string_setpoint+1)^0,w,c
  1628  000E04  6EDA               	movwf	fsr2h,c
  1629  000E06  50DF               	movf	indf2,w,c
  1630  000E08  6E01               	movwf	EEPROM_Tx@dato^0,c
  1631  000E0A  5008               	movf	Serial_Escritura_Memoria@direccionFinal^0,w,c
  1632  000E0C  EC89  F009         	call	_EEPROM_Tx
  1633  000E10                     
  1634                           ;serial.c: 185:     }
  1635  000E10  4A09               	infsnz	Serial_Escritura_Memoria@i^0,f,c
  1636  000E12  2A0A               	incf	(Serial_Escritura_Memoria@i+1)^0,f,c
  1637  000E14  BE0A               	btfsc	(Serial_Escritura_Memoria@i+1)^0,7,c
  1638  000E16  EF16  F007         	goto	u1831
  1639  000E1A  500A               	movf	(Serial_Escritura_Memoria@i+1)^0,w,c
  1640  000E1C  E109               	bnz	u1830
  1641  000E1E  0E03               	movlw	3
  1642  000E20  5C09               	subwf	Serial_Escritura_Memoria@i^0,w,c
  1643  000E22  A0D8               	btfss	status,0,c
  1644  000E24  EF16  F007         	goto	u1831
  1645  000E28  EF18  F007         	goto	u1830
  1646  000E2C                     u1831:
  1647  000E2C  EFFA  F006         	goto	l2916
  1648  000E30                     u1830:
  1649  000E30                     
  1650                           ;serial.c: 186:     for (int i=0;i<3;i++){
  1651  000E30  0E00               	movlw	0
  1652  000E32  6E0C               	movwf	(Serial_Escritura_Memoria@i_1034+1)^0,c
  1653  000E34  0E00               	movlw	0
  1654  000E36  6E0B               	movwf	Serial_Escritura_Memoria@i_1034^0,c
  1655  000E38                     l2930:
  1656                           
  1657                           ;serial.c: 187:         direccionFinal=direccion+i+3;
  1658  000E38  5007               	movf	Serial_Escritura_Memoria@direccion^0,w,c
  1659  000E3A  240B               	addwf	Serial_Escritura_Memoria@i_1034^0,w,c
  1660  000E3C  0F03               	addlw	3
  1661  000E3E  6E08               	movwf	Serial_Escritura_Memoria@direccionFinal^0,c
  1662  000E40                     
  1663                           ;serial.c: 188:         EEPROM_Tx(direccionFinal,string_setpoint[i+4]);
  1664  000E40  500B               	movf	Serial_Escritura_Memoria@i_1034^0,w,c
  1665  000E42  2403               	addwf	Serial_Escritura_Memoria@string_setpoint^0,w,c
  1666  000E44  6E05               	movwf	??_Serial_Escritura_Memoria^0,c
  1667  000E46  500C               	movf	(Serial_Escritura_Memoria@i_1034+1)^0,w,c
  1668  000E48  2004               	addwfc	(Serial_Escritura_Memoria@string_setpoint+1)^0,w,c
  1669  000E4A  6E06               	movwf	(??_Serial_Escritura_Memoria+1)^0,c
  1670  000E4C  0E04               	movlw	4
  1671  000E4E  2405               	addwf	??_Serial_Escritura_Memoria^0,w,c
  1672  000E50  6ED9               	movwf	fsr2l,c
  1673  000E52  0E00               	movlw	0
  1674  000E54  2006               	addwfc	(??_Serial_Escritura_Memoria+1)^0,w,c
  1675  000E56  6EDA               	movwf	fsr2h,c
  1676  000E58  50DF               	movf	indf2,w,c
  1677  000E5A  6E01               	movwf	EEPROM_Tx@dato^0,c
  1678  000E5C  5008               	movf	Serial_Escritura_Memoria@direccionFinal^0,w,c
  1679  000E5E  EC89  F009         	call	_EEPROM_Tx
  1680  000E62                     
  1681                           ;serial.c: 189:     }
  1682  000E62  4A0B               	infsnz	Serial_Escritura_Memoria@i_1034^0,f,c
  1683  000E64  2A0C               	incf	(Serial_Escritura_Memoria@i_1034+1)^0,f,c
  1684  000E66  BE0C               	btfsc	(Serial_Escritura_Memoria@i_1034+1)^0,7,c
  1685  000E68  EF3F  F007         	goto	u1841
  1686  000E6C  500C               	movf	(Serial_Escritura_Memoria@i_1034+1)^0,w,c
  1687  000E6E  E109               	bnz	u1840
  1688  000E70  0E03               	movlw	3
  1689  000E72  5C0B               	subwf	Serial_Escritura_Memoria@i_1034^0,w,c
  1690  000E74  A0D8               	btfss	status,0,c
  1691  000E76  EF3F  F007         	goto	u1841
  1692  000E7A  EF41  F007         	goto	u1840
  1693  000E7E                     u1841:
  1694  000E7E  EF1C  F007         	goto	l2930
  1695  000E82                     u1840:
  1696  000E82                     
  1697                           ;serial.c: 190:     for (int i=0;i<3;i++){
  1698  000E82  0E00               	movlw	0
  1699  000E84  6E0E               	movwf	(Serial_Escritura_Memoria@i_1035+1)^0,c
  1700  000E86  0E00               	movlw	0
  1701  000E88  6E0D               	movwf	Serial_Escritura_Memoria@i_1035^0,c
  1702  000E8A                     l2944:
  1703                           
  1704                           ;serial.c: 191:         direccionFinal=direccion+i+6;
  1705  000E8A  5007               	movf	Serial_Escritura_Memoria@direccion^0,w,c
  1706  000E8C  240D               	addwf	Serial_Escritura_Memoria@i_1035^0,w,c
  1707  000E8E  0F06               	addlw	6
  1708  000E90  6E08               	movwf	Serial_Escritura_Memoria@direccionFinal^0,c
  1709  000E92                     
  1710                           ;serial.c: 192:         EEPROM_Tx(direccionFinal,string_setpoint[i+8]);
  1711  000E92  500D               	movf	Serial_Escritura_Memoria@i_1035^0,w,c
  1712  000E94  2403               	addwf	Serial_Escritura_Memoria@string_setpoint^0,w,c
  1713  000E96  6E05               	movwf	??_Serial_Escritura_Memoria^0,c
  1714  000E98  500E               	movf	(Serial_Escritura_Memoria@i_1035+1)^0,w,c
  1715  000E9A  2004               	addwfc	(Serial_Escritura_Memoria@string_setpoint+1)^0,w,c
  1716  000E9C  6E06               	movwf	(??_Serial_Escritura_Memoria+1)^0,c
  1717  000E9E  0E08               	movlw	8
  1718  000EA0  2405               	addwf	??_Serial_Escritura_Memoria^0,w,c
  1719  000EA2  6ED9               	movwf	fsr2l,c
  1720  000EA4  0E00               	movlw	0
  1721  000EA6  2006               	addwfc	(??_Serial_Escritura_Memoria+1)^0,w,c
  1722  000EA8  6EDA               	movwf	fsr2h,c
  1723  000EAA  50DF               	movf	indf2,w,c
  1724  000EAC  6E01               	movwf	EEPROM_Tx@dato^0,c
  1725  000EAE  5008               	movf	Serial_Escritura_Memoria@direccionFinal^0,w,c
  1726  000EB0  EC89  F009         	call	_EEPROM_Tx
  1727  000EB4                     
  1728                           ;serial.c: 193:     }
  1729  000EB4  4A0D               	infsnz	Serial_Escritura_Memoria@i_1035^0,f,c
  1730  000EB6  2A0E               	incf	(Serial_Escritura_Memoria@i_1035+1)^0,f,c
  1731  000EB8  BE0E               	btfsc	(Serial_Escritura_Memoria@i_1035+1)^0,7,c
  1732  000EBA  EF68  F007         	goto	u1851
  1733  000EBE  500E               	movf	(Serial_Escritura_Memoria@i_1035+1)^0,w,c
  1734  000EC0  E109               	bnz	u1850
  1735  000EC2  0E03               	movlw	3
  1736  000EC4  5C0D               	subwf	Serial_Escritura_Memoria@i_1035^0,w,c
  1737  000EC6  A0D8               	btfss	status,0,c
  1738  000EC8  EF68  F007         	goto	u1851
  1739  000ECC  EF6A  F007         	goto	u1850
  1740  000ED0                     u1851:
  1741  000ED0  EF45  F007         	goto	l2944
  1742  000ED4                     u1850:
  1743  000ED4  0012               	return		;funcret
  1744  000ED6                     __end_of_Serial_Escritura_Memoria:
  1745                           	opt callstack 0
  1746                           
  1747 ;; *************** function _EEPROM_Tx *****************
  1748 ;; Defined at:
  1749 ;;		line 24 in file "EEPROM.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  direccion       1    wreg     unsigned char 
  1752 ;;  dato            1    0[COMRAM] unsigned char 
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;  direccion       1    1[COMRAM] unsigned char 
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1764 ;;      Params:         1       0       0       0       0       0       0       0       0
  1765 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1767 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1768 ;;Total ram usage:        2 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:    2
  1771 ;; This function calls:
  1772 ;;		Nothing
  1773 ;; This function is called by:
  1774 ;;		_Serial_Escritura_Memoria
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           	psect	text8
  1779  001312                     __ptext8:
  1780                           	opt callstack 0
  1781  001312                     _EEPROM_Tx:
  1782                           	opt callstack 27
  1783                           
  1784                           ;incstack = 0
  1785                           ;EEPROM_Tx@direccion stored from wreg
  1786  001312  6E02               	movwf	EEPROM_Tx@direccion^0,c
  1787  001314                     
  1788                           ;EEPROM.c: 25:     EEADR=direccion;
  1789  001314  C002  FFA9         	movff	EEPROM_Tx@direccion,4009	;volatile
  1790  001318                     
  1791                           ;EEPROM.c: 26:     EEDATA=dato;
  1792  001318  C001  FFA8         	movff	EEPROM_Tx@dato,4008	;volatile
  1793  00131C                     
  1794                           ;EEPROM.c: 27:      EECON1bits.EEPGD=0;
  1795  00131C  9EA6               	bcf	166,7,c	;volsfr
  1796  00131E                     
  1797                           ;EEPROM.c: 28:       EECON1bits.CFGS=0;
  1798  00131E  9CA6               	bcf	166,6,c	;volsfr
  1799  001320                     
  1800                           ;EEPROM.c: 29:       EECON1bits.WREN=1;
  1801  001320  84A6               	bsf	166,2,c	;volsfr
  1802  001322                     
  1803                           ;EEPROM.c: 30:       INTCONbits.GIE=0;
  1804  001322  9EF2               	bcf	242,7,c	;volatile
  1805  001324                     
  1806                           ;EEPROM.c: 32:       EECON2=0x55;
  1807  001324  0E55               	movlw	85
  1808  001326  6EA7               	movwf	167,c	;volsfr
  1809  001328                     
  1810                           ;EEPROM.c: 33:       EECON2=0x0AA;
  1811  001328  0EAA               	movlw	170
  1812  00132A  6EA7               	movwf	167,c	;volsfr
  1813  00132C                     
  1814                           ;EEPROM.c: 34:       EECON1bits.WR=1;
  1815  00132C  82A6               	bsf	166,1,c	;volsfr
  1816  00132E                     
  1817                           ;EEPROM.c: 35:       INTCONbits.GIE=1;
  1818  00132E  8EF2               	bsf	242,7,c	;volatile
  1819  001330                     l486:
  1820  001330  A8A1               	btfss	161,4,c	;volatile
  1821  001332  EF9D  F009         	goto	u1621
  1822  001336  EF9F  F009         	goto	u1620
  1823  00133A                     u1621:
  1824  00133A  EF98  F009         	goto	l486
  1825  00133E                     u1620:
  1826  00133E                     
  1827                           ;EEPROM.c: 37:       PIR2bits.EEIF=0;
  1828  00133E  98A1               	bcf	161,4,c	;volatile
  1829                           
  1830                           ;EEPROM.c: 38:       EECON1bits.WREN=0 ;
  1831  001340  94A6               	bcf	166,2,c	;volsfr
  1832  001342  0012               	return		;funcret
  1833  001344                     __end_of_EEPROM_Tx:
  1834                           	opt callstack 0
  1835                           
  1836 ;; *************** function _Serial_DecodificacionY *****************
  1837 ;; Defined at:
  1838 ;;		line 83 in file "serial.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  string_coord    2   22[COMRAM] PTR unsigned char 
  1841 ;;		 -> coordenada_array(7), 
  1842 ;;  pointerCY       2   24[COMRAM] PTR int 
  1843 ;;		 -> CY(2), 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  i               2   31[COMRAM] int 
  1846 ;;  coordenadaY     3   28[COMRAM] unsigned char [3]
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1856 ;;      Params:         4       0       0       0       0       0       0       0       0
  1857 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1858 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1859 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1860 ;;Total ram usage:       11 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    4
  1863 ;; This function calls:
  1864 ;;		_atoi
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text9
  1871  001162                     __ptext9:
  1872                           	opt callstack 0
  1873  001162                     _Serial_DecodificacionY:
  1874                           	opt callstack 26
  1875  001162                     
  1876                           ;serial.c: 84:     char coordenadaY[3];;serial.c: 85:     for (int i = 0; i < 3; i++) {
  1877  001162  0E00               	movlw	0
  1878  001164  6E21               	movwf	(Serial_DecodificacionY@i+1)^0,c
  1879  001166  0E00               	movlw	0
  1880  001168  6E20               	movwf	Serial_DecodificacionY@i^0,c
  1881  00116A                     l2796:
  1882                           
  1883                           ;serial.c: 86:         coordenadaY[i] = string_coordenada[4 + i];
  1884  00116A  5020               	movf	Serial_DecodificacionY@i^0,w,c
  1885  00116C  2417               	addwf	Serial_DecodificacionY@string_coordenada^0,w,c
  1886  00116E  6E1B               	movwf	??_Serial_DecodificacionY^0,c
  1887  001170  5021               	movf	(Serial_DecodificacionY@i+1)^0,w,c
  1888  001172  2018               	addwfc	(Serial_DecodificacionY@string_coordenada+1)^0,w,c
  1889  001174  6E1C               	movwf	(??_Serial_DecodificacionY+1)^0,c
  1890  001176  0E04               	movlw	4
  1891  001178  241B               	addwf	??_Serial_DecodificacionY^0,w,c
  1892  00117A  6ED9               	movwf	fsr2l,c
  1893  00117C  0E00               	movlw	0
  1894  00117E  201C               	addwfc	(??_Serial_DecodificacionY+1)^0,w,c
  1895  001180  6EDA               	movwf	fsr2h,c
  1896  001182  0E1D               	movlw	low Serial_DecodificacionY@coordenadaY
  1897  001184  2420               	addwf	Serial_DecodificacionY@i^0,w,c
  1898  001186  6EE1               	movwf	fsr1l,c
  1899  001188  0E00               	movlw	high Serial_DecodificacionY@coordenadaY
  1900  00118A  2021               	addwfc	(Serial_DecodificacionY@i+1)^0,w,c
  1901  00118C  6EE2               	movwf	fsr1h,c
  1902  00118E  CFDF FFE7          	movff	indf2,indf1
  1903  001192                     
  1904                           ;serial.c: 87:     }
  1905  001192  4A20               	infsnz	Serial_DecodificacionY@i^0,f,c
  1906  001194  2A21               	incf	(Serial_DecodificacionY@i+1)^0,f,c
  1907  001196  BE21               	btfsc	(Serial_DecodificacionY@i+1)^0,7,c
  1908  001198  EFD7  F008         	goto	u1791
  1909  00119C  5021               	movf	(Serial_DecodificacionY@i+1)^0,w,c
  1910  00119E  E109               	bnz	u1790
  1911  0011A0  0E03               	movlw	3
  1912  0011A2  5C20               	subwf	Serial_DecodificacionY@i^0,w,c
  1913  0011A4  A0D8               	btfss	status,0,c
  1914  0011A6  EFD7  F008         	goto	u1791
  1915  0011AA  EFD9  F008         	goto	u1790
  1916  0011AE                     u1791:
  1917  0011AE  EFB5  F008         	goto	l2796
  1918  0011B2                     u1790:
  1919  0011B2                     
  1920                           ;serial.c: 88:     *pointerCY = atoi(coordenadaY);
  1921  0011B2  0E1D               	movlw	low Serial_DecodificacionY@coordenadaY
  1922  0011B4  6E08               	movwf	atoi@s^0,c
  1923  0011B6  0E00               	movlw	high Serial_DecodificacionY@coordenadaY
  1924  0011B8  6E09               	movwf	(atoi@s+1)^0,c
  1925  0011BA  EC8C  F003         	call	_atoi	;wreg free
  1926  0011BE  C019  FFD9         	movff	Serial_DecodificacionY@pointerCY,fsr2l
  1927  0011C2  C01A  FFDA         	movff	Serial_DecodificacionY@pointerCY+1,fsr2h
  1928  0011C6  C008  FFDE         	movff	?_atoi,postinc2
  1929  0011CA  C009  FFDD         	movff	?_atoi+1,postdec2
  1930  0011CE  0012               	return		;funcret
  1931  0011D0                     __end_of_Serial_DecodificacionY:
  1932                           	opt callstack 0
  1933                           
  1934 ;; *************** function _Serial_DecodificacionX *****************
  1935 ;; Defined at:
  1936 ;;		line 74 in file "serial.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  string_coord    2   22[COMRAM] PTR unsigned char 
  1939 ;;		 -> coordenada_array(7), 
  1940 ;;  pointerCX       2   24[COMRAM] PTR int 
  1941 ;;		 -> CX(2), 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  i               2   29[COMRAM] int 
  1944 ;;  coordenadaX     3   26[COMRAM] unsigned char [3]
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1954 ;;      Params:         4       0       0       0       0       0       0       0       0
  1955 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1957 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1958 ;;Total ram usage:        9 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    4
  1961 ;; This function calls:
  1962 ;;		_atoi
  1963 ;; This function is called by:
  1964 ;;		_main
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text10
  1969  0011D0                     __ptext10:
  1970                           	opt callstack 0
  1971  0011D0                     _Serial_DecodificacionX:
  1972                           	opt callstack 26
  1973  0011D0                     
  1974                           ;serial.c: 75:     char coordenadaX[3];;serial.c: 76:     for (int i = 0; i < 3; i++) {
  1975  0011D0  0E00               	movlw	0
  1976  0011D2  6E1F               	movwf	(Serial_DecodificacionX@i+1)^0,c
  1977  0011D4  0E00               	movlw	0
  1978  0011D6  6E1E               	movwf	Serial_DecodificacionX@i^0,c
  1979  0011D8                     l2780:
  1980                           
  1981                           ;serial.c: 77:         coordenadaX[i] = string_coordenada[i];
  1982  0011D8  501E               	movf	Serial_DecodificacionX@i^0,w,c
  1983  0011DA  2417               	addwf	Serial_DecodificacionX@string_coordenada^0,w,c
  1984  0011DC  6ED9               	movwf	fsr2l,c
  1985  0011DE  501F               	movf	(Serial_DecodificacionX@i+1)^0,w,c
  1986  0011E0  2018               	addwfc	(Serial_DecodificacionX@string_coordenada+1)^0,w,c
  1987  0011E2  6EDA               	movwf	fsr2h,c
  1988  0011E4  0E1B               	movlw	low Serial_DecodificacionX@coordenadaX
  1989  0011E6  241E               	addwf	Serial_DecodificacionX@i^0,w,c
  1990  0011E8  6EE1               	movwf	fsr1l,c
  1991  0011EA  0E00               	movlw	high Serial_DecodificacionX@coordenadaX
  1992  0011EC  201F               	addwfc	(Serial_DecodificacionX@i+1)^0,w,c
  1993  0011EE  6EE2               	movwf	fsr1h,c
  1994  0011F0  CFDF FFE7          	movff	indf2,indf1
  1995  0011F4                     
  1996                           ;serial.c: 78:     }
  1997  0011F4  4A1E               	infsnz	Serial_DecodificacionX@i^0,f,c
  1998  0011F6  2A1F               	incf	(Serial_DecodificacionX@i+1)^0,f,c
  1999  0011F8  BE1F               	btfsc	(Serial_DecodificacionX@i+1)^0,7,c
  2000  0011FA  EF08  F009         	goto	u1781
  2001  0011FE  501F               	movf	(Serial_DecodificacionX@i+1)^0,w,c
  2002  001200  E109               	bnz	u1780
  2003  001202  0E03               	movlw	3
  2004  001204  5C1E               	subwf	Serial_DecodificacionX@i^0,w,c
  2005  001206  A0D8               	btfss	status,0,c
  2006  001208  EF08  F009         	goto	u1781
  2007  00120C  EF0A  F009         	goto	u1780
  2008  001210                     u1781:
  2009  001210  EFEC  F008         	goto	l2780
  2010  001214                     u1780:
  2011  001214                     
  2012                           ;serial.c: 79:     *pointerCX = atoi(coordenadaX);
  2013  001214  0E1B               	movlw	low Serial_DecodificacionX@coordenadaX
  2014  001216  6E08               	movwf	atoi@s^0,c
  2015  001218  0E00               	movlw	high Serial_DecodificacionX@coordenadaX
  2016  00121A  6E09               	movwf	(atoi@s+1)^0,c
  2017  00121C  EC8C  F003         	call	_atoi	;wreg free
  2018  001220  C019  FFD9         	movff	Serial_DecodificacionX@pointerCX,fsr2l
  2019  001224  C01A  FFDA         	movff	Serial_DecodificacionX@pointerCX+1,fsr2h
  2020  001228  C008  FFDE         	movff	?_atoi,postinc2
  2021  00122C  C009  FFDD         	movff	?_atoi+1,postdec2
  2022  001230  0012               	return		;funcret
  2023  001232                     __end_of_Serial_DecodificacionX:
  2024                           	opt callstack 0
  2025                           
  2026 ;; *************** function _atoi *****************
  2027 ;; Defined at:
  2028 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;  s               2    7[COMRAM] PTR const unsigned char 
  2031 ;;		 -> Serial_Lectura_Memoria@coordenadaZ(3), Serial_Lectura_Memoria@coordenadaY(3), Serial_Lectura_Memoria@coordenadaX
      +(3), Serial_DecodificacionZ@coordenadaZ(3), 
  2032 ;;		 -> Serial_DecodificacionY@coordenadaY(3), Serial_DecodificacionX@coordenadaX(3), 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  n               2   20[COMRAM] int 
  2035 ;;  neg             2   13[COMRAM] int 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  2    7[COMRAM] int 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2045 ;;      Params:         2       0       0       0       0       0       0       0       0
  2046 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2047 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2048 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2049 ;;Total ram usage:       15 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:    3
  2052 ;; This function calls:
  2053 ;;		___wmul
  2054 ;;		_isdigit
  2055 ;;		_isspace
  2056 ;; This function is called by:
  2057 ;;		_Serial_DecodificacionX
  2058 ;;		_Serial_DecodificacionY
  2059 ;;		_Serial_Lectura_Memoria
  2060 ;;		_Serial_DecodificacionZ
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text11
  2065  000718                     __ptext11:
  2066                           	opt callstack 0
  2067  000718                     _atoi:
  2068                           	opt callstack 26
  2069  000718  0E00               	movlw	0
  2070  00071A  6E16               	movwf	(atoi@n+1)^0,c
  2071  00071C  0E00               	movlw	0
  2072  00071E  6E15               	movwf	atoi@n^0,c
  2073  000720  0E00               	movlw	0
  2074  000722  6E0F               	movwf	(atoi@neg+1)^0,c
  2075  000724  0E00               	movlw	0
  2076  000726  6E0E               	movwf	atoi@neg^0,c
  2077  000728  EF98  F003         	goto	l2564
  2078  00072C                     l2562:
  2079  00072C  4A08               	infsnz	atoi@s^0,f,c
  2080  00072E  2A09               	incf	(atoi@s+1)^0,f,c
  2081  000730                     l2564:
  2082  000730  0E01               	movlw	1
  2083  000732  6E14               	movwf	_atoi$2175^0,c
  2084  000734  C008  FFD9         	movff	atoi@s,fsr2l
  2085  000738  C009  FFDA         	movff	atoi@s+1,fsr2h
  2086  00073C  0E20               	movlw	32
  2087  00073E  18DE               	xorwf	postinc2,w,c
  2088  000740  B4D8               	btfsc	status,2,c
  2089  000742  EFA5  F003         	goto	u1551
  2090  000746  EFA7  F003         	goto	u1550
  2091  00074A                     u1551:
  2092  00074A  EFC3  F003         	goto	l2572
  2093  00074E                     u1550:
  2094  00074E  0EF7               	movlw	247
  2095  000750  6E0A               	movwf	??_atoi^0,c
  2096  000752  0EFF               	movlw	255
  2097  000754  6E0B               	movwf	(??_atoi+1)^0,c
  2098  000756  C008  FFD9         	movff	atoi@s,fsr2l
  2099  00075A  C009  FFDA         	movff	atoi@s+1,fsr2h
  2100  00075E  50DF               	movf	indf2,w,c
  2101  000760  6E0C               	movwf	(??_atoi+2)^0,c
  2102  000762  6A0D               	clrf	(??_atoi+3)^0,c
  2103  000764  500A               	movf	??_atoi^0,w,c
  2104  000766  260C               	addwf	(??_atoi+2)^0,f,c
  2105  000768  500B               	movf	(??_atoi+1)^0,w,c
  2106  00076A  220D               	addwfc	(??_atoi+3)^0,f,c
  2107  00076C  500D               	movf	(??_atoi+3)^0,w,c
  2108  00076E  E109               	bnz	u1560
  2109  000770  0E05               	movlw	5
  2110  000772  5C0C               	subwf	(??_atoi+2)^0,w,c
  2111  000774  A0D8               	btfss	status,0,c
  2112  000776  EFBF  F003         	goto	u1561
  2113  00077A  EFC1  F003         	goto	u1560
  2114  00077E                     u1561:
  2115  00077E  EFC3  F003         	goto	l2572
  2116  000782                     u1560:
  2117  000782  0E00               	movlw	0
  2118  000784  6E14               	movwf	_atoi$2175^0,c
  2119  000786                     l2572:
  2120  000786  C014  F010         	movff	_atoi$2175,_atoi$2174
  2121  00078A  6A11               	clrf	(_atoi$2174+1)^0,c
  2122  00078C  5010               	movf	_atoi$2174^0,w,c
  2123  00078E  1011               	iorwf	(_atoi$2174+1)^0,w,c
  2124  000790  A4D8               	btfss	status,2,c
  2125  000792  EFCD  F003         	goto	u1571
  2126  000796  EFCF  F003         	goto	u1570
  2127  00079A                     u1571:
  2128  00079A  EF96  F003         	goto	l2562
  2129  00079E                     u1570:
  2130  00079E  EFD9  F003         	goto	l2582
  2131  0007A2                     l2578:
  2132  0007A2  0E00               	movlw	0
  2133  0007A4  6E0F               	movwf	(atoi@neg+1)^0,c
  2134  0007A6  0E01               	movlw	1
  2135  0007A8  6E0E               	movwf	atoi@neg^0,c
  2136  0007AA                     l2580:
  2137  0007AA  4A08               	infsnz	atoi@s^0,f,c
  2138  0007AC  2A09               	incf	(atoi@s+1)^0,f,c
  2139  0007AE  EF0E  F004         	goto	l2588
  2140  0007B2                     l2582:
  2141  0007B2  C008  FFD9         	movff	atoi@s,fsr2l
  2142  0007B6  C009  FFDA         	movff	atoi@s+1,fsr2h
  2143  0007BA  50DF               	movf	indf2,w,c
  2144  0007BC  6E0A               	movwf	??_atoi^0,c
  2145  0007BE  6A0B               	clrf	(??_atoi+1)^0,c
  2146                           
  2147                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2148                           ; Switch size 1, requested type "simple"
  2149                           ; Number of cases is 1, Range of values is 0 to 0
  2150                           ; switch strategies available:
  2151                           ; Name         Instructions Cycles
  2152                           ; simple_byte            4     3 (average)
  2153                           ;	Chosen strategy is simple_byte
  2154  0007C0  500B               	movf	(??_atoi+1)^0,w,c
  2155  0007C2  0A00               	xorlw	0	; case 0
  2156  0007C4  B4D8               	btfsc	status,2,c
  2157  0007C6  EFE7  F003         	goto	l3060
  2158  0007CA  EF0E  F004         	goto	l2588
  2159  0007CE                     l3060:
  2160                           
  2161                           ; Switch size 1, requested type "simple"
  2162                           ; Number of cases is 2, Range of values is 43 to 45
  2163                           ; switch strategies available:
  2164                           ; Name         Instructions Cycles
  2165                           ; simple_byte            7     4 (average)
  2166                           ;	Chosen strategy is simple_byte
  2167  0007CE  500A               	movf	??_atoi^0,w,c
  2168  0007D0  0A2B               	xorlw	43	; case 43
  2169  0007D2  B4D8               	btfsc	status,2,c
  2170  0007D4  EFD5  F003         	goto	l2580
  2171  0007D8  0A06               	xorlw	6	; case 45
  2172  0007DA  B4D8               	btfsc	status,2,c
  2173  0007DC  EFD1  F003         	goto	l2578
  2174  0007E0  EF0E  F004         	goto	l2588
  2175  0007E4                     l2584:
  2176  0007E4  C015  F001         	movff	atoi@n,___wmul@multiplier
  2177  0007E8  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  2178  0007EC  0E00               	movlw	0
  2179  0007EE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2180  0007F0  0E0A               	movlw	10
  2181  0007F2  6E03               	movwf	___wmul@multiplicand^0,c
  2182  0007F4  ECF9  F009         	call	___wmul	;wreg free
  2183  0007F8  C008  FFD9         	movff	atoi@s,fsr2l
  2184  0007FC  C009  FFDA         	movff	atoi@s+1,fsr2h
  2185  000800  50DF               	movf	indf2,w,c
  2186  000802  6E0A               	movwf	??_atoi^0,c
  2187  000804  500A               	movf	??_atoi^0,w,c
  2188  000806  5E01               	subwf	?___wmul^0,f,c
  2189  000808  0E00               	movlw	0
  2190  00080A  5A02               	subwfb	(?___wmul+1)^0,f,c
  2191  00080C  0E30               	movlw	48
  2192  00080E  2401               	addwf	?___wmul^0,w,c
  2193  000810  6E15               	movwf	atoi@n^0,c
  2194  000812  0E00               	movlw	0
  2195  000814  2002               	addwfc	(?___wmul+1)^0,w,c
  2196  000816  6E16               	movwf	(atoi@n+1)^0,c
  2197  000818  EFD5  F003         	goto	l2580
  2198  00081C                     l2588:
  2199  00081C  0ED0               	movlw	208
  2200  00081E  6E0A               	movwf	??_atoi^0,c
  2201  000820  0EFF               	movlw	255
  2202  000822  6E0B               	movwf	(??_atoi+1)^0,c
  2203  000824  C008  FFD9         	movff	atoi@s,fsr2l
  2204  000828  C009  FFDA         	movff	atoi@s+1,fsr2h
  2205  00082C  50DF               	movf	indf2,w,c
  2206  00082E  6E0C               	movwf	(??_atoi+2)^0,c
  2207  000830  6A0D               	clrf	(??_atoi+3)^0,c
  2208  000832  500A               	movf	??_atoi^0,w,c
  2209  000834  260C               	addwf	(??_atoi+2)^0,f,c
  2210  000836  500B               	movf	(??_atoi+1)^0,w,c
  2211  000838  220D               	addwfc	(??_atoi+3)^0,f,c
  2212  00083A  500D               	movf	(??_atoi+3)^0,w,c
  2213  00083C  E10A               	bnz	u1580
  2214  00083E  0E0A               	movlw	10
  2215  000840  5C0C               	subwf	(??_atoi+2)^0,w,c
  2216  000842  A0D8               	btfss	status,0,c
  2217  000844  EF26  F004         	goto	u1581
  2218  000848  EF29  F004         	goto	u1580
  2219  00084C                     u1581:
  2220  00084C  0E01               	movlw	1
  2221  00084E  EF2A  F004         	goto	u1590
  2222  000852                     u1580:
  2223  000852  0E00               	movlw	0
  2224  000854                     u1590:
  2225  000854  6E12               	movwf	_atoi$2176^0,c
  2226  000856  6A13               	clrf	(_atoi$2176+1)^0,c
  2227  000858  5012               	movf	_atoi$2176^0,w,c
  2228  00085A  1013               	iorwf	(_atoi$2176+1)^0,w,c
  2229  00085C  A4D8               	btfss	status,2,c
  2230  00085E  EF33  F004         	goto	u1601
  2231  000862  EF35  F004         	goto	u1600
  2232  000866                     u1601:
  2233  000866  EFF2  F003         	goto	l2584
  2234  00086A                     u1600:
  2235  00086A  500E               	movf	atoi@neg^0,w,c
  2236  00086C  100F               	iorwf	(atoi@neg+1)^0,w,c
  2237  00086E  A4D8               	btfss	status,2,c
  2238  000870  EF3C  F004         	goto	u1611
  2239  000874  EF3E  F004         	goto	u1610
  2240  000878                     u1611:
  2241  000878  EF4C  F004         	goto	l1241
  2242  00087C                     u1610:
  2243  00087C  C015  F00A         	movff	atoi@n,??_atoi
  2244  000880  C016  F00B         	movff	atoi@n+1,??_atoi+1
  2245  000884  1E0A               	comf	??_atoi^0,f,c
  2246  000886  1E0B               	comf	(??_atoi+1)^0,f,c
  2247  000888  4A0A               	infsnz	??_atoi^0,f,c
  2248  00088A  2A0B               	incf	(??_atoi+1)^0,f,c
  2249  00088C  C00A  F008         	movff	??_atoi,?_atoi
  2250  000890  C00B  F009         	movff	??_atoi+1,?_atoi+1
  2251  000894  EF50  F004         	goto	l1244
  2252  000898                     l1241:
  2253  000898  C015  F008         	movff	atoi@n,?_atoi
  2254  00089C  C016  F009         	movff	atoi@n+1,?_atoi+1
  2255  0008A0                     l1244:
  2256  0008A0  0012               	return		;funcret
  2257  0008A2                     __end_of_atoi:
  2258                           	opt callstack 0
  2259                           
  2260 ;; *************** function _isspace *****************
  2261 ;; Defined at:
  2262 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  c               2    0[COMRAM] int 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  2    0[COMRAM] int 
  2269 ;; Registers used:
  2270 ;;		wreg, status,2, status,0
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2276 ;;      Params:         2       0       0       0       0       0       0       0       0
  2277 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2278 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2279 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2280 ;;Total ram usage:        7 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    2
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		_atoi
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text12
  2291  001288                     __ptext12:
  2292                           	opt callstack 0
  2293  001288                     _isspace:
  2294                           	opt callstack 26
  2295  001288  0E01               	movlw	1
  2296  00128A  6E07               	movwf	_isspace$2192^0,c
  2297  00128C  0E20               	movlw	32
  2298  00128E  1801               	xorwf	isspace@c^0,w,c
  2299  001290  1002               	iorwf	(isspace@c+1)^0,w,c
  2300  001292  B4D8               	btfsc	status,2,c
  2301  001294  EF4E  F009         	goto	u1441
  2302  001298  EF50  F009         	goto	u1440
  2303  00129C                     u1441:
  2304  00129C  EF69  F009         	goto	l2510
  2305  0012A0                     u1440:
  2306  0012A0  0EF7               	movlw	247
  2307  0012A2  6E03               	movwf	??_isspace^0,c
  2308  0012A4  0EFF               	movlw	255
  2309  0012A6  6E04               	movwf	(??_isspace+1)^0,c
  2310  0012A8  C001  F005         	movff	isspace@c,??_isspace+2
  2311  0012AC  C002  F006         	movff	isspace@c+1,??_isspace+3
  2312  0012B0  5003               	movf	??_isspace^0,w,c
  2313  0012B2  2605               	addwf	(??_isspace+2)^0,f,c
  2314  0012B4  5004               	movf	(??_isspace+1)^0,w,c
  2315  0012B6  2206               	addwfc	(??_isspace+3)^0,f,c
  2316  0012B8  5006               	movf	(??_isspace+3)^0,w,c
  2317  0012BA  E109               	bnz	u1450
  2318  0012BC  0E05               	movlw	5
  2319  0012BE  5C05               	subwf	(??_isspace+2)^0,w,c
  2320  0012C0  A0D8               	btfss	status,0,c
  2321  0012C2  EF65  F009         	goto	u1451
  2322  0012C6  EF67  F009         	goto	u1450
  2323  0012CA                     u1451:
  2324  0012CA  EF69  F009         	goto	l2510
  2325  0012CE                     u1450:
  2326  0012CE  0E00               	movlw	0
  2327  0012D0  6E07               	movwf	_isspace$2192^0,c
  2328  0012D2                     l2510:
  2329  0012D2  C007  F001         	movff	_isspace$2192,?_isspace
  2330  0012D6  6A02               	clrf	(?_isspace+1)^0,c
  2331  0012D8  0012               	return		;funcret
  2332  0012DA                     __end_of_isspace:
  2333                           	opt callstack 0
  2334                           
  2335 ;; *************** function _isdigit *****************
  2336 ;; Defined at:
  2337 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  c               2    0[COMRAM] int 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;		None
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  2    0[COMRAM] int 
  2344 ;; Registers used:
  2345 ;;		wreg, status,2, status,0
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2351 ;;      Params:         2       0       0       0       0       0       0       0       0
  2352 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2353 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2354 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2355 ;;Total ram usage:        6 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:    2
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_atoi
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text13
  2366  0012DA                     __ptext13:
  2367                           	opt callstack 0
  2368  0012DA                     _isdigit:
  2369                           	opt callstack 26
  2370  0012DA  0ED0               	movlw	208
  2371  0012DC  6E03               	movwf	??_isdigit^0,c
  2372  0012DE  0EFF               	movlw	255
  2373  0012E0  6E04               	movwf	(??_isdigit+1)^0,c
  2374  0012E2  C001  F005         	movff	isdigit@c,??_isdigit+2
  2375  0012E6  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  2376  0012EA  5003               	movf	??_isdigit^0,w,c
  2377  0012EC  2605               	addwf	(??_isdigit+2)^0,f,c
  2378  0012EE  5004               	movf	(??_isdigit+1)^0,w,c
  2379  0012F0  2206               	addwfc	(??_isdigit+3)^0,f,c
  2380  0012F2  5006               	movf	(??_isdigit+3)^0,w,c
  2381  0012F4  E10A               	bnz	u1460
  2382  0012F6  0E0A               	movlw	10
  2383  0012F8  5C05               	subwf	(??_isdigit+2)^0,w,c
  2384  0012FA  A0D8               	btfss	status,0,c
  2385  0012FC  EF82  F009         	goto	u1461
  2386  001300  EF85  F009         	goto	u1460
  2387  001304                     u1461:
  2388  001304  0E01               	movlw	1
  2389  001306  EF86  F009         	goto	u1470
  2390  00130A                     u1460:
  2391  00130A  0E00               	movlw	0
  2392  00130C                     u1470:
  2393  00130C  6E01               	movwf	?_isdigit^0,c
  2394  00130E  6A02               	clrf	(?_isdigit+1)^0,c
  2395  001310  0012               	return		;funcret
  2396  001312                     __end_of_isdigit:
  2397                           	opt callstack 0
  2398                           
  2399 ;; *************** function ___wmul *****************
  2400 ;; Defined at:
  2401 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  multiplier      2    0[COMRAM] unsigned int 
  2404 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  product         2    4[COMRAM] unsigned int 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  2    0[COMRAM] unsigned int 
  2409 ;; Registers used:
  2410 ;;		wreg, status,2, status,0, prodl, prodh
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2416 ;;      Params:         4       0       0       0       0       0       0       0       0
  2417 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2419 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2420 ;;Total ram usage:        6 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:    2
  2423 ;; This function calls:
  2424 ;;		Nothing
  2425 ;; This function is called by:
  2426 ;;		_atoi
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text14
  2431  0013F2                     __ptext14:
  2432                           	opt callstack 0
  2433  0013F2                     ___wmul:
  2434                           	opt callstack 26
  2435  0013F2  5001               	movf	___wmul@multiplier^0,w,c
  2436  0013F4  0203               	mulwf	___wmul@multiplicand^0,c
  2437  0013F6  CFF3 F005          	movff	prodl,___wmul@product
  2438  0013FA  CFF4 F006          	movff	prodh,___wmul@product+1
  2439  0013FE  5001               	movf	___wmul@multiplier^0,w,c
  2440  001400  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2441  001402  50F3               	movf	243,w,c
  2442  001404  2606               	addwf	(___wmul@product+1)^0,f,c
  2443  001406  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2444  001408  0203               	mulwf	___wmul@multiplicand^0,c
  2445  00140A  50F3               	movf	243,w,c
  2446  00140C  2606               	addwf	(___wmul@product+1)^0,f,c
  2447  00140E  C005  F001         	movff	___wmul@product,?___wmul
  2448  001412  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2449  001416  0012               	return		;funcret
  2450  001418                     __end_of___wmul:
  2451                           	opt callstack 0
  2452                           
  2453 ;; *************** function _Seria_Decodificacion_Memoria *****************
  2454 ;; Defined at:
  2455 ;;		line 101 in file "serial.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  direccion       1    wreg     unsigned char 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  direccion       1    2[COMRAM] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      unsigned char 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2469 ;;      Params:         0       0       0       0       0       0       0       0       0
  2470 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2471 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2472 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2473 ;;Total ram usage:        3 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    2
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_main
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text15
  2484  0009C8                     __ptext15:
  2485                           	opt callstack 0
  2486  0009C8                     _Seria_Decodificacion_Memoria:
  2487                           	opt callstack 28
  2488                           
  2489                           ;incstack = 0
  2490                           ;Seria_Decodificacion_Memoria@direccion stored from wreg
  2491  0009C8  6E03               	movwf	Seria_Decodificacion_Memoria@direccion^0,c
  2492  0009CA                     
  2493                           ;serial.c: 102:     switch (direccion) {
  2494  0009CA  EF27  F005         	goto	l2854
  2495  0009CE                     l2820:
  2496                           
  2497                           ;serial.c: 104:             direccion = 0x00;
  2498  0009CE  0E00               	movlw	0
  2499  0009D0  6E03               	movwf	Seria_Decodificacion_Memoria@direccion^0,c
  2500                           
  2501                           ;serial.c: 105:             break;
  2502  0009D2  EF74  F005         	goto	l2856
  2503  0009D6                     l2822:
  2504                           
  2505                           ;serial.c: 107:             direccion = 0x10;
  2506  0009D6  0E10               	movlw	16
  2507  0009D8  6E03               	movwf	Seria_Decodificacion_Memoria@direccion^0,c
  2508                           
  2509                           ;serial.c: 108:             break;
  2510  0009DA  EF74  F005         	goto	l2856
  2511  0009DE                     l2824:
  2512                           
  2513                           ;serial.c: 110:             direccion = 0x20;
  2514  0009DE  0E20               	movlw	32
  2515  0009E0  6E03               	movwf	Seria_Decodificacion_Memoria@direccion^0,c
  2516                           
  2517                           ;serial.c: 111:             break;
  2518  0009E2  EF74  F005         	goto	l2856
  2519  0009E6                     l2826:
  2520                           
  2521                           ;serial.c: 113:             direccion = 0x30;
  2522  0009E6  0E30               	movlw	48
  2523  0009E8  6E03               	movwf	Seria_Decodificacion_Memoria@direccion^0,c
  2524                           
  2525                           ;serial.c: 114:             break;
  2526  0009EA  EF74  F005         	goto	l2856
  2527  0009EE                     l2828:
  2528                           
  2529                           ;serial.c: 116:             direccion = 0x40;
  2530  0009EE  0E40               	movlw	64
  2531  0009F0  6E03               	movwf	Seria_Decodificacion_Memoria@direccion^0,c
  2532                           
  2533                           ;serial.c: 117:             break;
  2534  0009F2  EF74  F005         	goto	l2856
  2535  0009F6                     l2830:
  2536                           
  2537                           ;serial.c: 119:             direccion = 0x50;
  2538  0009F6  0E50               	movlw	80
  2539  0009F8  6E03               	movwf	Seria_Decodificacion_Memoria@direccion^0,c
  2540                           
  2541                           ;serial.c: 120:             break;
  2542  0009FA  EF74  F005         	goto	l2856
  2543  0009FE                     l2832:
  2544                           
  2545                           ;serial.c: 122:             direccion = 0x60;
  2546  0009FE  0E60               	movlw	96
  2547  000A00  6E03               	movwf	Seria_Decodificacion_Memoria@direccion^0,c
  2548                           
  2549                           ;serial.c: 123:             break;
  2550  000A02  EF74  F005         	goto	l2856
  2551  000A06                     l2834:
  2552                           
  2553                           ;serial.c: 125:             direccion = 0x70;
  2554  000A06  0E70               	movlw	112
  2555  000A08  6E03               	movwf	Seria_Decodificacion_Memoria@direccion^0,c
  2556                           
  2557                           ;serial.c: 126:             break;
  2558  000A0A  EF74  F005         	goto	l2856
  2559  000A0E                     l2836:
  2560                           
  2561                           ;serial.c: 128:             direccion = 0x80;
  2562  000A0E  0E80               	movlw	128
  2563  000A10  6E03               	movwf	Seria_Decodificacion_Memoria@direccion^0,c
  2564                           
  2565                           ;serial.c: 129:             break;
  2566  000A12  EF74  F005         	goto	l2856
  2567  000A16                     l2838:
  2568                           
  2569                           ;serial.c: 131:             direccion = 0x90;
  2570  000A16  0E90               	movlw	144
  2571  000A18  6E03               	movwf	Seria_Decodificacion_Memoria@direccion^0,c
  2572                           
  2573                           ;serial.c: 132:             break;
  2574  000A1A  EF74  F005         	goto	l2856
  2575  000A1E                     l2840:
  2576                           
  2577                           ;serial.c: 134:             direccion = 0xA0;
  2578  000A1E  0EA0               	movlw	160
  2579  000A20  6E03               	movwf	Seria_Decodificacion_Memoria@direccion^0,c
  2580                           
  2581                           ;serial.c: 135:             break;
  2582  000A22  EF74  F005         	goto	l2856
  2583  000A26                     l2842:
  2584                           
  2585                           ;serial.c: 137:             direccion = 0xB0;
  2586  000A26  0EB0               	movlw	176
  2587  000A28  6E03               	movwf	Seria_Decodificacion_Memoria@direccion^0,c
  2588                           
  2589                           ;serial.c: 138:             break;
  2590  000A2A  EF74  F005         	goto	l2856
  2591  000A2E                     l2844:
  2592                           
  2593                           ;serial.c: 140:             direccion = 0xC0;
  2594  000A2E  0EC0               	movlw	192
  2595  000A30  6E03               	movwf	Seria_Decodificacion_Memoria@direccion^0,c
  2596                           
  2597                           ;serial.c: 141:             break;
  2598  000A32  EF74  F005         	goto	l2856
  2599  000A36                     l2846:
  2600                           
  2601                           ;serial.c: 143:             direccion = 0xD0;
  2602  000A36  0ED0               	movlw	208
  2603  000A38  6E03               	movwf	Seria_Decodificacion_Memoria@direccion^0,c
  2604                           
  2605                           ;serial.c: 144:             break;
  2606  000A3A  EF74  F005         	goto	l2856
  2607  000A3E                     l2848:
  2608                           
  2609                           ;serial.c: 146:             direccion = 0xE0;
  2610  000A3E  0EE0               	movlw	224
  2611  000A40  6E03               	movwf	Seria_Decodificacion_Memoria@direccion^0,c
  2612                           
  2613                           ;serial.c: 147:             break;
  2614  000A42  EF74  F005         	goto	l2856
  2615  000A46                     l2850:
  2616                           
  2617                           ;serial.c: 149:             direccion = 0xF0;
  2618  000A46  0EF0               	movlw	240
  2619  000A48  6E03               	movwf	Seria_Decodificacion_Memoria@direccion^0,c
  2620                           
  2621                           ;serial.c: 150:             break;
  2622  000A4A  EF74  F005         	goto	l2856
  2623  000A4E                     l2854:
  2624  000A4E  5003               	movf	Seria_Decodificacion_Memoria@direccion^0,w,c
  2625  000A50  6E01               	movwf	??_Seria_Decodificacion_Memoria^0,c
  2626  000A52  6A02               	clrf	(??_Seria_Decodificacion_Memoria+1)^0,c
  2627                           
  2628                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2629                           ; Switch size 1, requested type "simple"
  2630                           ; Number of cases is 1, Range of values is 0 to 0
  2631                           ; switch strategies available:
  2632                           ; Name         Instructions Cycles
  2633                           ; simple_byte            4     3 (average)
  2634                           ;	Chosen strategy is simple_byte
  2635  000A54  5002               	movf	(??_Seria_Decodificacion_Memoria+1)^0,w,c
  2636  000A56  0A00               	xorlw	0	; case 0
  2637  000A58  B4D8               	btfsc	status,2,c
  2638  000A5A  EF31  F005         	goto	l3062
  2639  000A5E  EF74  F005         	goto	l2856
  2640  000A62                     l3062:
  2641                           
  2642                           ; Switch size 1, requested type "simple"
  2643                           ; Number of cases is 16, Range of values is 48 to 70
  2644                           ; switch strategies available:
  2645                           ; Name         Instructions Cycles
  2646                           ; simple_byte           49    25 (average)
  2647                           ;	Chosen strategy is simple_byte
  2648  000A62  5001               	movf	??_Seria_Decodificacion_Memoria^0,w,c
  2649  000A64  0A30               	xorlw	48	; case 48
  2650  000A66  B4D8               	btfsc	status,2,c
  2651  000A68  EFE7  F004         	goto	l2820
  2652  000A6C  0A01               	xorlw	1	; case 49
  2653  000A6E  B4D8               	btfsc	status,2,c
  2654  000A70  EFEB  F004         	goto	l2822
  2655  000A74  0A03               	xorlw	3	; case 50
  2656  000A76  B4D8               	btfsc	status,2,c
  2657  000A78  EFEF  F004         	goto	l2824
  2658  000A7C  0A01               	xorlw	1	; case 51
  2659  000A7E  B4D8               	btfsc	status,2,c
  2660  000A80  EFF3  F004         	goto	l2826
  2661  000A84  0A07               	xorlw	7	; case 52
  2662  000A86  B4D8               	btfsc	status,2,c
  2663  000A88  EFF7  F004         	goto	l2828
  2664  000A8C  0A01               	xorlw	1	; case 53
  2665  000A8E  B4D8               	btfsc	status,2,c
  2666  000A90  EFFB  F004         	goto	l2830
  2667  000A94  0A03               	xorlw	3	; case 54
  2668  000A96  B4D8               	btfsc	status,2,c
  2669  000A98  EFFF  F004         	goto	l2832
  2670  000A9C  0A01               	xorlw	1	; case 55
  2671  000A9E  B4D8               	btfsc	status,2,c
  2672  000AA0  EF03  F005         	goto	l2834
  2673  000AA4  0A0F               	xorlw	15	; case 56
  2674  000AA6  B4D8               	btfsc	status,2,c
  2675  000AA8  EF07  F005         	goto	l2836
  2676  000AAC  0A01               	xorlw	1	; case 57
  2677  000AAE  B4D8               	btfsc	status,2,c
  2678  000AB0  EF0B  F005         	goto	l2838
  2679  000AB4  0A78               	xorlw	120	; case 65
  2680  000AB6  B4D8               	btfsc	status,2,c
  2681  000AB8  EF0F  F005         	goto	l2840
  2682  000ABC  0A03               	xorlw	3	; case 66
  2683  000ABE  B4D8               	btfsc	status,2,c
  2684  000AC0  EF13  F005         	goto	l2842
  2685  000AC4  0A01               	xorlw	1	; case 67
  2686  000AC6  B4D8               	btfsc	status,2,c
  2687  000AC8  EF17  F005         	goto	l2844
  2688  000ACC  0A07               	xorlw	7	; case 68
  2689  000ACE  B4D8               	btfsc	status,2,c
  2690  000AD0  EF1B  F005         	goto	l2846
  2691  000AD4  0A01               	xorlw	1	; case 69
  2692  000AD6  B4D8               	btfsc	status,2,c
  2693  000AD8  EF1F  F005         	goto	l2848
  2694  000ADC  0A03               	xorlw	3	; case 70
  2695  000ADE  B4D8               	btfsc	status,2,c
  2696  000AE0  EF23  F005         	goto	l2850
  2697  000AE4  EF74  F005         	goto	l2856
  2698  000AE8                     l2856:
  2699                           
  2700                           ;serial.c: 152:     return direccion;
  2701  000AE8  5003               	movf	Seria_Decodificacion_Memoria@direccion^0,w,c
  2702  000AEA  0012               	return		;funcret
  2703  000AEC                     __end_of_Seria_Decodificacion_Memoria:
  2704                           	opt callstack 0
  2705                           
  2706 ;; *************** function _Motor_Movimiento *****************
  2707 ;; Defined at:
  2708 ;;		line 24 in file "Motor.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  Oupcode         1    wreg     unsigned char 
  2711 ;;  CoordenadaX     2   55[COMRAM] int 
  2712 ;;  CoordenadaY     2   57[COMRAM] int 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  Oupcode         1   59[COMRAM] unsigned char 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2724 ;;      Params:         4       0       0       0       0       0       0       0       0
  2725 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2727 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2728 ;;Total ram usage:        5 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    4
  2731 ;; This function calls:
  2732 ;;		_Motor_Calcular_PasosX
  2733 ;;		_Motor_Calcular_PasosY
  2734 ;;		_Motor_Conversion
  2735 ;;		_PWM_GeneratePulsos
  2736 ;; This function is called by:
  2737 ;;		_main
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text16
  2742  001002                     __ptext16:
  2743                           	opt callstack 0
  2744  001002                     _Motor_Movimiento:
  2745                           	opt callstack 26
  2746                           
  2747                           ;incstack = 0
  2748                           ;Motor_Movimiento@Oupcode stored from wreg
  2749  001002  6E3C               	movwf	Motor_Movimiento@Oupcode^0,c
  2750  001004                     
  2751                           ;Motor.c: 25:     CoordenadaXX = Motor_Calcular_PasosX(CoordenadaX);
  2752  001004  C038  F002         	movff	Motor_Movimiento@CoordenadaX,Motor_Calcular_PasosX@coordenada_converX
  2753  001008  C039  F003         	movff	Motor_Movimiento@CoordenadaX+1,Motor_Calcular_PasosX@coordenada_converX+1
  2754  00100C  ECB6  F007         	call	_Motor_Calcular_PasosX	;wreg free
  2755  001010  C002  F044         	movff	?_Motor_Calcular_PasosX,_CoordenadaXX
  2756  001014  C003  F045         	movff	?_Motor_Calcular_PasosX+1,_CoordenadaXX+1
  2757                           
  2758                           ;Motor.c: 26:     CoordenadaYY = Motor_Calcular_PasosY(CoordenadaY);
  2759  001018  C03A  F002         	movff	Motor_Movimiento@CoordenadaY,Motor_Calcular_PasosY@coordenada_converY
  2760  00101C  C03B  F003         	movff	Motor_Movimiento@CoordenadaY+1,Motor_Calcular_PasosY@coordenada_converY+1
  2761  001020  EC6B  F007         	call	_Motor_Calcular_PasosY	;wreg free
  2762  001024  C002  F042         	movff	?_Motor_Calcular_PasosY,_CoordenadaYY
  2763  001028  C003  F043         	movff	?_Motor_Calcular_PasosY+1,_CoordenadaYY+1
  2764                           
  2765                           ;Motor.c: 27:     pasosX = Motor_Conversion(CoordenadaXX);
  2766  00102C  C044  F032         	movff	_CoordenadaXX,Motor_Conversion@Coordenada
  2767  001030  C045  F033         	movff	_CoordenadaXX+1,Motor_Conversion@Coordenada+1
  2768  001034  EC78  F008         	call	_Motor_Conversion	;wreg free
  2769  001038  C032  F04C         	movff	?_Motor_Conversion,_pasosX
  2770  00103C  C033  F04D         	movff	?_Motor_Conversion+1,_pasosX+1
  2771                           
  2772                           ;Motor.c: 28:     pasosY = Motor_Conversion(CoordenadaYY);
  2773  001040  C042  F032         	movff	_CoordenadaYY,Motor_Conversion@Coordenada
  2774  001044  C043  F033         	movff	_CoordenadaYY+1,Motor_Conversion@Coordenada+1
  2775  001048  EC78  F008         	call	_Motor_Conversion	;wreg free
  2776  00104C  C032  F04A         	movff	?_Motor_Conversion,_pasosY
  2777  001050  C033  F04B         	movff	?_Motor_Conversion+1,_pasosY+1
  2778  001054                     
  2779                           ;Motor.c: 29:     coordenada_anteriorX=CoordenadaX;
  2780  001054  C038  F052         	movff	Motor_Movimiento@CoordenadaX,_coordenada_anteriorX
  2781  001058  C039  F053         	movff	Motor_Movimiento@CoordenadaX+1,_coordenada_anteriorX+1
  2782  00105C                     
  2783                           ;Motor.c: 30:     coordenada_anteriorY=CoordenadaY;
  2784  00105C  C03A  F050         	movff	Motor_Movimiento@CoordenadaY,_coordenada_anteriorY
  2785  001060  C03B  F051         	movff	Motor_Movimiento@CoordenadaY+1,_coordenada_anteriorY+1
  2786                           
  2787                           ;Motor.c: 31:     PWM_GeneratePulsos(Oupcode, pasosX, pasosY);
  2788  001064  C04C  F003         	movff	_pasosX,PWM_GeneratePulsos@pulsosX
  2789  001068  C04D  F004         	movff	_pasosX+1,PWM_GeneratePulsos@pulsosX+1
  2790  00106C  C04A  F005         	movff	_pasosY,PWM_GeneratePulsos@pulsosY
  2791  001070  C04B  F006         	movff	_pasosY+1,PWM_GeneratePulsos@pulsosY+1
  2792  001074  503C               	movf	Motor_Movimiento@Oupcode^0,w,c
  2793  001076  EC51  F004         	call	_PWM_GeneratePulsos
  2794  00107A  0012               	return		;funcret
  2795  00107C                     __end_of_Motor_Movimiento:
  2796                           	opt callstack 0
  2797                           
  2798 ;; *************** function _PWM_GeneratePulsos *****************
  2799 ;; Defined at:
  2800 ;;		line 6 in file "PWM.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  Oupcode         1    wreg     unsigned char 
  2803 ;;  pulsosX         2    2[COMRAM] int 
  2804 ;;  pulsosY         2    4[COMRAM] int 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;  Oupcode         1    7[COMRAM] unsigned char 
  2807 ;;  countY          2   10[COMRAM] int 
  2808 ;;  countX          2    8[COMRAM] int 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2818 ;;      Params:         4       0       0       0       0       0       0       0       0
  2819 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2820 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2821 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2822 ;;Total ram usage:       10 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    3
  2825 ;; This function calls:
  2826 ;;		_PWM_InitF
  2827 ;;		_PWM_InitS
  2828 ;;		_PWM_OneshotX
  2829 ;;		_PWM_OneshotY
  2830 ;; This function is called by:
  2831 ;;		_Motor_Movimiento
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text17
  2836  0008A2                     __ptext17:
  2837                           	opt callstack 0
  2838  0008A2                     _PWM_GeneratePulsos:
  2839                           	opt callstack 26
  2840                           
  2841                           ;incstack = 0
  2842                           ;PWM_GeneratePulsos@Oupcode stored from wreg
  2843  0008A2  6E08               	movwf	PWM_GeneratePulsos@Oupcode^0,c
  2844  0008A4                     
  2845                           ;PWM.c: 7:     if (Oupcode == 'S') {
  2846  0008A4  0E53               	movlw	83
  2847  0008A6  1808               	xorwf	PWM_GeneratePulsos@Oupcode^0,w,c
  2848  0008A8  A4D8               	btfss	status,2,c
  2849  0008AA  EF59  F004         	goto	u1481
  2850  0008AE  EF5B  F004         	goto	u1480
  2851  0008B2                     u1481:
  2852  0008B2  EF5F  F004         	goto	l2522
  2853  0008B6                     u1480:
  2854  0008B6                     
  2855                           ;PWM.c: 8:         PWM_InitS();
  2856  0008B6  EC2E  F00A         	call	_PWM_InitS	;wreg free
  2857                           
  2858                           ;PWM.c: 9:     } else {
  2859  0008BA  EF61  F004         	goto	l2524
  2860  0008BE                     l2522:
  2861                           
  2862                           ;PWM.c: 10:         PWM_InitF();
  2863  0008BE  EC1E  F00A         	call	_PWM_InitF	;wreg free
  2864  0008C2                     l2524:
  2865                           
  2866                           ;PWM.c: 12:     PORTDbits.RD0 = 0;
  2867  0008C2  9083               	bcf	131,0,c	;volatile
  2868  0008C4                     
  2869                           ;PWM.c: 13:     PORTDbits.RD2 = 0;
  2870  0008C4  9483               	bcf	131,2,c	;volatile
  2871  0008C6                     
  2872                           ;PWM.c: 14:     T2CONbits.TMR2ON = 1;
  2873  0008C6  84CA               	bsf	202,2,c	;volatile
  2874  0008C8                     
  2875                           ;PWM.c: 15:     int countX = 0;
  2876  0008C8  0E00               	movlw	0
  2877  0008CA  6E0A               	movwf	(PWM_GeneratePulsos@countX+1)^0,c
  2878  0008CC  0E00               	movlw	0
  2879  0008CE  6E09               	movwf	PWM_GeneratePulsos@countX^0,c
  2880  0008D0                     
  2881                           ;PWM.c: 16:     int countY = 0;
  2882  0008D0  0E00               	movlw	0
  2883  0008D2  6E0C               	movwf	(PWM_GeneratePulsos@countY+1)^0,c
  2884  0008D4  0E00               	movlw	0
  2885  0008D6  6E0B               	movwf	PWM_GeneratePulsos@countY^0,c
  2886                           
  2887                           ;PWM.c: 17:     while ((countX < pulsosX) || (countY < pulsosY)) {
  2888  0008D8  EFBC  F004         	goto	l2550
  2889  0008DC                     l2534:
  2890                           
  2891                           ;PWM.c: 18:         if (countX < pulsosX) {
  2892  0008DC  5003               	movf	PWM_GeneratePulsos@pulsosX^0,w,c
  2893  0008DE  5C09               	subwf	PWM_GeneratePulsos@countX^0,w,c
  2894  0008E0  500A               	movf	(PWM_GeneratePulsos@countX+1)^0,w,c
  2895  0008E2  0A80               	xorlw	128
  2896  0008E4  6E07               	movwf	??_PWM_GeneratePulsos^0,c
  2897  0008E6  5004               	movf	(PWM_GeneratePulsos@pulsosX+1)^0,w,c
  2898  0008E8  0A80               	xorlw	128
  2899  0008EA  5807               	subwfb	??_PWM_GeneratePulsos^0,w,c
  2900  0008EC  B0D8               	btfsc	status,0,c
  2901  0008EE  EF7B  F004         	goto	u1491
  2902  0008F2  EF7D  F004         	goto	u1490
  2903  0008F6                     u1491:
  2904  0008F6  EF94  F004         	goto	l43
  2905  0008FA                     u1490:
  2906  0008FA                     
  2907                           ;PWM.c: 19:             if (PORTCbits.RC2 == 1) {
  2908  0008FA  A482               	btfss	130,2,c	;volatile
  2909  0008FC  EF82  F004         	goto	u1501
  2910  000900  EF84  F004         	goto	u1500
  2911  000904                     u1501:
  2912  000904  EF90  F004         	goto	l2540
  2913  000908                     u1500:
  2914  000908                     
  2915                           ;PWM.c: 20:                 countX = PWM_OneshotX(countX);
  2916  000908  C009  F001         	movff	PWM_GeneratePulsos@countX,PWM_OneshotX@countX
  2917  00090C  C00A  F002         	movff	PWM_GeneratePulsos@countX+1,PWM_OneshotX@countX+1
  2918  000910  ECBA  F009         	call	_PWM_OneshotX	;wreg free
  2919  000914  C001  F009         	movff	?_PWM_OneshotX,PWM_GeneratePulsos@countX
  2920  000918  C002  F00A         	movff	?_PWM_OneshotX+1,PWM_GeneratePulsos@countX+1
  2921                           
  2922                           ;PWM.c: 21:             } else {
  2923  00091C  EF95  F004         	goto	l2542
  2924  000920                     l2540:
  2925                           
  2926                           ;PWM.c: 22:                 oneshotX = 0;
  2927  000920  0E00               	movlw	0
  2928  000922  6E58               	movwf	_oneshotX^0,c
  2929  000924  EF95  F004         	goto	l2542
  2930  000928                     l43:
  2931                           
  2932                           ;PWM.c: 25:             PORTDbits.RD0 = 1;
  2933  000928  8083               	bsf	131,0,c	;volatile
  2934  00092A                     l2542:
  2935                           
  2936                           ;PWM.c: 27:         if (countY < pulsosY) {
  2937  00092A  5005               	movf	PWM_GeneratePulsos@pulsosY^0,w,c
  2938  00092C  5C0B               	subwf	PWM_GeneratePulsos@countY^0,w,c
  2939  00092E  500C               	movf	(PWM_GeneratePulsos@countY+1)^0,w,c
  2940  000930  0A80               	xorlw	128
  2941  000932  6E07               	movwf	??_PWM_GeneratePulsos^0,c
  2942  000934  5006               	movf	(PWM_GeneratePulsos@pulsosY+1)^0,w,c
  2943  000936  0A80               	xorlw	128
  2944  000938  5807               	subwfb	??_PWM_GeneratePulsos^0,w,c
  2945  00093A  B0D8               	btfsc	status,0,c
  2946  00093C  EFA2  F004         	goto	u1511
  2947  000940  EFA4  F004         	goto	u1510
  2948  000944                     u1511:
  2949  000944  EFBB  F004         	goto	l47
  2950  000948                     u1510:
  2951  000948                     
  2952                           ;PWM.c: 28:             if (PORTCbits.RC1 == 1) {
  2953  000948  A282               	btfss	130,1,c	;volatile
  2954  00094A  EFA9  F004         	goto	u1521
  2955  00094E  EFAB  F004         	goto	u1520
  2956  000952                     u1521:
  2957  000952  EFB7  F004         	goto	l2548
  2958  000956                     u1520:
  2959  000956                     
  2960                           ;PWM.c: 29:                 countY = PWM_OneshotY(countY);
  2961  000956  C00B  F001         	movff	PWM_GeneratePulsos@countY,PWM_OneshotY@countY
  2962  00095A  C00C  F002         	movff	PWM_GeneratePulsos@countY+1,PWM_OneshotY@countY+1
  2963  00095E  ECA2  F009         	call	_PWM_OneshotY	;wreg free
  2964  000962  C001  F00B         	movff	?_PWM_OneshotY,PWM_GeneratePulsos@countY
  2965  000966  C002  F00C         	movff	?_PWM_OneshotY+1,PWM_GeneratePulsos@countY+1
  2966                           
  2967                           ;PWM.c: 30:             } else {
  2968  00096A  EFBC  F004         	goto	l2550
  2969  00096E                     l2548:
  2970                           
  2971                           ;PWM.c: 31:                 oneshotY = 0;
  2972  00096E  0E00               	movlw	0
  2973  000970  6E57               	movwf	_oneshotY^0,c
  2974  000972  EFBC  F004         	goto	l2550
  2975  000976                     l47:
  2976                           
  2977                           ;PWM.c: 34:             PORTDbits.RD2 = 1;
  2978  000976  8483               	bsf	131,2,c	;volatile
  2979  000978                     l2550:
  2980                           
  2981                           ;PWM.c: 17:     while ((countX < pulsosX) || (countY < pulsosY)) {
  2982  000978  5003               	movf	PWM_GeneratePulsos@pulsosX^0,w,c
  2983  00097A  5C09               	subwf	PWM_GeneratePulsos@countX^0,w,c
  2984  00097C  500A               	movf	(PWM_GeneratePulsos@countX+1)^0,w,c
  2985  00097E  0A80               	xorlw	128
  2986  000980  6E07               	movwf	??_PWM_GeneratePulsos^0,c
  2987  000982  5004               	movf	(PWM_GeneratePulsos@pulsosX+1)^0,w,c
  2988  000984  0A80               	xorlw	128
  2989  000986  5807               	subwfb	??_PWM_GeneratePulsos^0,w,c
  2990  000988  A0D8               	btfss	status,0,c
  2991  00098A  EFC9  F004         	goto	u1531
  2992  00098E  EFCB  F004         	goto	u1530
  2993  000992                     u1531:
  2994  000992  EF6E  F004         	goto	l2534
  2995  000996                     u1530:
  2996  000996  5005               	movf	PWM_GeneratePulsos@pulsosY^0,w,c
  2997  000998  5C0B               	subwf	PWM_GeneratePulsos@countY^0,w,c
  2998  00099A  500C               	movf	(PWM_GeneratePulsos@countY+1)^0,w,c
  2999  00099C  0A80               	xorlw	128
  3000  00099E  6E07               	movwf	??_PWM_GeneratePulsos^0,c
  3001  0009A0  5006               	movf	(PWM_GeneratePulsos@pulsosY+1)^0,w,c
  3002  0009A2  0A80               	xorlw	128
  3003  0009A4  5807               	subwfb	??_PWM_GeneratePulsos^0,w,c
  3004  0009A6  A0D8               	btfss	status,0,c
  3005  0009A8  EFD8  F004         	goto	u1541
  3006  0009AC  EFDA  F004         	goto	u1540
  3007  0009B0                     u1541:
  3008  0009B0  EF6E  F004         	goto	l2534
  3009  0009B4                     u1540:
  3010  0009B4                     
  3011                           ;PWM.c: 38:     oneshotX = 0;
  3012  0009B4  0E00               	movlw	0
  3013  0009B6  6E58               	movwf	_oneshotX^0,c
  3014                           
  3015                           ;PWM.c: 39:     countY = 0;
  3016  0009B8  0E00               	movlw	0
  3017  0009BA  6E0C               	movwf	(PWM_GeneratePulsos@countY+1)^0,c
  3018  0009BC  0E00               	movlw	0
  3019  0009BE  6E0B               	movwf	PWM_GeneratePulsos@countY^0,c
  3020                           
  3021                           ;PWM.c: 40:     oneshotY = 0;
  3022  0009C0  0E00               	movlw	0
  3023  0009C2  6E57               	movwf	_oneshotY^0,c
  3024  0009C4                     
  3025                           ;PWM.c: 41:     T2CONbits.TMR2ON = 0;
  3026  0009C4  94CA               	bcf	202,2,c	;volatile
  3027  0009C6  0012               	return		;funcret
  3028  0009C8                     __end_of_PWM_GeneratePulsos:
  3029                           	opt callstack 0
  3030                           
  3031 ;; *************** function _PWM_OneshotY *****************
  3032 ;; Defined at:
  3033 ;;		line 81 in file "PWM.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  countY          2    0[COMRAM] int 
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  2    0[COMRAM] int 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3047 ;;      Params:         2       0       0       0       0       0       0       0       0
  3048 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3050 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3051 ;;Total ram usage:        2 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    2
  3054 ;; This function calls:
  3055 ;;		Nothing
  3056 ;; This function is called by:
  3057 ;;		_PWM_GeneratePulsos
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text18
  3062  001344                     __ptext18:
  3063                           	opt callstack 0
  3064  001344                     _PWM_OneshotY:
  3065                           	opt callstack 26
  3066  001344                     
  3067                           ;PWM.c: 82:     if (PORTCbits.RC1 == 1 & oneshotY == 0) {
  3068  001344  A282               	btfss	130,1,c	;volatile
  3069  001346  EFA7  F009         	goto	u1011
  3070  00134A  EFA9  F009         	goto	u1010
  3071  00134E                     u1011:
  3072  00134E  EFB5  F009         	goto	l2260
  3073  001352                     u1010:
  3074  001352  5057               	movf	_oneshotY^0,w,c
  3075  001354  A4D8               	btfss	status,2,c
  3076  001356  EFAF  F009         	goto	u1021
  3077  00135A  EFB1  F009         	goto	u1020
  3078  00135E                     u1021:
  3079  00135E  EFB5  F009         	goto	l2260
  3080  001362                     u1020:
  3081  001362                     
  3082                           ;PWM.c: 83:         countY++;
  3083  001362  4A01               	infsnz	PWM_OneshotY@countY^0,f,c
  3084  001364  2A02               	incf	(PWM_OneshotY@countY+1)^0,f,c
  3085  001366                     
  3086                           ;PWM.c: 84:         oneshotY = 1;
  3087  001366  0E01               	movlw	1
  3088  001368  6E57               	movwf	_oneshotY^0,c
  3089  00136A                     l2260:
  3090                           
  3091                           ;PWM.c: 86:     return countY;
  3092  00136A  C001  F001         	movff	PWM_OneshotY@countY,?_PWM_OneshotY
  3093  00136E  C002  F002         	movff	PWM_OneshotY@countY+1,?_PWM_OneshotY+1
  3094  001372  0012               	return		;funcret
  3095  001374                     __end_of_PWM_OneshotY:
  3096                           	opt callstack 0
  3097                           
  3098 ;; *************** function _PWM_OneshotX *****************
  3099 ;; Defined at:
  3100 ;;		line 73 in file "PWM.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  countX          2    0[COMRAM] int 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;		None
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  2    0[COMRAM] int 
  3107 ;; Registers used:
  3108 ;;		wreg, status,2, status,0
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3114 ;;      Params:         2       0       0       0       0       0       0       0       0
  3115 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3117 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3118 ;;Total ram usage:        2 bytes
  3119 ;; Hardware stack levels used:    1
  3120 ;; Hardware stack levels required when called:    2
  3121 ;; This function calls:
  3122 ;;		Nothing
  3123 ;; This function is called by:
  3124 ;;		_PWM_GeneratePulsos
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           	psect	text19
  3129  001374                     __ptext19:
  3130                           	opt callstack 0
  3131  001374                     _PWM_OneshotX:
  3132                           	opt callstack 26
  3133  001374                     
  3134                           ;PWM.c: 74:     if (PORTCbits.RC2 == 1 & oneshotX == 0) {
  3135  001374  A482               	btfss	130,2,c	;volatile
  3136  001376  EFBF  F009         	goto	u991
  3137  00137A  EFC1  F009         	goto	u990
  3138  00137E                     u991:
  3139  00137E  EFCD  F009         	goto	l2248
  3140  001382                     u990:
  3141  001382  5058               	movf	_oneshotX^0,w,c
  3142  001384  A4D8               	btfss	status,2,c
  3143  001386  EFC7  F009         	goto	u1001
  3144  00138A  EFC9  F009         	goto	u1000
  3145  00138E                     u1001:
  3146  00138E  EFCD  F009         	goto	l2248
  3147  001392                     u1000:
  3148  001392                     
  3149                           ;PWM.c: 75:         countX++;
  3150  001392  4A01               	infsnz	PWM_OneshotX@countX^0,f,c
  3151  001394  2A02               	incf	(PWM_OneshotX@countX+1)^0,f,c
  3152  001396                     
  3153                           ;PWM.c: 76:         oneshotX = 1;
  3154  001396  0E01               	movlw	1
  3155  001398  6E58               	movwf	_oneshotX^0,c
  3156  00139A                     l2248:
  3157                           
  3158                           ;PWM.c: 78:     return countX;
  3159  00139A  C001  F001         	movff	PWM_OneshotX@countX,?_PWM_OneshotX
  3160  00139E  C002  F002         	movff	PWM_OneshotX@countX+1,?_PWM_OneshotX+1
  3161  0013A2  0012               	return		;funcret
  3162  0013A4                     __end_of_PWM_OneshotX:
  3163                           	opt callstack 0
  3164                           
  3165 ;; *************** function _PWM_InitS *****************
  3166 ;; Defined at:
  3167 ;;		line 59 in file "PWM.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;		None
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;		None
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		wreg, status,2
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3181 ;;      Params:         0       0       0       0       0       0       0       0       0
  3182 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3184 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3185 ;;Total ram usage:        0 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    2
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_PWM_GeneratePulsos
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           	psect	text20
  3196  00145C                     __ptext20:
  3197                           	opt callstack 0
  3198  00145C                     _PWM_InitS:
  3199                           	opt callstack 26
  3200  00145C                     
  3201                           ;PWM.c: 61:     PR2 = 0XFF;
  3202  00145C  68CB               	setf	203,c	;volatile
  3203  00145E                     
  3204                           ;PWM.c: 62:     CCPR1L = 0X3E;
  3205  00145E  0E3E               	movlw	62
  3206  001460  6EBE               	movwf	190,c	;volatile
  3207                           
  3208                           ;PWM.c: 63:     CCPR2L = 0X3E;
  3209  001462  0E3E               	movlw	62
  3210  001464  6EBB               	movwf	187,c	;volatile
  3211  001466                     
  3212                           ;PWM.c: 64:     TRISCbits.RC1 = 0;
  3213  001466  9294               	bcf	148,1,c	;volatile
  3214  001468                     
  3215                           ;PWM.c: 65:     TRISCbits.RC2 = 0;
  3216  001468  9494               	bcf	148,2,c	;volatile
  3217                           
  3218                           ;PWM.c: 66:     T2CON = 0X03;
  3219  00146A  0E03               	movlw	3
  3220  00146C  6ECA               	movwf	202,c	;volatile
  3221                           
  3222                           ;PWM.c: 67:     CCP1CON = 0X0C;
  3223  00146E  0E0C               	movlw	12
  3224  001470  6EBD               	movwf	189,c	;volatile
  3225                           
  3226                           ;PWM.c: 68:     CCP2CON = 0X0C;
  3227  001472  0E0C               	movlw	12
  3228  001474  6EBA               	movwf	186,c	;volatile
  3229  001476                     
  3230                           ;PWM.c: 69:     T2CONbits.TMR2ON = 0;
  3231  001476  94CA               	bcf	202,2,c	;volatile
  3232  001478  0012               	return		;funcret
  3233  00147A                     __end_of_PWM_InitS:
  3234                           	opt callstack 0
  3235                           
  3236 ;; *************** function _PWM_InitF *****************
  3237 ;; Defined at:
  3238 ;;		line 45 in file "PWM.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;		None
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;		None
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  1    wreg      void 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3252 ;;      Params:         0       0       0       0       0       0       0       0       0
  3253 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3254 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3255 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3256 ;;Total ram usage:        0 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; Hardware stack levels required when called:    2
  3259 ;; This function calls:
  3260 ;;		Nothing
  3261 ;; This function is called by:
  3262 ;;		_PWM_GeneratePulsos
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	text21
  3267  00143C                     __ptext21:
  3268                           	opt callstack 0
  3269  00143C                     _PWM_InitF:
  3270                           	opt callstack 26
  3271  00143C                     
  3272                           ;PWM.c: 47:     PR2 = 0X7C;
  3273  00143C  0E7C               	movlw	124
  3274  00143E  6ECB               	movwf	203,c	;volatile
  3275                           
  3276                           ;PWM.c: 48:     CCPR1L = 0X3E;
  3277  001440  0E3E               	movlw	62
  3278  001442  6EBE               	movwf	190,c	;volatile
  3279                           
  3280                           ;PWM.c: 49:     CCPR2L = 0X3E;
  3281  001444  0E3E               	movlw	62
  3282  001446  6EBB               	movwf	187,c	;volatile
  3283  001448                     
  3284                           ;PWM.c: 50:     TRISCbits.RC1 = 0;
  3285  001448  9294               	bcf	148,1,c	;volatile
  3286  00144A                     
  3287                           ;PWM.c: 51:     TRISCbits.RC2 = 0;
  3288  00144A  9494               	bcf	148,2,c	;volatile
  3289                           
  3290                           ;PWM.c: 52:     T2CON = 0X03;
  3291  00144C  0E03               	movlw	3
  3292  00144E  6ECA               	movwf	202,c	;volatile
  3293                           
  3294                           ;PWM.c: 53:     CCP1CON = 0X0C;
  3295  001450  0E0C               	movlw	12
  3296  001452  6EBD               	movwf	189,c	;volatile
  3297                           
  3298                           ;PWM.c: 54:     CCP2CON = 0X0C;
  3299  001454  0E0C               	movlw	12
  3300  001456  6EBA               	movwf	186,c	;volatile
  3301  001458                     
  3302                           ;PWM.c: 55:     T2CONbits.TMR2ON = 0;
  3303  001458  94CA               	bcf	202,2,c	;volatile
  3304  00145A  0012               	return		;funcret
  3305  00145C                     __end_of_PWM_InitF:
  3306                           	opt callstack 0
  3307                           
  3308 ;; *************** function _Motor_Conversion *****************
  3309 ;; Defined at:
  3310 ;;		line 18 in file "Motor.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;  Coordenada      2   49[COMRAM] int 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  conversion      4   51[COMRAM] float 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  2   49[COMRAM] int 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2, status,0, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3324 ;;      Params:         2       0       0       0       0       0       0       0       0
  3325 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3327 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3328 ;;Total ram usage:        6 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    3
  3331 ;; This function calls:
  3332 ;;		___fldiv
  3333 ;;		___fltol
  3334 ;;		___xxtofl
  3335 ;; This function is called by:
  3336 ;;		_Motor_Movimiento
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text22
  3341  0010F0                     __ptext22:
  3342                           	opt callstack 0
  3343  0010F0                     _Motor_Conversion:
  3344                           	opt callstack 26
  3345  0010F0                     
  3346                           ;Motor.c: 19:     float conversion = 0.2;
  3347  0010F0  0ECD               	movlw	205
  3348  0010F2  6E34               	movwf	Motor_Conversion@conversion^0,c
  3349  0010F4  0ECC               	movlw	204
  3350  0010F6  6E35               	movwf	(Motor_Conversion@conversion+1)^0,c
  3351  0010F8  0E4C               	movlw	76
  3352  0010FA  6E36               	movwf	(Motor_Conversion@conversion+2)^0,c
  3353  0010FC  0E3E               	movlw	62
  3354  0010FE  6E37               	movwf	(Motor_Conversion@conversion+3)^0,c
  3355  001100                     
  3356                           ;Motor.c: 20:     pasos_convertidos = Coordenada / conversion;
  3357  001100  C034  F013         	movff	Motor_Conversion@conversion,___fldiv@a
  3358  001104  C035  F014         	movff	Motor_Conversion@conversion+1,___fldiv@a+1
  3359  001108  C036  F015         	movff	Motor_Conversion@conversion+2,___fldiv@a+2
  3360  00110C  C037  F016         	movff	Motor_Conversion@conversion+3,___fldiv@a+3
  3361  001110  C032  F001         	movff	Motor_Conversion@Coordenada,___xxtofl@val
  3362  001114  C033  F002         	movff	Motor_Conversion@Coordenada+1,___xxtofl@val+1
  3363  001118  0E00               	movlw	0
  3364  00111A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  3365  00111C  0EFF               	movlw	-1
  3366  00111E  6E03               	movwf	(___xxtofl@val+2)^0,c
  3367  001120  6E04               	movwf	(___xxtofl@val+3)^0,c
  3368  001122  0E01               	movlw	1
  3369  001124  ECB2  F002         	call	___xxtofl
  3370  001128  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3371  00112C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3372  001130  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3373  001134  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3374  001138  EC09  F000         	call	___fldiv	;wreg free
  3375  00113C  C00F  F028         	movff	?___fldiv,___fltol@f1
  3376  001140  C010  F029         	movff	?___fldiv+1,___fltol@f1+1
  3377  001144  C011  F02A         	movff	?___fldiv+2,___fltol@f1+2
  3378  001148  C012  F02B         	movff	?___fldiv+3,___fltol@f1+3
  3379  00114C  ECFC  F005         	call	___fltol	;wreg free
  3380  001150  C028  F04E         	movff	?___fltol,_pasos_convertidos
  3381  001154  C029  F04F         	movff	?___fltol+1,_pasos_convertidos+1
  3382  001158                     
  3383                           ;Motor.c: 21:     return pasos_convertidos;
  3384  001158  C04E  F032         	movff	_pasos_convertidos,?_Motor_Conversion
  3385  00115C  C04F  F033         	movff	_pasos_convertidos+1,?_Motor_Conversion+1
  3386  001160  0012               	return		;funcret
  3387  001162                     __end_of_Motor_Conversion:
  3388                           	opt callstack 0
  3389                           
  3390 ;; *************** function ___xxtofl *****************
  3391 ;; Defined at:
  3392 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;  sign            1    wreg     unsigned char 
  3395 ;;  val             4    0[COMRAM] long 
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;  sign            1    8[COMRAM] unsigned char 
  3398 ;;  arg             4   10[COMRAM] unsigned long 
  3399 ;;  exp             1    9[COMRAM] unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  4    0[COMRAM] unsigned char 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3409 ;;      Params:         4       0       0       0       0       0       0       0       0
  3410 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3411 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3412 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3413 ;;Total ram usage:       14 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    2
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_Motor_Conversion
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text23
  3424  000564                     __ptext23:
  3425                           	opt callstack 0
  3426  000564                     ___xxtofl:
  3427                           	opt callstack 26
  3428                           
  3429                           ;incstack = 0
  3430                           ;___xxtofl@sign stored from wreg
  3431  000564  6E09               	movwf	___xxtofl@sign^0,c
  3432  000566  5009               	movf	___xxtofl@sign^0,w,c
  3433  000568  B4D8               	btfsc	status,2,c
  3434  00056A  EFB9  F002         	goto	u1341
  3435  00056E  EFBB  F002         	goto	u1340
  3436  000572                     u1341:
  3437  000572  EFDD  F002         	goto	l1197
  3438  000576                     u1340:
  3439  000576  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3440  000578  EFC2  F002         	goto	u1350
  3441  00057C  EFC0  F002         	goto	u1351
  3442  000580                     u1351:
  3443  000580  EFDD  F002         	goto	l1197
  3444  000584                     u1350:
  3445  000584  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3446  000588  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3447  00058C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3448  000590  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3449  000594  1E05               	comf	??___xxtofl^0,f,c
  3450  000596  1E06               	comf	(??___xxtofl+1)^0,f,c
  3451  000598  1E07               	comf	(??___xxtofl+2)^0,f,c
  3452  00059A  1E08               	comf	(??___xxtofl+3)^0,f,c
  3453  00059C  2A05               	incf	??___xxtofl^0,f,c
  3454  00059E  0E00               	movlw	0
  3455  0005A0  2206               	addwfc	(??___xxtofl+1)^0,f,c
  3456  0005A2  2207               	addwfc	(??___xxtofl+2)^0,f,c
  3457  0005A4  2208               	addwfc	(??___xxtofl+3)^0,f,c
  3458  0005A6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3459  0005AA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3460  0005AE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3461  0005B2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3462  0005B6  EFE5  F002         	goto	l2462
  3463  0005BA                     l1197:
  3464  0005BA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3465  0005BE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3466  0005C2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3467  0005C6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3468  0005CA                     l2462:
  3469  0005CA  5001               	movf	___xxtofl@val^0,w,c
  3470  0005CC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  3471  0005CE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  3472  0005D0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  3473  0005D2  A4D8               	btfss	status,2,c
  3474  0005D4  EFEE  F002         	goto	u1361
  3475  0005D8  EFF0  F002         	goto	u1360
  3476  0005DC                     u1361:
  3477  0005DC  EFFA  F002         	goto	l2468
  3478  0005E0                     u1360:
  3479  0005E0  0E00               	movlw	0
  3480  0005E2  6E01               	movwf	?___xxtofl^0,c
  3481  0005E4  0E00               	movlw	0
  3482  0005E6  6E02               	movwf	(?___xxtofl+1)^0,c
  3483  0005E8  0E00               	movlw	0
  3484  0005EA  6E03               	movwf	(?___xxtofl+2)^0,c
  3485  0005EC  0E00               	movlw	0
  3486  0005EE  6E04               	movwf	(?___xxtofl+3)^0,c
  3487  0005F0  EF8B  F003         	goto	l1200
  3488  0005F4                     l2468:
  3489  0005F4  0E96               	movlw	150
  3490  0005F6  6E0A               	movwf	___xxtofl@exp^0,c
  3491  0005F8  EF04  F003         	goto	l2472
  3492  0005FC                     l2470:
  3493  0005FC  2A0A               	incf	___xxtofl@exp^0,f,c
  3494  0005FE  90D8               	bcf	status,0,c
  3495  000600  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3496  000602  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3497  000604  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3498  000606  320B               	rrcf	___xxtofl@arg^0,f,c
  3499  000608                     l2472:
  3500  000608  0E00               	movlw	0
  3501  00060A  140B               	andwf	___xxtofl@arg^0,w,c
  3502  00060C  6E05               	movwf	??___xxtofl^0,c
  3503  00060E  0E00               	movlw	0
  3504  000610  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3505  000612  6E06               	movwf	(??___xxtofl+1)^0,c
  3506  000614  0E00               	movlw	0
  3507  000616  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3508  000618  6E07               	movwf	(??___xxtofl+2)^0,c
  3509  00061A  0EFE               	movlw	254
  3510  00061C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3511  00061E  6E08               	movwf	(??___xxtofl+3)^0,c
  3512  000620  5005               	movf	??___xxtofl^0,w,c
  3513  000622  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3514  000624  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3515  000626  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3516  000628  A4D8               	btfss	status,2,c
  3517  00062A  EF19  F003         	goto	u1371
  3518  00062E  EF1B  F003         	goto	u1370
  3519  000632                     u1371:
  3520  000632  EFFE  F002         	goto	l2470
  3521  000636                     u1370:
  3522  000636  EF29  F003         	goto	l1204
  3523  00063A                     l2474:
  3524  00063A  2A0A               	incf	___xxtofl@exp^0,f,c
  3525  00063C  0E01               	movlw	1
  3526  00063E  260B               	addwf	___xxtofl@arg^0,f,c
  3527  000640  0E00               	movlw	0
  3528  000642  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3529  000644  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3530  000646  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3531  000648  90D8               	bcf	status,0,c
  3532  00064A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3533  00064C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3534  00064E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3535  000650  320B               	rrcf	___xxtofl@arg^0,f,c
  3536  000652                     l1204:
  3537  000652  0E00               	movlw	0
  3538  000654  140B               	andwf	___xxtofl@arg^0,w,c
  3539  000656  6E05               	movwf	??___xxtofl^0,c
  3540  000658  0E00               	movlw	0
  3541  00065A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3542  00065C  6E06               	movwf	(??___xxtofl+1)^0,c
  3543  00065E  0E00               	movlw	0
  3544  000660  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3545  000662  6E07               	movwf	(??___xxtofl+2)^0,c
  3546  000664  0EFF               	movlw	255
  3547  000666  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3548  000668  6E08               	movwf	(??___xxtofl+3)^0,c
  3549  00066A  5005               	movf	??___xxtofl^0,w,c
  3550  00066C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3551  00066E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3552  000670  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3553  000672  A4D8               	btfss	status,2,c
  3554  000674  EF3E  F003         	goto	u1381
  3555  000678  EF40  F003         	goto	u1380
  3556  00067C                     u1381:
  3557  00067C  EF1D  F003         	goto	l2474
  3558  000680                     u1380:
  3559  000680  EF48  F003         	goto	l2482
  3560  000684                     l2480:
  3561  000684  060A               	decf	___xxtofl@exp^0,f,c
  3562  000686  90D8               	bcf	status,0,c
  3563  000688  360B               	rlcf	___xxtofl@arg^0,f,c
  3564  00068A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3565  00068C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3566  00068E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3567  000690                     l2482:
  3568  000690  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3569  000692  EF4D  F003         	goto	u1391
  3570  000696  EF4F  F003         	goto	u1390
  3571  00069A                     u1391:
  3572  00069A  EF57  F003         	goto	l1211
  3573  00069E                     u1390:
  3574  00069E  0E02               	movlw	2
  3575  0006A0  600A               	cpfslt	___xxtofl@exp^0,c
  3576  0006A2  EF55  F003         	goto	u1401
  3577  0006A6  EF57  F003         	goto	u1400
  3578  0006AA                     u1401:
  3579  0006AA  EF42  F003         	goto	l2480
  3580  0006AE                     u1400:
  3581  0006AE                     l1211:
  3582  0006AE  B00A               	btfsc	___xxtofl@exp^0,0,c
  3583  0006B0  EF5C  F003         	goto	u1411
  3584  0006B4  EF5E  F003         	goto	u1410
  3585  0006B8                     u1411:
  3586  0006B8  EF5F  F003         	goto	l2488
  3587  0006BC                     u1410:
  3588  0006BC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3589  0006BE                     l2488:
  3590  0006BE  90D8               	bcf	status,0,c
  3591  0006C0  320A               	rrcf	___xxtofl@exp^0,f,c
  3592  0006C2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3593  0006C6  6A06               	clrf	(??___xxtofl+1)^0,c
  3594  0006C8  6A07               	clrf	(??___xxtofl+2)^0,c
  3595  0006CA  6A08               	clrf	(??___xxtofl+3)^0,c
  3596  0006CC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3597  0006D0  6A07               	clrf	(??___xxtofl+2)^0,c
  3598  0006D2  6A06               	clrf	(??___xxtofl+1)^0,c
  3599  0006D4  6A05               	clrf	??___xxtofl^0,c
  3600  0006D6  5005               	movf	??___xxtofl^0,w,c
  3601  0006D8  120B               	iorwf	___xxtofl@arg^0,f,c
  3602  0006DA  5006               	movf	(??___xxtofl+1)^0,w,c
  3603  0006DC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3604  0006DE  5007               	movf	(??___xxtofl+2)^0,w,c
  3605  0006E0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3606  0006E2  5008               	movf	(??___xxtofl+3)^0,w,c
  3607  0006E4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3608  0006E6  5009               	movf	___xxtofl@sign^0,w,c
  3609  0006E8  B4D8               	btfsc	status,2,c
  3610  0006EA  EF79  F003         	goto	u1421
  3611  0006EE  EF7B  F003         	goto	u1420
  3612  0006F2                     u1421:
  3613  0006F2  EF83  F003         	goto	l2498
  3614  0006F6                     u1420:
  3615  0006F6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3616  0006F8  EF82  F003         	goto	u1430
  3617  0006FC  EF80  F003         	goto	u1431
  3618  000700                     u1431:
  3619  000700  EF83  F003         	goto	l2498
  3620  000704                     u1430:
  3621  000704  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3622  000706                     l2498:
  3623  000706  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3624  00070A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3625  00070E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3626  000712  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3627  000716                     l1200:
  3628  000716  0012               	return		;funcret
  3629  000718                     __end_of___xxtofl:
  3630                           	opt callstack 0
  3631                           
  3632 ;; *************** function ___fltol *****************
  3633 ;; Defined at:
  3634 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  f1              4   39[COMRAM] unsigned char 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  exp1            1   48[COMRAM] unsigned char 
  3639 ;;  sign1           1   47[COMRAM] unsigned char 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  4   39[COMRAM] long 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3649 ;;      Params:         4       0       0       0       0       0       0       0       0
  3650 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3651 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3652 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3653 ;;Total ram usage:       10 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:    2
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_Motor_Conversion
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text24
  3664  000BF8                     __ptext24:
  3665                           	opt callstack 0
  3666  000BF8                     ___fltol:
  3667                           	opt callstack 26
  3668  000BF8  342A               	rlcf	(___fltol@f1+2)^0,w,c
  3669  000BFA  342B               	rlcf	(___fltol@f1+3)^0,w,c
  3670  000BFC  6E31               	movwf	___fltol@exp1^0,c
  3671  000BFE  5031               	movf	___fltol@exp1^0,w,c
  3672  000C00  A4D8               	btfss	status,2,c
  3673  000C02  EF05  F006         	goto	u1271
  3674  000C06  EF07  F006         	goto	u1270
  3675  000C0A                     u1271:
  3676  000C0A  EF11  F006         	goto	l2418
  3677  000C0E                     u1270:
  3678  000C0E                     l2414:
  3679  000C0E  0E00               	movlw	0
  3680  000C10  6E28               	movwf	?___fltol^0,c
  3681  000C12  0E00               	movlw	0
  3682  000C14  6E29               	movwf	(?___fltol+1)^0,c
  3683  000C16  0E00               	movlw	0
  3684  000C18  6E2A               	movwf	(?___fltol+2)^0,c
  3685  000C1A  0E00               	movlw	0
  3686  000C1C  6E2B               	movwf	(?___fltol+3)^0,c
  3687  000C1E  EF7E  F006         	goto	l839
  3688  000C22                     l2418:
  3689  000C22  C028  F02C         	movff	___fltol@f1,??___fltol
  3690  000C26  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  3691  000C2A  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  3692  000C2E  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  3693  000C32  0E20               	movlw	32
  3694  000C34  EF21  F006         	goto	u1280
  3695  000C38                     u1285:
  3696  000C38  90D8               	bcf	status,0,c
  3697  000C3A  322F               	rrcf	(??___fltol+3)^0,f,c
  3698  000C3C  322E               	rrcf	(??___fltol+2)^0,f,c
  3699  000C3E  322D               	rrcf	(??___fltol+1)^0,f,c
  3700  000C40  322C               	rrcf	??___fltol^0,f,c
  3701  000C42                     u1280:
  3702  000C42  2EE8               	decfsz	wreg,f,c
  3703  000C44  EF1C  F006         	goto	u1285
  3704  000C48  502C               	movf	??___fltol^0,w,c
  3705  000C4A  6E30               	movwf	___fltol@sign1^0,c
  3706  000C4C  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  3707  000C4E  0EFF               	movlw	255
  3708  000C50  1628               	andwf	___fltol@f1^0,f,c
  3709  000C52  0EFF               	movlw	255
  3710  000C54  1629               	andwf	(___fltol@f1+1)^0,f,c
  3711  000C56  0EFF               	movlw	255
  3712  000C58  162A               	andwf	(___fltol@f1+2)^0,f,c
  3713  000C5A  0E00               	movlw	0
  3714  000C5C  162B               	andwf	(___fltol@f1+3)^0,f,c
  3715  000C5E  0E96               	movlw	150
  3716  000C60  5E31               	subwf	___fltol@exp1^0,f,c
  3717  000C62  BE31               	btfsc	___fltol@exp1^0,7,c
  3718  000C64  EF38  F006         	goto	u1290
  3719  000C68  EF36  F006         	goto	u1291
  3720  000C6C                     u1291:
  3721  000C6C  EF4E  F006         	goto	l2438
  3722  000C70                     u1290:
  3723  000C70  5031               	movf	___fltol@exp1^0,w,c
  3724  000C72  0A80               	xorlw	128
  3725  000C74  0F97               	addlw	151
  3726  000C76  B0D8               	btfsc	status,0,c
  3727  000C78  EF40  F006         	goto	u1301
  3728  000C7C  EF42  F006         	goto	u1300
  3729  000C80                     u1301:
  3730  000C80  EF44  F006         	goto	l2434
  3731  000C84                     u1300:
  3732  000C84  EF07  F006         	goto	l2414
  3733  000C88                     l2434:
  3734  000C88  90D8               	bcf	status,0,c
  3735  000C8A  322B               	rrcf	(___fltol@f1+3)^0,f,c
  3736  000C8C  322A               	rrcf	(___fltol@f1+2)^0,f,c
  3737  000C8E  3229               	rrcf	(___fltol@f1+1)^0,f,c
  3738  000C90  3228               	rrcf	___fltol@f1^0,f,c
  3739  000C92  3E31               	incfsz	___fltol@exp1^0,f,c
  3740  000C94  EF44  F006         	goto	l2434
  3741  000C98  EF66  F006         	goto	l2448
  3742  000C9C                     l2438:
  3743  000C9C  0E1F               	movlw	31
  3744  000C9E  6431               	cpfsgt	___fltol@exp1^0,c
  3745  000CA0  EF54  F006         	goto	u1311
  3746  000CA4  EF56  F006         	goto	u1310
  3747  000CA8                     u1311:
  3748  000CA8  EF5E  F006         	goto	l2446
  3749  000CAC                     u1310:
  3750  000CAC  EF07  F006         	goto	l2414
  3751  000CB0                     l2444:
  3752  000CB0  90D8               	bcf	status,0,c
  3753  000CB2  3628               	rlcf	___fltol@f1^0,f,c
  3754  000CB4  3629               	rlcf	(___fltol@f1+1)^0,f,c
  3755  000CB6  362A               	rlcf	(___fltol@f1+2)^0,f,c
  3756  000CB8  362B               	rlcf	(___fltol@f1+3)^0,f,c
  3757  000CBA  0631               	decf	___fltol@exp1^0,f,c
  3758  000CBC                     l2446:
  3759  000CBC  5031               	movf	___fltol@exp1^0,w,c
  3760  000CBE  A4D8               	btfss	status,2,c
  3761  000CC0  EF64  F006         	goto	u1321
  3762  000CC4  EF66  F006         	goto	u1320
  3763  000CC8                     u1321:
  3764  000CC8  EF58  F006         	goto	l2444
  3765  000CCC                     u1320:
  3766  000CCC                     l2448:
  3767  000CCC  5030               	movf	___fltol@sign1^0,w,c
  3768  000CCE  B4D8               	btfsc	status,2,c
  3769  000CD0  EF6C  F006         	goto	u1331
  3770  000CD4  EF6E  F006         	goto	u1330
  3771  000CD8                     u1331:
  3772  000CD8  EF76  F006         	goto	l2452
  3773  000CDC                     u1330:
  3774  000CDC  1E2B               	comf	(___fltol@f1+3)^0,f,c
  3775  000CDE  1E2A               	comf	(___fltol@f1+2)^0,f,c
  3776  000CE0  1E29               	comf	(___fltol@f1+1)^0,f,c
  3777  000CE2  6C28               	negf	___fltol@f1^0,c
  3778  000CE4  0E00               	movlw	0
  3779  000CE6  2229               	addwfc	(___fltol@f1+1)^0,f,c
  3780  000CE8  222A               	addwfc	(___fltol@f1+2)^0,f,c
  3781  000CEA  222B               	addwfc	(___fltol@f1+3)^0,f,c
  3782  000CEC                     l2452:
  3783  000CEC  C028  F028         	movff	___fltol@f1,?___fltol
  3784  000CF0  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  3785  000CF4  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  3786  000CF8  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  3787  000CFC                     l839:
  3788  000CFC  0012               	return		;funcret
  3789  000CFE                     __end_of___fltol:
  3790                           	opt callstack 0
  3791                           
  3792 ;; *************** function ___fldiv *****************
  3793 ;; Defined at:
  3794 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  b               4   14[COMRAM] long 
  3797 ;;  a               4   18[COMRAM] long 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;  grs             4   33[COMRAM] unsigned long 
  3800 ;;  rem             4   26[COMRAM] unsigned long 
  3801 ;;  new_exp         2   31[COMRAM] short 
  3802 ;;  aexp            1   38[COMRAM] unsigned char 
  3803 ;;  bexp            1   37[COMRAM] unsigned char 
  3804 ;;  sign            1   30[COMRAM] unsigned char 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  4   14[COMRAM] unsigned char 
  3807 ;; Registers used:
  3808 ;;		wreg, status,2, status,0
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3814 ;;      Params:         8       0       0       0       0       0       0       0       0
  3815 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3816 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3817 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3818 ;;Total ram usage:       25 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    2
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_Motor_Conversion
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text25
  3829  000012                     __ptext25:
  3830                           	opt callstack 0
  3831  000012                     ___fldiv:
  3832                           	opt callstack 26
  3833  000012  5012               	movf	(___fldiv@b+3)^0,w,c
  3834  000014  0B80               	andlw	128
  3835  000016  6E1F               	movwf	___fldiv@sign^0,c
  3836  000018  5012               	movf	(___fldiv@b+3)^0,w,c
  3837  00001A  2412               	addwf	(___fldiv@b+3)^0,w,c
  3838  00001C  6E26               	movwf	___fldiv@bexp^0,c
  3839  00001E  AE11               	btfss	(___fldiv@b+2)^0,7,c
  3840  000020  EF14  F000         	goto	u1041
  3841  000024  EF16  F000         	goto	u1040
  3842  000028                     u1041:
  3843  000028  EF17  F000         	goto	l2280
  3844  00002C                     u1040:
  3845  00002C  8026               	bsf	___fldiv@bexp^0,0,c
  3846  00002E                     l2280:
  3847  00002E  5026               	movf	___fldiv@bexp^0,w,c
  3848  000030  B4D8               	btfsc	status,2,c
  3849  000032  EF1D  F000         	goto	u1051
  3850  000036  EF1F  F000         	goto	u1050
  3851  00003A                     u1051:
  3852  00003A  EF34  F000         	goto	l2290
  3853  00003E                     u1050:
  3854  00003E  2826               	incf	___fldiv@bexp^0,w,c
  3855  000040  A4D8               	btfss	status,2,c
  3856  000042  EF25  F000         	goto	u1061
  3857  000046  EF27  F000         	goto	u1060
  3858  00004A                     u1061:
  3859  00004A  EF2F  F000         	goto	l2286
  3860  00004E                     u1060:
  3861  00004E  0E00               	movlw	0
  3862  000050  6E0F               	movwf	___fldiv@b^0,c
  3863  000052  0E00               	movlw	0
  3864  000054  6E10               	movwf	(___fldiv@b+1)^0,c
  3865  000056  0E00               	movlw	0
  3866  000058  6E11               	movwf	(___fldiv@b+2)^0,c
  3867  00005A  0E00               	movlw	0
  3868  00005C  6E12               	movwf	(___fldiv@b+3)^0,c
  3869  00005E                     l2286:
  3870  00005E  8E11               	bsf	(___fldiv@b+2)^0,7,c
  3871  000060  0E00               	movlw	0
  3872  000062  6E12               	movwf	(___fldiv@b+3)^0,c
  3873  000064  EF3C  F000         	goto	l2292
  3874  000068                     l2290:
  3875  000068  0E00               	movlw	0
  3876  00006A  6E0F               	movwf	___fldiv@b^0,c
  3877  00006C  0E00               	movlw	0
  3878  00006E  6E10               	movwf	(___fldiv@b+1)^0,c
  3879  000070  0E00               	movlw	0
  3880  000072  6E11               	movwf	(___fldiv@b+2)^0,c
  3881  000074  0E00               	movlw	0
  3882  000076  6E12               	movwf	(___fldiv@b+3)^0,c
  3883  000078                     l2292:
  3884  000078  5016               	movf	(___fldiv@a+3)^0,w,c
  3885  00007A  0B80               	andlw	128
  3886  00007C  1A1F               	xorwf	___fldiv@sign^0,f,c
  3887  00007E  5016               	movf	(___fldiv@a+3)^0,w,c
  3888  000080  2416               	addwf	(___fldiv@a+3)^0,w,c
  3889  000082  6E27               	movwf	___fldiv@aexp^0,c
  3890  000084  AE15               	btfss	(___fldiv@a+2)^0,7,c
  3891  000086  EF47  F000         	goto	u1071
  3892  00008A  EF49  F000         	goto	u1070
  3893  00008E                     u1071:
  3894  00008E  EF4A  F000         	goto	l2300
  3895  000092                     u1070:
  3896  000092  8027               	bsf	___fldiv@aexp^0,0,c
  3897  000094                     l2300:
  3898  000094  5027               	movf	___fldiv@aexp^0,w,c
  3899  000096  B4D8               	btfsc	status,2,c
  3900  000098  EF50  F000         	goto	u1081
  3901  00009C  EF52  F000         	goto	u1080
  3902  0000A0                     u1081:
  3903  0000A0  EF67  F000         	goto	l2310
  3904  0000A4                     u1080:
  3905  0000A4  2827               	incf	___fldiv@aexp^0,w,c
  3906  0000A6  A4D8               	btfss	status,2,c
  3907  0000A8  EF58  F000         	goto	u1091
  3908  0000AC  EF5A  F000         	goto	u1090
  3909  0000B0                     u1091:
  3910  0000B0  EF62  F000         	goto	l2306
  3911  0000B4                     u1090:
  3912  0000B4  0E00               	movlw	0
  3913  0000B6  6E13               	movwf	___fldiv@a^0,c
  3914  0000B8  0E00               	movlw	0
  3915  0000BA  6E14               	movwf	(___fldiv@a+1)^0,c
  3916  0000BC  0E00               	movlw	0
  3917  0000BE  6E15               	movwf	(___fldiv@a+2)^0,c
  3918  0000C0  0E00               	movlw	0
  3919  0000C2  6E16               	movwf	(___fldiv@a+3)^0,c
  3920  0000C4                     l2306:
  3921  0000C4  8E15               	bsf	(___fldiv@a+2)^0,7,c
  3922  0000C6  0E00               	movlw	0
  3923  0000C8  6E16               	movwf	(___fldiv@a+3)^0,c
  3924  0000CA  EF6F  F000         	goto	l2312
  3925  0000CE                     l2310:
  3926  0000CE  0E00               	movlw	0
  3927  0000D0  6E13               	movwf	___fldiv@a^0,c
  3928  0000D2  0E00               	movlw	0
  3929  0000D4  6E14               	movwf	(___fldiv@a+1)^0,c
  3930  0000D6  0E00               	movlw	0
  3931  0000D8  6E15               	movwf	(___fldiv@a+2)^0,c
  3932  0000DA  0E00               	movlw	0
  3933  0000DC  6E16               	movwf	(___fldiv@a+3)^0,c
  3934  0000DE                     l2312:
  3935  0000DE  5013               	movf	___fldiv@a^0,w,c
  3936  0000E0  1014               	iorwf	(___fldiv@a+1)^0,w,c
  3937  0000E2  1015               	iorwf	(___fldiv@a+2)^0,w,c
  3938  0000E4  1016               	iorwf	(___fldiv@a+3)^0,w,c
  3939  0000E6  A4D8               	btfss	status,2,c
  3940  0000E8  EF78  F000         	goto	u1101
  3941  0000EC  EF7A  F000         	goto	u1100
  3942  0000F0                     u1101:
  3943  0000F0  EF92  F000         	goto	l2324
  3944  0000F4                     u1100:
  3945  0000F4  0E00               	movlw	0
  3946  0000F6  6E0F               	movwf	___fldiv@b^0,c
  3947  0000F8  0E00               	movlw	0
  3948  0000FA  6E10               	movwf	(___fldiv@b+1)^0,c
  3949  0000FC  0E00               	movlw	0
  3950  0000FE  6E11               	movwf	(___fldiv@b+2)^0,c
  3951  000100  0E00               	movlw	0
  3952  000102  6E12               	movwf	(___fldiv@b+3)^0,c
  3953  000104  0E80               	movlw	128
  3954  000106  1211               	iorwf	(___fldiv@b+2)^0,f,c
  3955  000108  0E7F               	movlw	127
  3956  00010A  1212               	iorwf	(___fldiv@b+3)^0,f,c
  3957  00010C                     l2318:
  3958  00010C  501F               	movf	___fldiv@sign^0,w,c
  3959  00010E  1212               	iorwf	(___fldiv@b+3)^0,f,c
  3960  000110  C00F  F00F         	movff	___fldiv@b,?___fldiv
  3961  000114  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  3962  000118  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  3963  00011C  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  3964  000120  EFD5  F001         	goto	l1124
  3965  000124                     l2324:
  3966  000124  5026               	movf	___fldiv@bexp^0,w,c
  3967  000126  A4D8               	btfss	status,2,c
  3968  000128  EF98  F000         	goto	u1111
  3969  00012C  EF9A  F000         	goto	u1110
  3970  000130                     u1111:
  3971  000130  EFA4  F000         	goto	l2332
  3972  000134                     u1110:
  3973  000134  0E00               	movlw	0
  3974  000136  6E0F               	movwf	?___fldiv^0,c
  3975  000138  0E00               	movlw	0
  3976  00013A  6E10               	movwf	(?___fldiv+1)^0,c
  3977  00013C  0E00               	movlw	0
  3978  00013E  6E11               	movwf	(?___fldiv+2)^0,c
  3979  000140  0E00               	movlw	0
  3980  000142  6E12               	movwf	(?___fldiv+3)^0,c
  3981  000144  EFD5  F001         	goto	l1124
  3982  000148                     l2332:
  3983  000148  5027               	movf	___fldiv@aexp^0,w,c
  3984  00014A  C026  F017         	movff	___fldiv@bexp,??___fldiv
  3985  00014E  6A18               	clrf	(??___fldiv+1)^0,c
  3986  000150  5E17               	subwf	??___fldiv^0,f,c
  3987  000152  0E00               	movlw	0
  3988  000154  5A18               	subwfb	(??___fldiv+1)^0,f,c
  3989  000156  0E7F               	movlw	127
  3990  000158  2417               	addwf	??___fldiv^0,w,c
  3991  00015A  6E20               	movwf	___fldiv@new_exp^0,c
  3992  00015C  0E00               	movlw	0
  3993  00015E  2018               	addwfc	(??___fldiv+1)^0,w,c
  3994  000160  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  3995  000162  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  3996  000166  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  3997  00016A  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  3998  00016E  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  3999  000172  0E00               	movlw	0
  4000  000174  6E0F               	movwf	___fldiv@b^0,c
  4001  000176  0E00               	movlw	0
  4002  000178  6E10               	movwf	(___fldiv@b+1)^0,c
  4003  00017A  0E00               	movlw	0
  4004  00017C  6E11               	movwf	(___fldiv@b+2)^0,c
  4005  00017E  0E00               	movlw	0
  4006  000180  6E12               	movwf	(___fldiv@b+3)^0,c
  4007  000182  0E00               	movlw	0
  4008  000184  6E22               	movwf	___fldiv@grs^0,c
  4009  000186  0E00               	movlw	0
  4010  000188  6E23               	movwf	(___fldiv@grs+1)^0,c
  4011  00018A  0E00               	movlw	0
  4012  00018C  6E24               	movwf	(___fldiv@grs+2)^0,c
  4013  00018E  0E00               	movlw	0
  4014  000190  6E25               	movwf	(___fldiv@grs+3)^0,c
  4015  000192  0E00               	movlw	0
  4016  000194  6E27               	movwf	___fldiv@aexp^0,c
  4017  000196  EF05  F001         	goto	l1126
  4018  00019A                     l2342:
  4019  00019A  5027               	movf	___fldiv@aexp^0,w,c
  4020  00019C  B4D8               	btfsc	status,2,c
  4021  00019E  EFD3  F000         	goto	u1121
  4022  0001A2  EFD5  F000         	goto	u1120
  4023  0001A6                     u1121:
  4024  0001A6  EFEC  F000         	goto	l2350
  4025  0001AA                     u1120:
  4026  0001AA  90D8               	bcf	status,0,c
  4027  0001AC  361B               	rlcf	___fldiv@rem^0,f,c
  4028  0001AE  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  4029  0001B0  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  4030  0001B2  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  4031  0001B4  90D8               	bcf	status,0,c
  4032  0001B6  360F               	rlcf	___fldiv@b^0,f,c
  4033  0001B8  3610               	rlcf	(___fldiv@b+1)^0,f,c
  4034  0001BA  3611               	rlcf	(___fldiv@b+2)^0,f,c
  4035  0001BC  3612               	rlcf	(___fldiv@b+3)^0,f,c
  4036  0001BE  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  4037  0001C0  EFE4  F000         	goto	u1131
  4038  0001C4  EFE6  F000         	goto	u1130
  4039  0001C8                     u1131:
  4040  0001C8  EFE7  F000         	goto	l1129
  4041  0001CC                     u1130:
  4042  0001CC  800F               	bsf	___fldiv@b^0,0,c
  4043  0001CE                     l1129:
  4044  0001CE  90D8               	bcf	status,0,c
  4045  0001D0  3622               	rlcf	___fldiv@grs^0,f,c
  4046  0001D2  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  4047  0001D4  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  4048  0001D6  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  4049  0001D8                     l2350:
  4050  0001D8  5013               	movf	___fldiv@a^0,w,c
  4051  0001DA  5C1B               	subwf	___fldiv@rem^0,w,c
  4052  0001DC  5014               	movf	(___fldiv@a+1)^0,w,c
  4053  0001DE  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  4054  0001E0  5015               	movf	(___fldiv@a+2)^0,w,c
  4055  0001E2  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  4056  0001E4  5016               	movf	(___fldiv@a+3)^0,w,c
  4057  0001E6  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  4058  0001E8  A0D8               	btfss	status,0,c
  4059  0001EA  EFF9  F000         	goto	u1141
  4060  0001EE  EFFB  F000         	goto	u1140
  4061  0001F2                     u1141:
  4062  0001F2  EF04  F001         	goto	l2356
  4063  0001F6                     u1140:
  4064  0001F6  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  4065  0001F8  5013               	movf	___fldiv@a^0,w,c
  4066  0001FA  5E1B               	subwf	___fldiv@rem^0,f,c
  4067  0001FC  5014               	movf	(___fldiv@a+1)^0,w,c
  4068  0001FE  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  4069  000200  5015               	movf	(___fldiv@a+2)^0,w,c
  4070  000202  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  4071  000204  5016               	movf	(___fldiv@a+3)^0,w,c
  4072  000206  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  4073  000208                     l2356:
  4074  000208  2A27               	incf	___fldiv@aexp^0,f,c
  4075  00020A                     l1126:
  4076  00020A  0E19               	movlw	25
  4077  00020C  6427               	cpfsgt	___fldiv@aexp^0,c
  4078  00020E  EF0B  F001         	goto	u1151
  4079  000212  EF0D  F001         	goto	u1150
  4080  000216                     u1151:
  4081  000216  EFCD  F000         	goto	l2342
  4082  00021A                     u1150:
  4083  00021A  501B               	movf	___fldiv@rem^0,w,c
  4084  00021C  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  4085  00021E  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  4086  000220  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  4087  000222  B4D8               	btfsc	status,2,c
  4088  000224  EF16  F001         	goto	u1161
  4089  000228  EF18  F001         	goto	u1160
  4090  00022C                     u1161:
  4091  00022C  EF30  F001         	goto	l2368
  4092  000230                     u1160:
  4093  000230  8022               	bsf	___fldiv@grs^0,0,c
  4094  000232  EF30  F001         	goto	l2368
  4095  000236                     l2362:
  4096  000236  90D8               	bcf	status,0,c
  4097  000238  360F               	rlcf	___fldiv@b^0,f,c
  4098  00023A  3610               	rlcf	(___fldiv@b+1)^0,f,c
  4099  00023C  3611               	rlcf	(___fldiv@b+2)^0,f,c
  4100  00023E  3612               	rlcf	(___fldiv@b+3)^0,f,c
  4101  000240  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  4102  000242  EF25  F001         	goto	u1171
  4103  000246  EF27  F001         	goto	u1170
  4104  00024A                     u1171:
  4105  00024A  EF28  F001         	goto	l1135
  4106  00024E                     u1170:
  4107  00024E  800F               	bsf	___fldiv@b^0,0,c
  4108  000250                     l1135:
  4109  000250  90D8               	bcf	status,0,c
  4110  000252  3622               	rlcf	___fldiv@grs^0,f,c
  4111  000254  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  4112  000256  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  4113  000258  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  4114  00025A  0620               	decf	___fldiv@new_exp^0,f,c
  4115  00025C  A0D8               	btfss	status,0,c
  4116  00025E  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  4117  000260                     l2368:
  4118  000260  AE11               	btfss	(___fldiv@b+2)^0,7,c
  4119  000262  EF35  F001         	goto	u1181
  4120  000266  EF37  F001         	goto	u1180
  4121  00026A                     u1181:
  4122  00026A  EF1B  F001         	goto	l2362
  4123  00026E                     u1180:
  4124  00026E  0E00               	movlw	0
  4125  000270  6E27               	movwf	___fldiv@aexp^0,c
  4126  000272  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  4127  000274  EF3E  F001         	goto	u1191
  4128  000278  EF40  F001         	goto	u1190
  4129  00027C                     u1191:
  4130  00027C  EF64  F001         	goto	l1137
  4131  000280                     u1190:
  4132  000280  0EFF               	movlw	255
  4133  000282  1422               	andwf	___fldiv@grs^0,w,c
  4134  000284  6E17               	movwf	??___fldiv^0,c
  4135  000286  0EFF               	movlw	255
  4136  000288  1423               	andwf	(___fldiv@grs+1)^0,w,c
  4137  00028A  6E18               	movwf	(??___fldiv+1)^0,c
  4138  00028C  0EFF               	movlw	255
  4139  00028E  1424               	andwf	(___fldiv@grs+2)^0,w,c
  4140  000290  6E19               	movwf	(??___fldiv+2)^0,c
  4141  000292  0E7F               	movlw	127
  4142  000294  1425               	andwf	(___fldiv@grs+3)^0,w,c
  4143  000296  6E1A               	movwf	(??___fldiv+3)^0,c
  4144  000298  5017               	movf	??___fldiv^0,w,c
  4145  00029A  1018               	iorwf	(??___fldiv+1)^0,w,c
  4146  00029C  1019               	iorwf	(??___fldiv+2)^0,w,c
  4147  00029E  101A               	iorwf	(??___fldiv+3)^0,w,c
  4148  0002A0  B4D8               	btfsc	status,2,c
  4149  0002A2  EF55  F001         	goto	u1201
  4150  0002A6  EF57  F001         	goto	u1200
  4151  0002AA                     u1201:
  4152  0002AA  EF5B  F001         	goto	l1138
  4153  0002AE                     u1200:
  4154  0002AE                     l2376:
  4155  0002AE  0E01               	movlw	1
  4156  0002B0  6E27               	movwf	___fldiv@aexp^0,c
  4157  0002B2  EF64  F001         	goto	l1137
  4158  0002B6                     l1138:
  4159  0002B6  A00F               	btfss	___fldiv@b^0,0,c
  4160  0002B8  EF60  F001         	goto	u1211
  4161  0002BC  EF62  F001         	goto	u1210
  4162  0002C0                     u1211:
  4163  0002C0  EF64  F001         	goto	l1137
  4164  0002C4                     u1210:
  4165  0002C4  EF57  F001         	goto	l2376
  4166  0002C8                     l1137:
  4167  0002C8  5027               	movf	___fldiv@aexp^0,w,c
  4168  0002CA  B4D8               	btfsc	status,2,c
  4169  0002CC  EF6A  F001         	goto	u1221
  4170  0002D0  EF6C  F001         	goto	u1220
  4171  0002D4                     u1221:
  4172  0002D4  EF90  F001         	goto	l2388
  4173  0002D8                     u1220:
  4174  0002D8  0E01               	movlw	1
  4175  0002DA  260F               	addwf	___fldiv@b^0,f,c
  4176  0002DC  0E00               	movlw	0
  4177  0002DE  2210               	addwfc	(___fldiv@b+1)^0,f,c
  4178  0002E0  2211               	addwfc	(___fldiv@b+2)^0,f,c
  4179  0002E2  2212               	addwfc	(___fldiv@b+3)^0,f,c
  4180  0002E4  A012               	btfss	(___fldiv@b+3)^0,0,c
  4181  0002E6  EF77  F001         	goto	u1231
  4182  0002EA  EF79  F001         	goto	u1230
  4183  0002EE                     u1231:
  4184  0002EE  EF90  F001         	goto	l2388
  4185  0002F2                     u1230:
  4186  0002F2  C00F  F017         	movff	___fldiv@b,??___fldiv
  4187  0002F6  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  4188  0002FA  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  4189  0002FE  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  4190  000302  341A               	rlcf	(??___fldiv+3)^0,w,c
  4191  000304  321A               	rrcf	(??___fldiv+3)^0,f,c
  4192  000306  3219               	rrcf	(??___fldiv+2)^0,f,c
  4193  000308  3218               	rrcf	(??___fldiv+1)^0,f,c
  4194  00030A  3217               	rrcf	??___fldiv^0,f,c
  4195  00030C  C017  F00F         	movff	??___fldiv,___fldiv@b
  4196  000310  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  4197  000314  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  4198  000318  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  4199  00031C  4A20               	infsnz	___fldiv@new_exp^0,f,c
  4200  00031E  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  4201  000320                     l2388:
  4202  000320  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4203  000322  EF9B  F001         	goto	u1241
  4204  000326  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  4205  000328  E108               	bnz	u1240
  4206  00032A  2820               	incf	___fldiv@new_exp^0,w,c
  4207  00032C  A0D8               	btfss	status,0,c
  4208  00032E  EF9B  F001         	goto	u1241
  4209  000332  EF9D  F001         	goto	u1240
  4210  000336                     u1241:
  4211  000336  EFA8  F001         	goto	l2392
  4212  00033A                     u1240:
  4213  00033A  0E00               	movlw	0
  4214  00033C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  4215  00033E  6820               	setf	___fldiv@new_exp^0,c
  4216  000340  0E00               	movlw	0
  4217  000342  6E0F               	movwf	___fldiv@b^0,c
  4218  000344  0E00               	movlw	0
  4219  000346  6E10               	movwf	(___fldiv@b+1)^0,c
  4220  000348  0E00               	movlw	0
  4221  00034A  6E11               	movwf	(___fldiv@b+2)^0,c
  4222  00034C  0E00               	movlw	0
  4223  00034E  6E12               	movwf	(___fldiv@b+3)^0,c
  4224  000350                     l2392:
  4225  000350  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4226  000352  EFB5  F001         	goto	u1250
  4227  000356  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  4228  000358  E106               	bnz	u1251
  4229  00035A  0420               	decf	___fldiv@new_exp^0,w,c
  4230  00035C  B0D8               	btfsc	status,0,c
  4231  00035E  EFB3  F001         	goto	u1251
  4232  000362  EFB5  F001         	goto	u1250
  4233  000366                     u1251:
  4234  000366  EFC3  F001         	goto	l2396
  4235  00036A                     u1250:
  4236  00036A  0E00               	movlw	0
  4237  00036C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  4238  00036E  0E00               	movlw	0
  4239  000370  6E20               	movwf	___fldiv@new_exp^0,c
  4240  000372  0E00               	movlw	0
  4241  000374  6E0F               	movwf	___fldiv@b^0,c
  4242  000376  0E00               	movlw	0
  4243  000378  6E10               	movwf	(___fldiv@b+1)^0,c
  4244  00037A  0E00               	movlw	0
  4245  00037C  6E11               	movwf	(___fldiv@b+2)^0,c
  4246  00037E  0E00               	movlw	0
  4247  000380  6E12               	movwf	(___fldiv@b+3)^0,c
  4248  000382  0E00               	movlw	0
  4249  000384  6E1F               	movwf	___fldiv@sign^0,c
  4250  000386                     l2396:
  4251  000386  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  4252  00038A  A026               	btfss	___fldiv@bexp^0,0,c
  4253  00038C  EFCA  F001         	goto	u1261
  4254  000390  EFCC  F001         	goto	u1260
  4255  000394                     u1261:
  4256  000394  EFCF  F001         	goto	l2402
  4257  000398                     u1260:
  4258  000398  8E11               	bsf	(___fldiv@b+2)^0,7,c
  4259  00039A  EFD0  F001         	goto	l2404
  4260  00039E                     l2402:
  4261  00039E  9E11               	bcf	(___fldiv@b+2)^0,7,c
  4262  0003A0                     l2404:
  4263  0003A0  90D8               	bcf	status,0,c
  4264  0003A2  3026               	rrcf	___fldiv@bexp^0,w,c
  4265  0003A4  6E12               	movwf	(___fldiv@b+3)^0,c
  4266  0003A6  EF86  F000         	goto	l2318
  4267  0003AA                     l1124:
  4268  0003AA  0012               	return		;funcret
  4269  0003AC                     __end_of___fldiv:
  4270                           	opt callstack 0
  4271                           
  4272 ;; *************** function _Motor_Calcular_PasosY *****************
  4273 ;; Defined at:
  4274 ;;		line 50 in file "Motor.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  coordenada_c    2    1[COMRAM] int 
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;		None
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  2    1[COMRAM] int 
  4281 ;; Registers used:
  4282 ;;		wreg, status,2, status,0, cstack
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4288 ;;      Params:         2       0       0       0       0       0       0       0       0
  4289 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4290 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4291 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4292 ;;Total ram usage:        3 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; Hardware stack levels required when called:    3
  4295 ;; This function calls:
  4296 ;;		_USART_Tx
  4297 ;; This function is called by:
  4298 ;;		_Motor_Movimiento
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text26
  4303  000ED6                     __ptext26:
  4304                           	opt callstack 0
  4305  000ED6                     _Motor_Calcular_PasosY:
  4306                           	opt callstack 26
  4307  000ED6                     
  4308                           ;Motor.c: 51:     if (coordenada_converY < coordenada_anteriorY) {
  4309  000ED6  5050               	movf	_coordenada_anteriorY^0,w,c
  4310  000ED8  5C02               	subwf	Motor_Calcular_PasosY@coordenada_converY^0,w,c
  4311  000EDA  5003               	movf	(Motor_Calcular_PasosY@coordenada_converY+1)^0,w,c
  4312  000EDC  0A80               	xorlw	128
  4313  000EDE  6E04               	movwf	??_Motor_Calcular_PasosY^0,c
  4314  000EE0  5051               	movf	(_coordenada_anteriorY+1)^0,w,c
  4315  000EE2  0A80               	xorlw	128
  4316  000EE4  5804               	subwfb	??_Motor_Calcular_PasosY^0,w,c
  4317  000EE6  B0D8               	btfsc	status,0,c
  4318  000EE8  EF78  F007         	goto	u1661
  4319  000EEC  EF7A  F007         	goto	u1660
  4320  000EF0                     u1661:
  4321  000EF0  EF86  F007         	goto	l2676
  4322  000EF4                     u1660:
  4323  000EF4                     
  4324                           ;Motor.c: 52:         USART_Tx('-');
  4325  000EF4  0E2D               	movlw	45
  4326  000EF6  EC4C  F00A         	call	_USART_Tx
  4327  000EFA                     
  4328                           ;Motor.c: 53:         PORTDbits.RD3 = 0;
  4329  000EFA  9683               	bcf	131,3,c	;volatile
  4330  000EFC                     
  4331                           ;Motor.c: 54:         coordenaY = coordenada_anteriorY - coordenada_converY;
  4332  000EFC  5002               	movf	Motor_Calcular_PasosY@coordenada_converY^0,w,c
  4333  000EFE  5C50               	subwf	_coordenada_anteriorY^0,w,c
  4334  000F00  6E46               	movwf	_coordenaY^0,c
  4335  000F02  5003               	movf	(Motor_Calcular_PasosY@coordenada_converY+1)^0,w,c
  4336  000F04  5851               	subwfb	(_coordenada_anteriorY+1)^0,w,c
  4337  000F06  6E47               	movwf	(_coordenaY+1)^0,c
  4338                           
  4339                           ;Motor.c: 55:     } else if (coordenada_converY > coordenada_anteriorY) {
  4340  000F08  EFB1  F007         	goto	l2688
  4341  000F0C                     l2676:
  4342  000F0C  5002               	movf	Motor_Calcular_PasosY@coordenada_converY^0,w,c
  4343  000F0E  5C50               	subwf	_coordenada_anteriorY^0,w,c
  4344  000F10  5051               	movf	(_coordenada_anteriorY+1)^0,w,c
  4345  000F12  0A80               	xorlw	128
  4346  000F14  6E04               	movwf	??_Motor_Calcular_PasosY^0,c
  4347  000F16  5003               	movf	(Motor_Calcular_PasosY@coordenada_converY+1)^0,w,c
  4348  000F18  0A80               	xorlw	128
  4349  000F1A  5804               	subwfb	??_Motor_Calcular_PasosY^0,w,c
  4350  000F1C  B0D8               	btfsc	status,0,c
  4351  000F1E  EF93  F007         	goto	u1671
  4352  000F22  EF95  F007         	goto	u1670
  4353  000F26                     u1671:
  4354  000F26  EFA1  F007         	goto	l2684
  4355  000F2A                     u1670:
  4356  000F2A                     
  4357                           ;Motor.c: 56:         USART_Tx('+');
  4358  000F2A  0E2B               	movlw	43
  4359  000F2C  EC4C  F00A         	call	_USART_Tx
  4360  000F30                     
  4361                           ;Motor.c: 57:         PORTDbits.RD3 = 1;
  4362  000F30  8683               	bsf	131,3,c	;volatile
  4363  000F32                     
  4364                           ;Motor.c: 58:         coordenaY = coordenada_converY - coordenada_anteriorY;
  4365  000F32  5050               	movf	_coordenada_anteriorY^0,w,c
  4366  000F34  5C02               	subwf	Motor_Calcular_PasosY@coordenada_converY^0,w,c
  4367  000F36  6E46               	movwf	_coordenaY^0,c
  4368  000F38  5051               	movf	(_coordenada_anteriorY+1)^0,w,c
  4369  000F3A  5803               	subwfb	(Motor_Calcular_PasosY@coordenada_converY+1)^0,w,c
  4370  000F3C  6E47               	movwf	(_coordenaY+1)^0,c
  4371                           
  4372                           ;Motor.c: 59:     } else if (coordenada_converY == coordenada_anteriorY) {
  4373  000F3E  EFB1  F007         	goto	l2688
  4374  000F42                     l2684:
  4375  000F42  5050               	movf	_coordenada_anteriorY^0,w,c
  4376  000F44  1802               	xorwf	Motor_Calcular_PasosY@coordenada_converY^0,w,c
  4377  000F46  E107               	bnz	u1681
  4378  000F48  5051               	movf	(_coordenada_anteriorY+1)^0,w,c
  4379  000F4A  1803               	xorwf	(Motor_Calcular_PasosY@coordenada_converY+1)^0,w,c
  4380  000F4C  A4D8               	btfss	status,2,c
  4381  000F4E  EFAB  F007         	goto	u1681
  4382  000F52  EFAD  F007         	goto	u1680
  4383  000F56                     u1681:
  4384  000F56  EFB1  F007         	goto	l2688
  4385  000F5A                     u1680:
  4386  000F5A                     
  4387                           ;Motor.c: 60:         coordenaY=0;
  4388  000F5A  0E00               	movlw	0
  4389  000F5C  6E47               	movwf	(_coordenaY+1)^0,c
  4390  000F5E  0E00               	movlw	0
  4391  000F60  6E46               	movwf	_coordenaY^0,c
  4392  000F62                     l2688:
  4393                           
  4394                           ;Motor.c: 62:     return (coordenaY);
  4395  000F62  C046  F002         	movff	_coordenaY,?_Motor_Calcular_PasosY
  4396  000F66  C047  F003         	movff	_coordenaY+1,?_Motor_Calcular_PasosY+1
  4397  000F6A  0012               	return		;funcret
  4398  000F6C                     __end_of_Motor_Calcular_PasosY:
  4399                           	opt callstack 0
  4400                           
  4401 ;; *************** function _Motor_Calcular_PasosX *****************
  4402 ;; Defined at:
  4403 ;;		line 35 in file "Motor.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  coordenada_c    2    1[COMRAM] int 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;		None
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  2    1[COMRAM] int 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4417 ;;      Params:         2       0       0       0       0       0       0       0       0
  4418 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4419 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4420 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4421 ;;Total ram usage:        3 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    3
  4424 ;; This function calls:
  4425 ;;		_USART_Tx
  4426 ;; This function is called by:
  4427 ;;		_Motor_Movimiento
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text27
  4432  000F6C                     __ptext27:
  4433                           	opt callstack 0
  4434  000F6C                     _Motor_Calcular_PasosX:
  4435                           	opt callstack 26
  4436  000F6C                     
  4437                           ;Motor.c: 36:     if (coordenada_converX < coordenada_anteriorX) {
  4438  000F6C  5052               	movf	_coordenada_anteriorX^0,w,c
  4439  000F6E  5C02               	subwf	Motor_Calcular_PasosX@coordenada_converX^0,w,c
  4440  000F70  5003               	movf	(Motor_Calcular_PasosX@coordenada_converX+1)^0,w,c
  4441  000F72  0A80               	xorlw	128
  4442  000F74  6E04               	movwf	??_Motor_Calcular_PasosX^0,c
  4443  000F76  5053               	movf	(_coordenada_anteriorX+1)^0,w,c
  4444  000F78  0A80               	xorlw	128
  4445  000F7A  5804               	subwfb	??_Motor_Calcular_PasosX^0,w,c
  4446  000F7C  B0D8               	btfsc	status,0,c
  4447  000F7E  EFC3  F007         	goto	u1631
  4448  000F82  EFC5  F007         	goto	u1630
  4449  000F86                     u1631:
  4450  000F86  EFD1  F007         	goto	l2652
  4451  000F8A                     u1630:
  4452  000F8A                     
  4453                           ;Motor.c: 37:         USART_Tx('-');
  4454  000F8A  0E2D               	movlw	45
  4455  000F8C  EC4C  F00A         	call	_USART_Tx
  4456  000F90                     
  4457                           ;Motor.c: 38:         PORTDbits.RD1 = 0;
  4458  000F90  9283               	bcf	131,1,c	;volatile
  4459  000F92                     
  4460                           ;Motor.c: 39:         coordenaX = coordenada_anteriorX - coordenada_converX;
  4461  000F92  5002               	movf	Motor_Calcular_PasosX@coordenada_converX^0,w,c
  4462  000F94  5C52               	subwf	_coordenada_anteriorX^0,w,c
  4463  000F96  6E48               	movwf	_coordenaX^0,c
  4464  000F98  5003               	movf	(Motor_Calcular_PasosX@coordenada_converX+1)^0,w,c
  4465  000F9A  5853               	subwfb	(_coordenada_anteriorX+1)^0,w,c
  4466  000F9C  6E49               	movwf	(_coordenaX+1)^0,c
  4467                           
  4468                           ;Motor.c: 40:     } else if (coordenada_converX > coordenada_anteriorX) {
  4469  000F9E  EFFC  F007         	goto	l2664
  4470  000FA2                     l2652:
  4471  000FA2  5002               	movf	Motor_Calcular_PasosX@coordenada_converX^0,w,c
  4472  000FA4  5C52               	subwf	_coordenada_anteriorX^0,w,c
  4473  000FA6  5053               	movf	(_coordenada_anteriorX+1)^0,w,c
  4474  000FA8  0A80               	xorlw	128
  4475  000FAA  6E04               	movwf	??_Motor_Calcular_PasosX^0,c
  4476  000FAC  5003               	movf	(Motor_Calcular_PasosX@coordenada_converX+1)^0,w,c
  4477  000FAE  0A80               	xorlw	128
  4478  000FB0  5804               	subwfb	??_Motor_Calcular_PasosX^0,w,c
  4479  000FB2  B0D8               	btfsc	status,0,c
  4480  000FB4  EFDE  F007         	goto	u1641
  4481  000FB8  EFE0  F007         	goto	u1640
  4482  000FBC                     u1641:
  4483  000FBC  EFEC  F007         	goto	l2660
  4484  000FC0                     u1640:
  4485  000FC0                     
  4486                           ;Motor.c: 41:         USART_Tx('+');
  4487  000FC0  0E2B               	movlw	43
  4488  000FC2  EC4C  F00A         	call	_USART_Tx
  4489  000FC6                     
  4490                           ;Motor.c: 42:         PORTDbits.RD1 = 1;
  4491  000FC6  8283               	bsf	131,1,c	;volatile
  4492  000FC8                     
  4493                           ;Motor.c: 43:         coordenaX = coordenada_converX - coordenada_anteriorX;
  4494  000FC8  5052               	movf	_coordenada_anteriorX^0,w,c
  4495  000FCA  5C02               	subwf	Motor_Calcular_PasosX@coordenada_converX^0,w,c
  4496  000FCC  6E48               	movwf	_coordenaX^0,c
  4497  000FCE  5053               	movf	(_coordenada_anteriorX+1)^0,w,c
  4498  000FD0  5803               	subwfb	(Motor_Calcular_PasosX@coordenada_converX+1)^0,w,c
  4499  000FD2  6E49               	movwf	(_coordenaX+1)^0,c
  4500                           
  4501                           ;Motor.c: 44:     } else if (coordenada_converX == coordenada_anteriorX) {
  4502  000FD4  EFFC  F007         	goto	l2664
  4503  000FD8                     l2660:
  4504  000FD8  5052               	movf	_coordenada_anteriorX^0,w,c
  4505  000FDA  1802               	xorwf	Motor_Calcular_PasosX@coordenada_converX^0,w,c
  4506  000FDC  E107               	bnz	u1651
  4507  000FDE  5053               	movf	(_coordenada_anteriorX+1)^0,w,c
  4508  000FE0  1803               	xorwf	(Motor_Calcular_PasosX@coordenada_converX+1)^0,w,c
  4509  000FE2  A4D8               	btfss	status,2,c
  4510  000FE4  EFF6  F007         	goto	u1651
  4511  000FE8  EFF8  F007         	goto	u1650
  4512  000FEC                     u1651:
  4513  000FEC  EFFC  F007         	goto	l2664
  4514  000FF0                     u1650:
  4515  000FF0                     
  4516                           ;Motor.c: 45:         coordenaX = 0;
  4517  000FF0  0E00               	movlw	0
  4518  000FF2  6E49               	movwf	(_coordenaX+1)^0,c
  4519  000FF4  0E00               	movlw	0
  4520  000FF6  6E48               	movwf	_coordenaX^0,c
  4521  000FF8                     l2664:
  4522                           
  4523                           ;Motor.c: 47:     return (coordenaX);
  4524  000FF8  C048  F002         	movff	_coordenaX,?_Motor_Calcular_PasosX
  4525  000FFC  C049  F003         	movff	_coordenaX+1,?_Motor_Calcular_PasosX+1
  4526  001000  0012               	return		;funcret
  4527  001002                     __end_of_Motor_Calcular_PasosX:
  4528                           	opt callstack 0
  4529                           
  4530 ;; *************** function _USART_Tx *****************
  4531 ;; Defined at:
  4532 ;;		line 25 in file "UART.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  data            1    wreg     unsigned char 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  data            1    0[COMRAM] unsigned char 
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      void 
  4539 ;; Registers used:
  4540 ;;		wreg
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4546 ;;      Params:         0       0       0       0       0       0       0       0       0
  4547 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4549 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4550 ;;Total ram usage:        1 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:    2
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_main
  4557 ;;		_Motor_Calcular_PasosX
  4558 ;;		_Motor_Calcular_PasosY
  4559 ;;		_USART_SPrint
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           	psect	text28
  4564  001498                     __ptext28:
  4565                           	opt callstack 0
  4566  001498                     _USART_Tx:
  4567                           	opt callstack 28
  4568                           
  4569                           ;incstack = 0
  4570                           ;USART_Tx@data stored from wreg
  4571  001498  6E01               	movwf	USART_Tx@data^0,c
  4572  00149A                     l90:
  4573  00149A  A89E               	btfss	158,4,c	;volatile
  4574  00149C  EF52  F00A         	goto	u1031
  4575  0014A0  EF54  F00A         	goto	u1030
  4576  0014A4                     u1031:
  4577  0014A4  EF4D  F00A         	goto	l90
  4578  0014A8                     u1030:
  4579  0014A8                     
  4580                           ;UART.c: 27:     TXREG = data;
  4581  0014A8  C001  FFAD         	movff	USART_Tx@data,4013	;volatile
  4582  0014AC  0012               	return		;funcret
  4583  0014AE                     __end_of_USART_Tx:
  4584                           	opt callstack 0
  4585                           
  4586 ;; *************** function _Actuator_Touch *****************
  4587 ;; Defined at:
  4588 ;;		line 19 in file "Actuator.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;		None
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;		None
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  1    wreg      void 
  4595 ;; Registers used:
  4596 ;;		wreg
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4602 ;;      Params:         0       0       0       0       0       0       0       0       0
  4603 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4604 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4605 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4606 ;;Total ram usage:        2 bytes
  4607 ;; Hardware stack levels used:    1
  4608 ;; Hardware stack levels required when called:    2
  4609 ;; This function calls:
  4610 ;;		Nothing
  4611 ;; This function is called by:
  4612 ;;		_main
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           	psect	text29
  4617  00147A                     __ptext29:
  4618                           	opt callstack 0
  4619  00147A                     _Actuator_Touch:
  4620                           	opt callstack 28
  4621  00147A  808B               	bsf	139,0,c	;volatile
  4622  00147C                     
  4623                           ;Actuator.c: 21:     _delay((unsigned long)((100)*(8000000/4000.0)));
  4624  00147C  0E02               	movlw	2
  4625  00147E  6E02               	movwf	(??_Actuator_Touch+1)^0,c
  4626  001480  0E04               	movlw	4
  4627  001482  6E01               	movwf	??_Actuator_Touch^0,c
  4628  001484  0EBA               	movlw	186
  4629  001486                     u1887:
  4630  001486  2EE8               	decfsz	wreg,f,c
  4631  001488  D7FE               	bra	u1887
  4632  00148A  2E01               	decfsz	??_Actuator_Touch^0,f,c
  4633  00148C  D7FC               	bra	u1887
  4634  00148E  2E02               	decfsz	(??_Actuator_Touch+1)^0,f,c
  4635  001490  D7FA               	bra	u1887
  4636  001492  D000               	nop2	
  4637  001494  908B               	bcf	139,0,c	;volatile
  4638  001496  0012               	return		;funcret
  4639  001498                     __end_of_Actuator_Touch:
  4640                           	opt callstack 0
  4641                           
  4642 ;; *************** function _Actuator_Retrain *****************
  4643 ;; Defined at:
  4644 ;;		line 27 in file "Actuator.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;		None
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;		None
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      void 
  4651 ;; Registers used:
  4652 ;;		None
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4658 ;;      Params:         0       0       0       0       0       0       0       0       0
  4659 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4660 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4661 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4662 ;;Total ram usage:        0 bytes
  4663 ;; Hardware stack levels used:    1
  4664 ;; Hardware stack levels required when called:    2
  4665 ;; This function calls:
  4666 ;;		Nothing
  4667 ;; This function is called by:
  4668 ;;		_main
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           	psect	text30
  4673  0014D4                     __ptext30:
  4674                           	opt callstack 0
  4675  0014D4                     _Actuator_Retrain:
  4676                           	opt callstack 28
  4677  0014D4  908B               	bcf	139,0,c	;volatile
  4678  0014D6  0012               	return		;funcret
  4679  0014D8                     __end_of_Actuator_Retrain:
  4680                           	opt callstack 0
  4681                           
  4682 ;; *************** function _Actuator_Hold *****************
  4683 ;; Defined at:
  4684 ;;		line 24 in file "Actuator.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;		None
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;		None
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1    wreg      void 
  4691 ;; Registers used:
  4692 ;;		None
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4698 ;;      Params:         0       0       0       0       0       0       0       0       0
  4699 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4700 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4701 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4702 ;;Total ram usage:        0 bytes
  4703 ;; Hardware stack levels used:    1
  4704 ;; Hardware stack levels required when called:    2
  4705 ;; This function calls:
  4706 ;;		Nothing
  4707 ;; This function is called by:
  4708 ;;		_main
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           	psect	text31
  4713  0014D8                     __ptext31:
  4714                           	opt callstack 0
  4715  0014D8                     _Actuator_Hold:
  4716                           	opt callstack 28
  4717  0014D8  808B               	bsf	139,0,c	;volatile
  4718  0014DA  0012               	return		;funcret
  4719  0014DC                     __end_of_Actuator_Hold:
  4720                           	opt callstack 0
  4721                           
  4722 ;; *************** function _INT_isr *****************
  4723 ;; Defined at:
  4724 ;;		line 36 in file "main.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;		None
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;		None
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  1    wreg      void 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0, cstack
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4738 ;;      Params:         0       0       0       0       0       0       0       0       0
  4739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4741 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4742 ;;Total ram usage:        0 bytes
  4743 ;; Hardware stack levels used:    1
  4744 ;; Hardware stack levels required when called:    1
  4745 ;; This function calls:
  4746 ;;		_Oneshot
  4747 ;; This function is called by:
  4748 ;;		Interrupt level 2
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	intcode
  4753  000008                     __pintcode:
  4754                           	opt callstack 0
  4755  000008                     _INT_isr:
  4756                           	opt callstack 26
  4757                           
  4758                           ;incstack = 0
  4759  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4760  00000A  ED0C  F00A         	call	int_func,f	;refresh shadow registers
  4761                           
  4762                           	psect	intcode_body
  4763  001418                     __pintcode_body:
  4764                           	opt callstack 26
  4765  001418                     int_func:
  4766                           	opt callstack 26
  4767  001418  0006               	pop		; remove dummy address from shadow register refresh
  4768  00141A                     
  4769                           ;main.c: 37:     PORTDbits.RD1=1;
  4770  00141A  8283               	bsf	131,1,c	;volatile
  4771                           
  4772                           ;main.c: 38:     if (PORTBbits.RB2==0){
  4773  00141C  B481               	btfsc	129,2,c	;volatile
  4774  00141E  EF13  F00A         	goto	i2u98_41
  4775  001422  EF15  F00A         	goto	i2u98_40
  4776  001426                     i2u98_41:
  4777  001426  EF18  F00A         	goto	i2l2198
  4778  00142A                     i2u98_40:
  4779  00142A                     
  4780                           ;main.c: 39:             Oneshot();
  4781  00142A  ECD2  F009         	call	_Oneshot	;wreg free
  4782  00142E                     
  4783                           ;main.c: 40:         INTCON3bits.INT2IF=0;
  4784  00142E  92F0               	bcf	240,1,c	;volatile
  4785  001430                     i2l2198:
  4786                           
  4787                           ;main.c: 42:     oneshot=0;
  4788  001430  0E00               	movlw	0
  4789  001432  6E54               	movwf	_oneshot^0,c
  4790  001434                     
  4791                           ;main.c: 43:     PORTDbits.RD1=0;
  4792  001434  9283               	bcf	131,1,c	;volatile
  4793  001436                     
  4794                           ;main.c: 44:     INTCON3bits.INT2IF=0;
  4795  001436  92F0               	bcf	240,1,c	;volatile
  4796  001438  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4797  00143A  0011               	retfie		f
  4798  00143C                     __end_of_INT_isr:
  4799                           	opt callstack 0
  4800                           
  4801 ;; *************** function _Oneshot *****************
  4802 ;; Defined at:
  4803 ;;		line 48 in file "main.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;		None
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;		None
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		wreg, status,2, status,0
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4817 ;;      Params:         0       0       0       0       0       0       0       0       0
  4818 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4819 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4820 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4821 ;;Total ram usage:        0 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; This function calls:
  4824 ;;		Nothing
  4825 ;; This function is called by:
  4826 ;;		_INT_isr
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           	psect	text33
  4831  0013A4                     __ptext33:
  4832                           	opt callstack 0
  4833  0013A4                     _Oneshot:
  4834                           	opt callstack 26
  4835  0013A4                     
  4836                           ;main.c: 49:     if (PORTBbits.RB2 == 0 & oneshot == 0) {
  4837  0013A4  B481               	btfsc	129,2,c	;volatile
  4838  0013A6  EFD7  F009         	goto	i2u88_41
  4839  0013AA  EFD9  F009         	goto	i2u88_40
  4840  0013AE                     i2u88_41:
  4841  0013AE  EFE5  F009         	goto	i2l539
  4842  0013B2                     i2u88_40:
  4843  0013B2  5054               	movf	_oneshot^0,w,c
  4844  0013B4  A4D8               	btfss	status,2,c
  4845  0013B6  EFDF  F009         	goto	i2u89_41
  4846  0013BA  EFE1  F009         	goto	i2u89_40
  4847  0013BE                     i2u89_41:
  4848  0013BE  EFE5  F009         	goto	i2l539
  4849  0013C2                     i2u89_40:
  4850  0013C2                     
  4851                           ;main.c: 50:         cont++;
  4852  0013C2  4A40               	infsnz	_cont^0,f,c
  4853  0013C4  2A41               	incf	(_cont+1)^0,f,c
  4854  0013C6                     
  4855                           ;main.c: 51:         oneshot = 1;
  4856  0013C6  0E01               	movlw	1
  4857  0013C8  6E54               	movwf	_oneshot^0,c
  4858  0013CA                     i2l539:
  4859  0013CA  0012               	return		;funcret
  4860  0013CC                     __end_of_Oneshot:
  4861                           	opt callstack 0
  4862  0000                     
  4863                           	psect	rparam
  4864  0000                     
  4865                           	psect	temp
  4866  00005F                     btemp:
  4867                           	opt callstack 0
  4868  00005F                     	ds	1
  4869  0000                     int$flags	set	btemp
  4870  0000                     wtemp8	set	btemp+1
  4871  0000                     ttemp5	set	btemp+1
  4872  0000                     ttemp6	set	btemp+4
  4873  0000                     ttemp7	set	btemp+8
  4874                           tosu	equ	0xFFF
  4875                           tosh	equ	0xFFE
  4876                           tosl	equ	0xFFD
  4877                           stkptr	equ	0xFFC
  4878                           pclatu	equ	0xFFB
  4879                           pclath	equ	0xFFA
  4880                           pcl	equ	0xFF9
  4881                           tblptru	equ	0xFF8
  4882                           tblptrh	equ	0xFF7
  4883                           tblptrl	equ	0xFF6
  4884                           tablat	equ	0xFF5
  4885                           prodh	equ	0xFF4
  4886                           prodl	equ	0xFF3
  4887                           indf0	equ	0xFEF
  4888                           postinc0	equ	0xFEE
  4889                           postdec0	equ	0xFED
  4890                           preinc0	equ	0xFEC
  4891                           plusw0	equ	0xFEB
  4892                           fsr0h	equ	0xFEA
  4893                           fsr0l	equ	0xFE9
  4894                           wreg	equ	0xFE8
  4895                           indf1	equ	0xFE7
  4896                           postinc1	equ	0xFE6
  4897                           postdec1	equ	0xFE5
  4898                           preinc1	equ	0xFE4
  4899                           plusw1	equ	0xFE3
  4900                           fsr1h	equ	0xFE2
  4901                           fsr1l	equ	0xFE1
  4902                           bsr	equ	0xFE0
  4903                           indf2	equ	0xFDF
  4904                           postinc2	equ	0xFDE
  4905                           postdec2	equ	0xFDD
  4906                           preinc2	equ	0xFDC
  4907                           plusw2	equ	0xFDB
  4908                           fsr2h	equ	0xFDA
  4909                           fsr2l	equ	0xFD9
  4910                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     63      94
    BANK0           160      0      18
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> Serial_Lectura_Memoria@coordenadaZ(COMRAM[3]), Serial_Lectura_Memoria@coordenadaY(COMRAM[3]), Serial_Lectura_Memoria@coordenadaX(COMRAM[3]), Serial_DecodificacionZ@coordenadaZ(COMRAM[3]), 
		 -> Serial_DecodificacionY@coordenadaY(COMRAM[3]), Serial_DecodificacionX@coordenadaX(COMRAM[3]), 

    Serial_Escritura_Memoria@string_setpoint	PTR unsigned char  size(2) Largest target is 11
		 -> coordenada_setpoint(BANK0[11]), 

    Serial_Lectura_Memoria@pointerCZ	PTR int  size(2) Largest target is 2
		 -> CZ(COMRAM[2]), 

    Serial_Lectura_Memoria@pointerCY	PTR int  size(2) Largest target is 2
		 -> CY(COMRAM[2]), 

    Serial_Lectura_Memoria@pointerCX	PTR int  size(2) Largest target is 2
		 -> CX(COMRAM[2]), 

    Serial_DecodificacionY@pointerCY	PTR int  size(2) Largest target is 2
		 -> CY(COMRAM[2]), 

    Serial_DecodificacionY@string_coordenada	PTR unsigned char  size(2) Largest target is 7
		 -> coordenada_array(BANK0[7]), 

    Serial_DecodificacionX@pointerCX	PTR int  size(2) Largest target is 2
		 -> CX(COMRAM[2]), 

    Serial_DecodificacionX@string_coordenada	PTR unsigned char  size(2) Largest target is 7
		 -> coordenada_array(BANK0[7]), 

    USART_RxS@pointer	PTR unsigned char  size(2) Largest target is 11
		 -> coordenada_setpoint(BANK0[11]), coordenada_array(BANK0[7]), 


Critical Paths under _main in COMRAM

    _main->_Motor_Movimiento
    _USART_Init->___aldiv
    _Serial_Lectura_Memoria->_atoi
    _Serial_Escritura_Memoria->_EEPROM_Tx
    _Serial_DecodificacionY->_atoi
    _Serial_DecodificacionX->_atoi
    _atoi->_isspace
    _Motor_Movimiento->_Motor_Conversion
    _PWM_GeneratePulsos->_PWM_OneshotX
    _PWM_GeneratePulsos->_PWM_OneshotY
    _Motor_Conversion->___fltol
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _Motor_Calcular_PasosY->_USART_Tx
    _Motor_Calcular_PasosX->_USART_Tx

Critical Paths under _INT_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   12142
                                             60 COMRAM     3     3      0
                      _Actuator_Hold
                   _Actuator_Retrain
                     _Actuator_Touch
                   _Motor_Movimiento
       _Seria_Decodificacion_Memoria
             _Serial_DecodificacionX
             _Serial_DecodificacionY
           _Serial_Escritura_Memoria
             _Serial_Lectura_Memoria
                         _USART_Init
                           _USART_Rx
                          _USART_RxS
                           _USART_Tx
 ---------------------------------------------------------------------------------
 (1) _USART_RxS                                            8     6      2     318
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _USART_Rx                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     725
                                             14 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Serial_Lectura_Memoria                              22    16      6    2336
                                             22 COMRAM    22    16      6
                          _EEPROM_Rx
                               _atoi
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Rx                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Serial_Escritura_Memoria                            12    10      2     819
                                              2 COMRAM    12    10      2
                          _EEPROM_Tx
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Tx                                            2     1      1     272
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Serial_DecodificacionY                              11     7      4    1947
                                             22 COMRAM    11     7      4
                               _atoi
 ---------------------------------------------------------------------------------
 (1) _Serial_DecodificacionX                               9     5      4    1947
                                             22 COMRAM     9     5      4
                               _atoi
 ---------------------------------------------------------------------------------
 (2) _atoi                                                15    13      2    1456
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Seria_Decodificacion_Memoria                         3     3      0      60
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Motor_Movimiento                                     5     1      4    3879
                                             55 COMRAM     5     1      4
              _Motor_Calcular_PasosX
              _Motor_Calcular_PasosY
                   _Motor_Conversion
                 _PWM_GeneratePulsos
 ---------------------------------------------------------------------------------
 (2) _PWM_GeneratePulsos                                  10     6      4     598
                                              2 COMRAM    10     6      4
                          _PWM_InitF
                          _PWM_InitS
                       _PWM_OneshotX
                       _PWM_OneshotY
 ---------------------------------------------------------------------------------
 (3) _PWM_OneshotY                                         2     0      2      99
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM_OneshotX                                         2     0      2      99
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM_InitS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM_InitF                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Motor_Conversion                                     6     4      2    2299
                                             49 COMRAM     6     4      2
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             39 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1399
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Motor_Calcular_PasosY                                3     1      2     208
                                              1 COMRAM     3     1      2
                           _USART_Tx
 ---------------------------------------------------------------------------------
 (2) _Motor_Calcular_PasosX                                3     1      2     208
                                              1 COMRAM     3     1      2
                           _USART_Tx
 ---------------------------------------------------------------------------------
 (1) _USART_Tx                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Actuator_Touch                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Actuator_Retrain                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Actuator_Hold                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INT_isr                                              0     0      0       0
                            _Oneshot
 ---------------------------------------------------------------------------------
 (5) _Oneshot                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Actuator_Hold
   _Actuator_Retrain
   _Actuator_Touch
   _Motor_Movimiento
     _Motor_Calcular_PasosX
       _USART_Tx
     _Motor_Calcular_PasosY
       _USART_Tx
     _Motor_Conversion
       ___fldiv
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _PWM_GeneratePulsos
       _PWM_InitF
       _PWM_InitS
       _PWM_OneshotX
       _PWM_OneshotY
   _Seria_Decodificacion_Memoria
   _Serial_DecodificacionX
     _atoi
       ___wmul
       _isdigit
       _isspace
   _Serial_DecodificacionY
     _atoi
       ___wmul
       _isdigit
       _isspace
   _Serial_Escritura_Memoria
     _EEPROM_Tx
   _Serial_Lectura_Memoria
     _EEPROM_Rx
     _atoi
       ___wmul
       _isdigit
       _isspace
   _USART_Init
     ___aldiv
   _USART_Rx
   _USART_RxS
   _USART_Tx

 _INT_isr (ROOT)
   _Oneshot

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      12       5       11.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3F      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      70      20        0.0%
DATA                 0      0      70       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Nov 25 23:10:51 2019

              PWM_GeneratePulsos@Oupcode 0008                    _Motor_Calcular_PasosX 0F6C  
                  _Motor_Calcular_PasosY 0ED6                             ___fldiv@aexp 0027  
                           ___fldiv@bexp 0026                             ___fldiv@sign 001F  
                                     l43 0928                                       l52 09C6  
                                     l62 13A2                                       l55 145A  
                                     l47 0976                                       l90 149A  
                                     l58 1478                                       l66 1372  
                                     l93 14AC                                       l87 10EE  
                                     l96 14C2                                       _CX 005D  
                                     l99 14D2                                       _CY 005B  
                                     _CZ 0059                              __CFG_BOR$ON 000000  
                  __size_of_PWM_OneshotX 0030                    __size_of_PWM_OneshotY 0030  
                    ___wmul@multiplicand 0003                              __CFG_BORV$3 000000  
                           __CFG_CP0$OFF 000000                             __CFG_CP1$OFF 000000  
                           __CFG_CP2$OFF 000000                             __CFG_CP3$OFF 000000  
             ??_Serial_Escritura_Memoria 0005                                      l122 1286  
                                    l118 1240                                      l312 11CE  
                                    l307 1230                                      l406 1000  
                                    l414 0F6A                                      l338 0AEA  
                                    l347 0DE8                                      l356 0ED4  
                                    l461 14D4                                      l453 1496  
                                    l621 0BF6                                      l542 1416  
                                    l463 14D6                                      l456 14D8  
                                    l449 147A                                      l458 14DA  
                                    l395 1160                                      l483 14C0  
                                    l398 107A                                      l486 1330  
                                    l488 133E                                      l489 1342  
                                    l839 0CFC                             __CFG_CPB$OFF 000000  
          ?_Seria_Decodificacion_Memoria 0001                                      _PR2 000FCB  
                           __CFG_CPD$OFF 000000                                      u990 1382  
                                    u991 137E                              main@Oupcode 003F  
                                    wreg 000FE8                       __size_of_EEPROM_Rx 0014  
                     __size_of_EEPROM_Tx 0032                          ?_Actuator_Touch 0001  
              PWM_GeneratePulsos@pulsosX 0003                PWM_GeneratePulsos@pulsosY 0005  
                           __CFG_LVP$OFF 000000                             ___fltol@exp1 0031  
                           __CFG_WDT$OFF 000000                                     l1200 0716  
                                   l1211 06AE                                     l1124 03AA  
                                   l1204 0652                                     l1126 020A  
                                   l1135 0250                                     l3000 0484  
                                   l1137 02C8                                     l1129 01CE  
                                   l1241 0898                                     l1138 02B6  
                                   l3010 04C0                                     l3002 048C  
                                   l2300 0094                                     l2220 145E  
                                   l1244 08A0                                     l3020 04FC  
                                   l3012 04DA                                     l3004 0494  
                                   l2302 00A4                                     l2310 00CE  
                                   l2230 143C                                     l2222 1466  
                                   l3014 04E0                                     l3006 049A  
                                   l1247 1310                                     l1255 12D8  
                                   l2400 0398                                     l2320 0110  
                                   l2312 00DE                                     l2304 00B4  
                                   l2232 1448                                     l2224 1468  
                                   l2240 1374                                     l3016 04EE  
                                   l3008 04A2                                     l3024 050E  
                                   l2402 039E                                     l2314 00F4  
                                   l2306 00C4                                     l2234 144A  
                                   l2226 1476                                     l2218 145C  
                                   l2242 1382                                     l3018 04F4  
                                   l2404 03A0                                     l2340 0192  
                                   l2332 0148                                     l2316 0104  
                                   l2324 0124                                     l2308 00C6  
                                   l2420 0C4C                                     l2412 0BF8  
                                   l2236 1458                                     l2244 1392  
                                   l2260 136A                                     l2252 1344  
                                   l3060 07CE                                     l1197 05BA  
                                   l2350 01D8                                     l2342 019A  
                                   l2334 0162                                     l2326 0134  
                                   l2318 010C                                     l2422 0C4E  
                                   l2414 0C0E                                     l2246 1396  
                                   l2254 1352                                     l3062 0A62  
                                   l2270 140E                                     l2510 12D2  
                                   l2502 1288                                     l2264 149A  
                                   l2360 0230                                     l2352 01F6  
                                   l2344 01AA                                     l2336 0172  
                                   l2328 0134                                     l2280 002E  
                                   l2424 0C5E                                     l2248 139A  
                                   l2256 1362                                     l2520 08B6  
                                   l2504 128C                                     l2266 14A8  
                                   l2370 026E                                     l2362 0236  
                                   l2354 01F8                                     l2346 01BE  
                                   l2338 0182                                     l2282 003E  
                                   l2290 0068                                     l2274 0012  
                                   l2450 0CDC                                     l2434 0C88  
                                   l2426 0C62                                     l2418 0C22  
                                   l2258 1366                                     l2530 08C8  
                                   l2522 08BE                                     l2514 12DA  
                                   l2506 12A0                                     l2610 14BA  
                                   l2602 14B0                                     l3058 0522  
                                   l2380 02D8                                     l2372 0272  
                                   l2364 0240                                     l2356 0208  
                                   l2348 01CC                                     l2292 0078  
                                   l2284 004E                                     l2276 001E  
                                   l2452 0CEC                                     l2444 0CB0  
                                   l2436 0C92                                     l2428 0C70  
                                   l2460 0584                                     l2540 0920  
                                   l2532 08D0                                     l2524 08C2  
                                   l2268 13F2                                     l2508 12CE  
                                   l2620 131C                                     l2612 14BE  
                                   l2604 14B4                                     l2700 0B12  
                                   l2390 033A                                     l2382 02E4  
                                   l2374 0280                                     l2366 024E  
                                   l2358 021A                                     l2294 007E  
                                   l2286 005E                                     l2278 002C  
                                   l2446 0CBC                                     l2438 0C9C  
                                   l2470 05FC                                     l2462 05CA  
                                   l2542 092A                                     l2534 08DC  
                                   l2550 0978                                     l2526 08C4  
                                   l2518 08A4                                     l2630 1328  
                                   l2622 131E                                     l2606 14B6  
                                   l2710 0B5A                                     l2702 0B20  
                                   l2392 0350                                     l2384 02F2  
                                   l2376 02AE                                     l2368 0260  
                                   l2296 0084                                     l2288 0060  
                                   l2448 0CCC                                     l2480 0684  
                                   l2472 0608                                     l2464 05E0  
                                   l2456 0566                                     l2640 1158  
                                   l2552 0996                                     l2544 0948  
                                   l2536 08FA                                     l2528 08C6  
                                   l2560 0718                                     l2800 1196  
                                   l2632 132C                                     l2624 1320  
                                   l2616 1314                                     l2608 14B8  
                                   l2720 0BA4                                     l2712 0B62  
                                   l2704 0B30                                     l2650 0F92  
                                   l2394 036A                                     l2386 031C  
                                   l2298 0092                                     l2490 06C2  
                                   l2482 0690                                     l2474 063A  
                                   l2458 0576                                     l2554 09B4  
                                   l2546 0956                                     l2538 0908  
                                   l2810 105C                                     l2570 0782  
                                   l2562 072C                                     l2802 11B2  
                                   l2634 132E                                     l2626 1322  
                                   l2618 1318                                     l2730 0BD6  
                                   l2722 0BB4                                     l2714 0B6E  
                                   l2706 0B34                                     l2660 0FD8  
                                   l2652 0FA2                                     l2644 0F6C  
                                   l2396 0386                                     l2388 0320  
                                   l2492 06E6                                     l2484 069E  
                                   l2476 063C                                     l2468 05F4  
                                   l2636 10F0                                     l2556 09C4  
                                   l2548 096E                                     l2820 09CE  
                                   l2580 07AA                                     l2572 0786  
                                   l2564 0730                                     l2628 1324  
                                   l2900 0D6E                                     l2732 0BE6  
                                   l2724 0BB6                                     l2716 0B7C  
                                   l2708 0B44                                     l2740 1082  
                                   l2814 147C                                     l2662 0FF0  
                                   l2654 0FC0                                     l2646 0F8A  
                                   l2670 0EF4                                     l2398 038A  
                                   l2494 06F6                                     l2486 06BC  
                                   l2478 0648                                     l2638 1100  
                                   l2806 1004                                     l2830 09F6  
                                   l2822 09D6                                     l2582 07B2  
                                   l2566 0734                                     l2910 0DEC  
                                   l2902 0D82                                     l2726 0BC0  
                                   l2718 0B86                                     l2750 10E4  
                                   l2742 1084                                     l2816 1494  
                                   l2656 0FC6                                     l2664 0FF8  
                                   l2648 0F90                                     l2680 0F30  
                                   l2672 0EFA                                     l2496 0704  
                                   l2488 06BE                                     l2808 1054  
                                   l2840 0A1E                                     l2832 09FE  
                                   l2824 09DE                                     l2592 0858  
                                   l2584 07E4                                     l2576 078C  
                                   l2568 074E                                     l2920 0E10  
                                   l2904 0D84                                     l2728 0BC6  
                                   l2752 10E6                                     l2744 10B8  
                                   l2736 107C                                     l2760 14C2  
                                   l2658 0FC8                                     l2682 0F32  
                                   l2674 0EFC                                     l2498 0706  
                                   l2850 0A46                                     l2842 0A26  
                                   l2834 0A06                                     l2826 09E6  
                                   l2818 09CA                                     l2594 086A  
                                   l2578 07A2                                     l2930 0E38  
                                   l2922 0E14                                     l2906 0D94  
                                   l2754 10E8                                     l2746 10E0  
                                   l2738 1080                                     l2762 14D0  
                                   l2770 125E                                     l2684 0F42  
                                   l2676 0F0C                                     l2668 0ED6  
                                   l2844 0A2E                                     l2836 0A0E  
                                   l2828 09EE                                     l2596 087C  
                                   l2588 081C                                     l2780 11D8  
                                   l2932 0E40                                     l2924 0E30  
                                   l2916 0DF4                                     l2692 0AEC  
                                   l2756 10EA                                     l2748 10E2  
                                   l2772 1262                                     l2686 0F5A  
                                   l2678 0F2A                                     l2846 0A36  
                                   l2838 0A16                                     l2854 0A4E  
                                   l2782 11F4                                     l2774 11D0  
                                   l2790 1162                                     l2950 0EB8  
                                   l2934 0E62                                     l2918 0DFA  
                                   l2870 0D04                                     l2694 0AF0  
                                   l2758 10EC                                     l2766 1234  
                                   l2688 0F62                                     l2848 0A3E  
                                   l2856 0AE8                                     l2784 11F8  
                                   l2944 0E8A                                     l2936 0E66  
                                   l2872 0D0A                                     l2864 0D00  
                                   l2696 0AFE                                     l2768 124E  
                                   l2960 03AC                                     l2786 1214  
                                   l2946 0E92                                     l2938 0E82  
                                   l2890 0D52                                     l2874 0D1E  
                                   l2698 0B0E                                     l2970 03C8  
                                   l2962 03C0                                     l2796 116A  
                                   l2948 0EB4                                     l2892 0D62  
                                   l2884 0D34                                     l2876 0D20  
                                   l2980 03D2                                     l2972 03CA  
                                   l2964 03C2                                     l2798 1192  
                                   l2886 0D3C                                     l2878 0D30  
                                   l2990 042C                                     l2982 03DC  
                                   l2974 03CC                                     l2966 03C4  
                                   l2888 0D50                                     l2992 043A  
                                   l2984 03EA                                     l2976 03CE  
                                   l2968 03C6                                     l2898 0D66  
                                   l2994 044E                                     l2986 03FE  
                                   l2978 03D0                                     l2996 0462  
                                   l2988 0412                                     l2998 047C  
                                   u1000 1392                                     u1001 138E  
                                   u1010 1352                                     u1011 134E  
                                   u1100 00F4                                     u1020 1362  
                                   u1101 00F0                                     u1021 135E  
                                   u1030 14A8                                     u1110 0134  
                                   u1031 14A4                                     u1111 0130  
                                   u1200 02AE                                     u1120 01AA  
                                   u1040 002C                                     u1201 02AA  
                                   u1121 01A6                                     u1041 0028  
                                   u1210 02C4                                     u1130 01CC  
                                   u1050 003E                                     u1211 02C0  
                                   u1131 01C8                                     u1051 003A  
                                   u1220 02D8                                     u1140 01F6  
                                   u1060 004E                                     u1300 0C84  
                                   u1221 02D4                                     u1141 01F2  
                                   u1061 004A                                     u1301 0C80  
                                   u1230 02F2                                     u1150 021A  
                                   u1070 0092                                     u1310 0CAC  
                                   u1231 02EE                                     u1151 0216  
                                   u1071 008E                                     u1311 0CA8  
                                   u1240 033A                                     u1160 0230  
                                   u1080 00A4                                     u1320 0CCC  
                                   u1400 06AE                                     u1241 0336  
                                   u1161 022C                                     u1081 00A0  
                                   u1321 0CC8                                     u1401 06AA  
                                   u1250 036A                                     u1170 024E  
                                   u1090 00B4                                     u1330 0CDC  
                                   u1410 06BC                                     u1251 0366  
                                   u1171 024A                                     u1091 00B0  
                                   u1331 0CD8                                     u1411 06B8  
                                   u1260 0398                                     u1180 026E  
                                   u1420 06F6                                     u1340 0576  
                                   u1500 0908                                     u1261 0394  
                                   u1181 026A                                     u1421 06F2  
                                   u1341 0572                                     u1501 0904  
                                   u1190 0280                                     u1270 0C0E  
                                   u1430 0704                                     u1350 0584  
                                   u1510 0948                                     _LATB 000F8A  
                                   u1191 027C                                     u1271 0C0A  
                                   u1431 0700                                     u1351 0580  
                                   u1511 0944                                     _LATC 000F8B  
                                   u1280 0C42                                     u1360 05E0  
                                   u1520 0956                                     u1440 12A0  
                                   u1600 086A                                     _LATD 000F8C  
                                   u1361 05DC                                     u1521 0952  
                                   u1441 129C                                     u1601 0866  
                                   u1290 0C70                                     u1370 0636  
                                   u1530 0996                                     u1450 12CE  
                                   u1610 087C                                     u1291 0C6C  
                                   u1371 0632                                     u1531 0992  
                                   u1451 12CA                                     u1611 0878  
                                   u1380 0680                                     u1540 09B4  
                                   u1460 130A                                     u1620 133E  
                                   u1700 0B20                                     u1285 0C38  
                                   u1381 067C                                     u1541 09B0  
                                   u1461 1304                                     u1621 133A  
                                   u1701 0B1C                                     u1630 0F8A  
                                   u1390 069E                                     u1470 130C  
                                   u1550 074E                                     u1710 0B5A  
                                   u1631 0F86                                     u1391 069A  
                                   u1551 074A                                     u1711 0B56  
                                   u1640 0FC0                                     u1480 08B6  
                                   u1560 0782                                     u1800 0D30  
                                   u1720 0B7C                                     u1641 0FBC  
                                   u1481 08B2                                     u1561 077E  
                                   u1801 0D2C                                     u1721 0B78  
                                   u1650 0FF0                                     u1490 08FA  
                                   u1570 079E                                     u1810 0D62  
                                   u1730 0BA4                                     u1651 0FEC  
                                   u1491 08F6                                     u1571 079A  
                                   u1811 0D5E                                     u1731 0BA0  
                                   u1660 0EF4                                     u1580 0852  
                                   u1820 0D94                                     u1740 0BD6  
                                   u1661 0EF0                                     u1581 084C  
                                   u1821 0D90                                     u1741 0BD2  
                                   u1670 0F2A                                     u1590 0854  
                                   u1830 0E30                                     u1750 14D0  
                                   u1671 0F26                                     u1831 0E2C  
                                   u1751 14CC                                     u1680 0F5A  
                                   u1840 0E82                                     u1760 124E  
                                   u1681 0F56                                     u1841 0E7E  
                                   u1761 124A                                     u1850 0ED4  
                                   u1690 0AFE                                     u1770 1286  
                                   u1851 0ED0                                     u1691 0AFA  
                                   u1771 1282                                     u1780 1214  
                                   u1781 1210                                     u1790 11B2  
                                   u1791 11AE                                     u1887 1486  
                                   _RCIF 007CF5                          __end_of_INT_isr 143C  
                                   _data 0055                                     _atoi 0718  
                                   _cont 0040                                     _main 03AC  
                                   fsr2h 000FDA                                     indf1 000FE7  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   fsr2l 000FD9                                     btemp 005F  
                                   prodh 000FF4                                     prodl 000FF3  
                                   start 000E                            __CFG_IESO$OFF 000000  
                        ___fldiv@new_exp 0020                             _PWM_OneshotX 1374  
                           _PWM_OneshotY 1344                            __CFG_MCLRE$ON 000000  
                           ___param_bank 000000   Serial_Escritura_Memoria@direccionFinal 0008  
                     EEPROM_Rx@direccion 0001                          __end_of_Oneshot 13CC  
                          __CFG_PLLDIV$1 000000                 ??_Serial_Lectura_Memoria 001D  
                         __CFG_CCP2MX$ON 000000                            ___fltol@sign1 0030  
                        __end_of___aldiv 0BF8                                    ?_atoi 0008  
                                  ?_main 0001                          __end_of___fldiv 03AC  
                                  _EEADR 000FA9                          __end_of___fltol 0CFE  
                                  _T2CON 000FCA                                    i2l535 1438  
                                  i2l539 13CA                                    _RCREG 000FAE  
                                  _SPBRG 000FAF                                    _PORTB 000F81  
                                  _PORTC 000F82                                    _PORTD 000F83  
                          __CFG_USBDIV$1 000000                                    _TRISD 000F95  
                                  _TXREG 000FAD                            __CFG_PWRT$OFF 000000  
                          __CFG_WRT0$OFF 000000                            __CFG_WRT1$OFF 000000  
                          __CFG_WRT2$OFF 000000                            __CFG_WRT3$OFF 000000  
                         __CFG_EBTR0$OFF 000000                           __CFG_FCMEN$OFF 000000  
                         __CFG_EBTR1$OFF 000000                           __CFG_EBTR2$OFF 000000  
                         __CFG_EBTR3$OFF 000000                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
                         __CFG_EBTRB$OFF 000000                          __end_of_isdigit 1312  
                                  atoi@n 0015                                    atoi@s 0008  
                       __end_of_USART_Rx 14D4                         __end_of_USART_Tx 14AE  
                        __end_of_isspace 12DA                             USART_Tx@data 0001  
                     __size_of_USART_RxS 0056                                    ttemp5 0060  
                                  ttemp6 0063                                    ttemp7 0067  
                                  status 000FD8                                    wtemp8 0060  
                         __CFG_ICPRT$OFF 000000                       __size_of_PWM_InitF 0020  
                     __size_of_PWM_InitS 001E                 __end_of_Motor_Conversion 1162  
                            ?_USART_Init 000F                          __initialization 13CC  
                 ?_Motor_Calcular_PasosX 0002                   ?_Motor_Calcular_PasosY 0002  
             __end_of_PWM_GeneratePulsos 09C8        Serial_DecodificacionX@coordenadaX 001B  
                      __end_of_EEPROM_Rx 14C2                        __end_of_EEPROM_Tx 1344  
                           __end_of_atoi 08A2                             __end_of_main 0564  
                     EEPROM_Tx@direccion 0002                        ?_Actuator_Retrain 0001  
                                 ??_atoi 000A                                   ??_main 003D  
                     ??_Actuator_Retrain 0001                            __activetblptr 000002  
                              ??_INT_isr 0001           ??_Seria_Decodificacion_Memoria 0001  
                                 _ADCON0 000FC2                                   _ADCON1 000FC1  
                                 _EEDATA 000FA8                                   _CCPR1L 000FBE  
                                 _CCPR2L 000FBB                                   _EECON2 000FA7  
                                 i2l2000 13C6                                   i2l2200 1434  
                                 i2l2202 1436                                   i2l2192 141A  
                                 i2l2194 142A                                   i2l2196 142E  
                                 i2l2198 1430                                   i2l1994 13A4  
                                 i2l1996 13B2                                   i2l1998 13C2  
                                 _OSCCON 000FD3                         __end_of___xxtofl 0718  
                         __CFG_XINST$OFF 000000                                ??_Oneshot 0001  
      Serial_DecodificacionY@coordenadaY 001D                                ??___aldiv 0009  
                                 ___wmul 13F2                                ??___fldiv 0017  
                         __CFG_STVREN$ON 000000                                ??___fltol 002C  
                                 clear_0 13D2                                   clear_1 13DE  
               __end_of_Motor_Movimiento 107C                                   _pasosX 004C  
                                 _pasosY 004A                         _coordenada_array 006B  
        __size_of_Serial_Lectura_Memoria 00EC                        __end_of_USART_RxS 1288  
                      __end_of_PWM_InitF 145C                        __end_of_PWM_InitS 147A  
                              ??_isdigit 0003                                ??_isspace 0003  
                                 tblptru 000FF8                      __size_of_USART_Init 0074  
                           ___xxtofl@arg 000B                             ___xxtofl@exp 000A  
                           ___xxtofl@val 0001                               __accesstop 0060  
                __end_of__initialization 13E4                          __CFG_PBADEN$OFF 000000  
             Motor_Conversion@conversion 0034                            ___rparam_used 000001  
                Serial_DecodificacionX@i 001E                  Serial_DecodificacionY@i 0020  
                             ___fltol@f1 0028                           __pcstackCOMRAM 0001  
                              ?_USART_Rx 0001                                ?_USART_Tx 0001  
        Serial_DecodificacionX@pointerCX 0019                         ??_Actuator_Touch 0001  
        Serial_DecodificacionY@pointerCY 0019                               __pbssBANK0 0060  
                 _Serial_Lectura_Memoria 0CFE              Motor_Movimiento@CoordenadaX 0038  
            Motor_Movimiento@CoordenadaY 003A  Motor_Calcular_PasosY@coordenada_converY 0002  
         Serial_Escritura_Memoria@i_1034 000B           Serial_Escritura_Memoria@i_1035 000D  
                                ?___wmul 0001                                  _CCP1CON 000FBD  
                                _CCP2CON 000FBA                               ??_USART_Rx 0001  
                             ??_USART_Tx 0001                   __size_of_Actuator_Hold 0004  
      Serial_Escritura_Memoria@direccion 0007                                ?___xxtofl 0001  
                                _INT_isr 0008                                  i2u88_40 13B2  
                                i2u88_41 13AE                                  i2u89_40 13C2  
                                i2u89_41 13BE                                  i2u98_40 142A  
                                i2u98_41 1426                          __CFG_VREGEN$OFF 000000  
      __size_of_Serial_Escritura_Memoria 00EC                ?_Serial_Escritura_Memoria 0003  
                ??_Motor_Calcular_PasosX 0004                  ??_Motor_Calcular_PasosY 0004  
                           ??_USART_Init 0013                        ?_Motor_Conversion 0032  
                                __Hparam 0000                                  __Lparam 0000  
                                _Oneshot 13A4                       ??_Motor_Conversion 0034  
                                ___aldiv 0AEC                                  ___fldiv 0012  
                                ___fltol 0BF8                          __size_of___wmul 0026  
                              _EEPROM_Rx 14AE                                _EEPROM_Tx 1312  
                         USART_Init@BAUD 000F                                  __pcinit 13CC  
                                __ramtop 0800                                  __ptext0 03AC  
                                __ptext1 1232                                  __ptext2 14C2  
                                __ptext3 107C                                  __ptext4 0AEC  
                                __ptext5 0CFE                                  __ptext6 14AE  
                                __ptext7 0DEA                                  __ptext8 1312  
                                __ptext9 1162    Seria_Decodificacion_Memoria@direccion 0003  
                              _T2CONbits 000FCA                       _PWM_GeneratePulsos 08A2  
                                _isdigit 12DA                               ??___xxtofl 0005  
                           _CoordenadaXX 0044                             _CoordenadaYY 0042  
                       ___aldiv@dividend 0001                                  _isspace 1288  
                                _oneshot 0054                                  atoi@neg 000E  
                     __end_of_USART_Init 10F0                 ??_Serial_DecodificacionX 001B  
               ??_Serial_DecodificacionY 001B                           __pintcode_body 1418  
                    ?_PWM_GeneratePulsos 0003                     end_of_initialization 13E4  
              __size_of_Actuator_Retrain 0004                            __Lmediumconst 0000  
                                int_func 1418                            _Actuator_Hold 14D8  
                      _pasos_convertidos 004E                     _coordenada_anteriorX 0052  
                   _coordenada_anteriorY 0050                                _RCSTAbits 000FAB  
                       ___aldiv@quotient 000B                                  postdec2 000FDD  
                                postinc0 000FEE                                  postinc2 000FDE  
                   ??_PWM_GeneratePulsos 0007                  Motor_Movimiento@Oupcode 003C  
                             ?_EEPROM_Rx 0001                               ?_EEPROM_Tx 0001  
                      ?_Motor_Movimiento 0038                                _PORTBbits 000F81  
                              _PORTCbits 000F82                                _PORTDbits 000F83  
                     ??_Motor_Movimiento 003C                            ___xxtofl@sign 0009  
                              _TRISAbits 000F92                                _USART_RxS 1232  
                              _TRISBbits 000F93                                _TRISCbits 000F94  
                              _TRISDbits 000F95                              ___fldiv@grs 0022  
                            ___fldiv@rem 001B                            EEPROM_Tx@dato 0001  
                              _PWM_InitF 143C                                _PWM_InitS 145C  
                         ?_Actuator_Hold 0001                                _TXSTAbits 000FAC  
                         __end_of___wmul 1418                        __size_of_USART_Rx 0012  
                      __size_of_USART_Tx 0016                      start_initialization 13CC  
                             ?_USART_RxS 0001                        _Direccion_Memoria 0056  
                ?_Serial_Lectura_Memoria 0017                               ?_PWM_InitF 0001  
                             ?_PWM_InitS 0001          __size_of_Serial_DecodificacionX 0062  
        __size_of_Serial_DecodificacionY 006E  Serial_DecodificacionX@string_coordenada 0017  
                          ?_PWM_OneshotX 0001                            ?_PWM_OneshotY 0001  
                               ??___wmul 0005                         __CFG_LPT1OSC$OFF 000000  
                            ??_EEPROM_Rx 0001                              ??_EEPROM_Tx 0002  
Serial_Escritura_Memoria@string_setpoint 0003                                ___fldiv@a 0013  
                              ___fldiv@b 000F         __end_of_Serial_Escritura_Memoria 0ED6  
                            __pbssCOMRAM 0040           __end_of_Serial_Lectura_Memoria 0DEA  
                               ?_INT_isr 0001                        __size_of___xxtofl 01B4  
                     PWM_OneshotX@countX 0001                         _Actuator_Retrain 14D4  
                        ??_Actuator_Hold 0001                       PWM_OneshotY@countY 0001  
                              _atoi$2174 0010                                _atoi$2175 0014  
                              _atoi$2176 0012                           ??_PWM_OneshotX 0003  
                         ??_PWM_OneshotY 0003           __size_of_Motor_Calcular_PasosX 0096  
         __size_of_Motor_Calcular_PasosY 0096            __end_of_Motor_Calcular_PasosX 1002  
          __end_of_Motor_Calcular_PasosY 0F6C                                 ?_Oneshot 0001  
Motor_Calcular_PasosX@coordenada_converX 0002                                __pintcode 0008  
                               ?___aldiv 0001                                 ?___fldiv 000F  
                 _Serial_DecodificacionX 11D0                   _Serial_DecodificacionY 1162  
                               ?___fltol 0028          Serial_Lectura_Memoria@direccion 0029  
                              _coordenaX 0048                                _coordenaY 0046  
              __size_of_Motor_Conversion 0072                                 ?_isdigit 0001  
                               ?_isspace 0001                              ??_USART_RxS 0003  
           Serial_Lectura_Memoria@i_1027 002B             Serial_Lectura_Memoria@i_1028 002C  
                            ??_PWM_InitF 0001                              ??_PWM_InitS 0001  
                __size_of_Actuator_Touch 001E                 PWM_GeneratePulsos@countX 0009  
               PWM_GeneratePulsos@countY 000B                          ___aldiv@divisor 0005  
                        ___aldiv@counter 0009                           ___wmul@product 0005  
                               _LATCbits 000F8B                                 _LATDbits 000F8C  
                               _PIR1bits 000F9E                                 _PIR2bits 000FA1  
                               _RCONbits 000FD0                         __CFG_WDTPS$32768 000000  
        Serial_Lectura_Memoria@pointerCX 0017          Serial_Lectura_Memoria@pointerCY 0019  
        Serial_Lectura_Memoria@pointerCZ 001B                                 _USART_Rx 14C2  
                               _USART_Tx 1498                               _ADCON0bits 000FC2  
                             _ADCON1bits 000FC1                               _ADCON2bits 000FC0  
                      ___wmul@multiplier 0001                      _coordenada_setpoint 0060  
                           _isspace$2192 0007                         __size_of_INT_isr 1434  
                            _INTCON2bits 000FF1                              _INTCON3bits 000FF0  
               _Serial_Escritura_Memoria 0DEA                               USART_RxS@i 0007  
              __size_of_Motor_Movimiento 007A                         USART_RxS@pointer 0001  
                             _EECON1bits 000FA6                                 __Hrparam 0000  
                               __Lrparam 0000                         __size_of_Oneshot 0028  
            __size_of_PWM_GeneratePulsos 0126                         __size_of___aldiv 010C  
                       __size_of___fldiv 039A                         __size_of___fltol 0106  
                Serial_Lectura_Memoria@i 002A                    __CFG_FOSC$INTOSCIO_EC 000000  
                   __end_of_PWM_OneshotX 13A4                     __end_of_PWM_OneshotY 1374  
                               ___xxtofl 0564                         __size_of_isdigit 0038  
                       __size_of_isspace 0052                                 __ptext10 11D0  
                               __ptext11 0718                                 __ptext20 145C  
                               __ptext12 1288                                 __ptext21 143C  
                               __ptext13 12DA                                 __ptext30 14D4  
                               __ptext22 10F0                                 __ptext14 13F2  
                               __ptext31 14D8                                 __ptext23 0564  
                               __ptext15 09C8                                 __ptext24 0BF8  
                               __ptext16 1002                                 __ptext33 13A4  
                               __ptext25 0012                                 __ptext17 08A2  
                               __ptext26 0ED6                                 __ptext18 1344  
                               __ptext27 0F6C                                 __ptext19 1374  
                               __ptext28 1498                                 __ptext29 147A  
                          __size_of_atoi 018A                            __size_of_main 01B8  
                        _USART_Init$2428 0013                                 _oneshotX 0058  
                               _oneshotY 0057                                 int$flags 005F  
               __end_of_Actuator_Retrain 14D8                          USART_RxS@lenght 0006  
                  __CFG_CPUDIV$OSC1_PLL2 000000                         _Motor_Conversion 10F0  
                             _INTCONbits 000FF2                                 isdigit@c 0001  
                               intlevel2 0000                           _Actuator_Touch 147A  
Serial_DecodificacionY@string_coordenada 0017                                 isspace@c 0001  
                ?_Serial_DecodificacionX 0017                  ?_Serial_DecodificacionY 0017  
              Serial_Escritura_Memoria@i 0009        Serial_Lectura_Memoria@coordenadaX 001D  
      Serial_Lectura_Memoria@coordenadaY 0020        Serial_Lectura_Memoria@coordenadaZ 0023  
       Serial_Lectura_Memoria@direccionX 0026         Serial_Lectura_Memoria@direccionY 0027  
       Serial_Lectura_Memoria@direccionZ 0028     __end_of_Seria_Decodificacion_Memoria 0AEC  
  __size_of_Seria_Decodificacion_Memoria 0124             _Seria_Decodificacion_Memoria 09C8  
                           ___aldiv@sign 000A                   __end_of_Actuator_Touch 1498  
             Motor_Conversion@Coordenada 0032                         _Motor_Movimiento 1002  
                  __end_of_Actuator_Hold 14DC           __end_of_Serial_DecodificacionX 1232  
         __end_of_Serial_DecodificacionY 11D0                               _USART_Init 107C  
